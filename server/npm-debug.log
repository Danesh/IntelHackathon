0 info it worked if it ends with ok
1 verbose cli [ '/Users/craignishina/Applications/node/bin/node',
1 verbose cli   '/Users/craignishina/Applications/node/bin/npm',
1 verbose cli   'install' ]
2 info using npm@1.3.24
3 info using node@v0.10.25
4 verbose node symlink /Users/craignishina/Applications/node/bin/node
5 warn package.json iot-server@0.0.1 No repository field.
6 warn package.json iot-server@0.0.1 No README data
7 verbose readDependencies using package.json deps
8 verbose install where, deps [ '/Users/craignishina/Workspace/IntelHackathon/server',
8 verbose install   [ 'express', 'socket.io', 'json', 'ffi' ] ]
9 info preinstall iot-server@0.0.1
10 verbose readDependencies using package.json deps
11 verbose already installed skipping json@* /Users/craignishina/Workspace/IntelHackathon/server
12 verbose already installed skipping express@^3.4.8 /Users/craignishina/Workspace/IntelHackathon/server
13 verbose already installed skipping socket.io@* /Users/craignishina/Workspace/IntelHackathon/server
14 verbose cache add [ 'ffi@*', null ]
15 verbose cache add name=undefined spec="ffi@*" args=["ffi@*",null]
16 verbose parsed url { protocol: null,
16 verbose parsed url   slashes: null,
16 verbose parsed url   auth: null,
16 verbose parsed url   host: null,
16 verbose parsed url   port: null,
16 verbose parsed url   hostname: null,
16 verbose parsed url   hash: null,
16 verbose parsed url   search: null,
16 verbose parsed url   query: null,
16 verbose parsed url   pathname: 'ffi@*',
16 verbose parsed url   path: 'ffi@*',
16 verbose parsed url   href: 'ffi@*' }
17 verbose cache add name="ffi" spec="*" args=["ffi","*"]
18 verbose parsed url { protocol: null,
18 verbose parsed url   slashes: null,
18 verbose parsed url   auth: null,
18 verbose parsed url   host: null,
18 verbose parsed url   port: null,
18 verbose parsed url   hostname: null,
18 verbose parsed url   hash: null,
18 verbose parsed url   search: null,
18 verbose parsed url   query: null,
18 verbose parsed url   pathname: '*',
18 verbose parsed url   path: '*',
18 verbose parsed url   href: '*' }
19 verbose addNamed [ 'ffi', '*' ]
20 verbose addNamed [ null, '*' ]
21 silly lockFile 8a00e9c4-ffi ffi@*
22 verbose lock ffi@* /Users/craignishina/.npm/8a00e9c4-ffi.lock
23 silly addNameRange { name: 'ffi', range: '*', hasData: false }
24 verbose url raw ffi
25 verbose url resolving [ 'https://registry.npmjs.org/', './ffi' ]
26 verbose url resolved https://registry.npmjs.org/ffi
27 info trying registry request attempt 1 at 13:03:22
28 verbose etag "D05W64KEFCQWFDKI7U9XG3RRI"
29 http GET https://registry.npmjs.org/ffi
30 http 304 https://registry.npmjs.org/ffi
31 silly registry.get cb [ 304,
31 silly registry.get   { date: 'Thu, 12 Feb 2015 21:03:22 GMT',
31 silly registry.get     server: 'Apache',
31 silly registry.get     via: '1.1 varnish',
31 silly registry.get     'last-modified': 'Thu, 12 Feb 2015 21:03:22 GMT',
31 silly registry.get     'cache-control': 'max-age=60',
31 silly registry.get     etag: '"D05W64KEFCQWFDKI7U9XG3RRI"',
31 silly registry.get     age: '0',
31 silly registry.get     'x-served-by': 'cache-sjc3128-SJC',
31 silly registry.get     'x-cache': 'HIT',
31 silly registry.get     'x-cache-hits': '1',
31 silly registry.get     'x-timer': 'S1423775002.606047,VS0,VE31',
31 silly registry.get     vary: 'Accept',
31 silly registry.get     'content-length': '0',
31 silly registry.get     'keep-alive': 'timeout=10, max=50',
31 silly registry.get     connection: 'Keep-Alive' } ]
32 verbose etag ffi from cache
33 silly addNameRange number 2 { name: 'ffi', range: '*', hasData: true }
34 silly addNameRange versions [ 'ffi',
34 silly addNameRange   [ '1.0.0',
34 silly addNameRange     '1.0.1',
34 silly addNameRange     '1.0.3',
34 silly addNameRange     '1.0.4',
34 silly addNameRange     '1.0.5',
34 silly addNameRange     '1.0.6',
34 silly addNameRange     '1.0.7',
34 silly addNameRange     '1.1.0',
34 silly addNameRange     '1.1.1',
34 silly addNameRange     '1.1.2',
34 silly addNameRange     '1.1.3',
34 silly addNameRange     '1.2.0',
34 silly addNameRange     '1.2.1',
34 silly addNameRange     '1.2.2',
34 silly addNameRange     '1.2.3',
34 silly addNameRange     '1.2.4',
34 silly addNameRange     '1.2.5',
34 silly addNameRange     '1.2.6',
34 silly addNameRange     '1.2.7' ] ]
35 verbose addNamed [ 'ffi', '1.2.7' ]
36 verbose addNamed [ '1.2.7', '1.2.7' ]
37 silly lockFile b12d65d3-ffi-1-2-7 ffi@1.2.7
38 verbose lock ffi@1.2.7 /Users/craignishina/.npm/b12d65d3-ffi-1-2-7.lock
39 silly lockFile b12d65d3-ffi-1-2-7 ffi@1.2.7
40 silly lockFile b12d65d3-ffi-1-2-7 ffi@1.2.7
41 silly lockFile 8a00e9c4-ffi ffi@*
42 silly lockFile 8a00e9c4-ffi ffi@*
43 silly resolved [ { name: 'ffi',
43 silly resolved     version: '1.2.7',
43 silly resolved     authors:
43 silly resolved      [ 'Rick Branson',
43 silly resolved        'Nathan Rajlich <nathan@tootallnate.net> (http://tootallnate.net)' ],
43 silly resolved     description: 'A foreign function interface (FFI) for Node.js',
43 silly resolved     keywords:
43 silly resolved      [ 'foreign',
43 silly resolved        'function',
43 silly resolved        'interface',
43 silly resolved        'ffi',
43 silly resolved        'libffi',
43 silly resolved        'binding',
43 silly resolved        'c' ],
43 silly resolved     homepage: 'http://github.com/rbranson/node-ffi',
43 silly resolved     engines: { node: '>=0.6.0' },
43 silly resolved     main: './lib/ffi',
43 silly resolved     dependencies: { bindings: '*', debug: '*', ref: '*', 'ref-struct': '*' },
43 silly resolved     devDependencies: { mocha: '*', 'ref-array': '*' },
43 silly resolved     scripts:
43 silly resolved      { test: 'node-gyp rebuild --directory test && mocha -gc --reporter spec',
43 silly resolved        install: 'node-gyp rebuild' },
43 silly resolved     repository: { type: 'git', url: 'http://github.com/rbranson/node-ffi.git' },
43 silly resolved     bugs: { url: 'http://github.com/rbranson/node-ffi/issues' },
43 silly resolved     gypfile: true,
43 silly resolved     readme: 'node-ffi\n========\n### Node.js Foreign Function Interface\n[![Build Status](https://travis-ci.org/rbranson/node-ffi.svg?branch=master)](https://travis-ci.org/rbranson/node-ffi)\n\n`node-ffi` is a Node.js addon for loading and calling dynamic libraries using\npure JavaScript. It can be used to create bindings to native libraries without\nwriting any C++ code.\n\nIt also simplifies the augmentation of node.js with C code as it takes care of\nhandling the translation of types across JavaScript and C, which can add reams\nof boilerplate code to your otherwise simple C. See the `example/factorial`\nfor an example of this use case.\n\n**WARNING**: node-ffi assumes you know what you\'re doing. You can pretty easily\ncreate situations where you will segfault the interpreter and unless you\'ve got\nC debugger skills, you probably won\'t know what\'s going on.\n\nExample\n-------\n\n``` js\nvar ffi = require(\'ffi\');\n\nvar libm = ffi.Library(\'libm\', {\n  \'ceil\': [ \'double\', [ \'double\' ] ]\n});\nlibm.ceil(1.5); // 2\n\n// You can also access just functions in the current process by passing a null\nvar current = ffi.Library(null, {\n  \'atoi\': [ \'int\', [ \'string\' ] ]\n});\ncurrent.atoi(\'1234\'); // 1234\n```\n\nFor a more detailed introduction, see the [node-ffi tutorial page][tutorial].\n\nRequirements\n------------\n\n * Linux, OS X, Windows, or Solaris.\n * `libffi` comes bundled with node-ffi; it does *not* need to be installed on your system.\n * The current version is tested to run on node v0.6, v0.8, v0.9 and v0.10.\n\nInstallation\n------------\n\nMake sure you\'ve installed all the [necessary build\ntools](https://github.com/TooTallNate/node-gyp#installation) for your platform,\nthen invoke:\n\n``` bash\n$ npm install ffi\n```\n\nSource Install / Manual Compilation\n-----------------------------------\n\nTo compile from source it\'s easiest to use\n[`node-gyp`](https://github.com/TooTallNate/node-gyp):\n\n``` bash\n$ npm install -g node-gyp\n```\n\nNow you can compile `node-ffi`:\n\n``` bash\n$ git clone git://github.com/rbranson/node-ffi.git\n$ cd node-ffi\n$ node-gyp rebuild\n```\n\nTypes\n-----\n\nThe types that you specify in function declarations correspond to ref\'s types\nsystem. So [see its docs][ref-types] for\na reference if you are unfamiliar.\n\nV8 and 64-bit Types\n-------------------\n\nInternally, V8 stores integers that will fit into a 32-bit space in a 32-bit\ninteger, and those that fall outside of this get put into double-precision\nfloating point numbers. This is problematic because FP numbers are imprecise.\nTo get around this, the methods in node-ffi that deal with 64-bit integers return\nstrings and can accept strings as parameters.\n\nCall Overhead\n-------------\n\nThere is non-trivial overhead associated with FFI calls. Comparing a hard-coded\nbinding version of `strtoul()` to an FFI version of `strtoul()` shows that the\nnative hard-coded binding is orders of magnitude faster. So don\'t just use the\nC version of a function just because it\'s faster. There\'s a significant cost in\nFFI calls, so make them worth it.\n\nLicense\n-------\n\nMIT License. See the `LICENSE` file.\n\n[v1apichanges]: https://github.com/rbranson/node-ffi/wiki/API-changes-from-v0.x-to-v1.x\n[tutorial]: https://github.com/rbranson/node-ffi/wiki/Node-FFI-Tutorial\n[ref-types]: https://github.com/TooTallNate/ref#built-in-types\n',
43 silly resolved     readmeFilename: 'README.md',
43 silly resolved     _id: 'ffi@1.2.7',
43 silly resolved     _from: 'ffi@*' } ]
44 info install ffi@1.2.7 into /Users/craignishina/Workspace/IntelHackathon/server
45 info installOne ffi@1.2.7
46 info /Users/craignishina/Workspace/IntelHackathon/server/node_modules/ffi unbuild
47 verbose tar unpack /Users/craignishina/.npm/ffi/1.2.7/package.tgz
48 silly lockFile 39f268fe-ackathon-server-node-modules-ffi tar:///Users/craignishina/Workspace/IntelHackathon/server/node_modules/ffi
49 verbose lock tar:///Users/craignishina/Workspace/IntelHackathon/server/node_modules/ffi /Users/craignishina/.npm/39f268fe-ackathon-server-node-modules-ffi.lock
50 silly lockFile b0d81482-ishina-npm-ffi-1-2-7-package-tgz tar:///Users/craignishina/.npm/ffi/1.2.7/package.tgz
51 verbose lock tar:///Users/craignishina/.npm/ffi/1.2.7/package.tgz /Users/craignishina/.npm/b0d81482-ishina-npm-ffi-1-2-7-package-tgz.lock
52 silly gunzTarPerm modes [ '755', '644' ]
53 silly gunzTarPerm extractEntry package.json
54 silly gunzTarPerm extractEntry .npmignore
55 silly gunzTarPerm extractEntry README.md
56 silly gunzTarPerm extractEntry LICENSE
57 silly gunzTarPerm extractEntry deps/dlfcn-win32/README
58 silly gunzTarPerm extractEntry deps/dlfcn-win32/COPYING
59 silly gunzTarPerm extractEntry deps/dlfcn-win32/configure
60 silly gunzTarPerm extractEntry deps/dlfcn-win32/dlfcn.c
61 silly gunzTarPerm extractEntry deps/dlfcn-win32/dlfcn.gyp
62 silly gunzTarPerm extractEntry deps/dlfcn-win32/dlfcn.h
63 silly gunzTarPerm extractEntry deps/dlfcn-win32/test.c
64 silly gunzTarPerm extractEntry deps/dlfcn-win32/testdll.c
65 silly gunzTarPerm extractEntry deps/libffi/.npmignore
66 silly gunzTarPerm extractEntry deps/libffi/README
67 silly gunzTarPerm extractEntry deps/libffi/LICENSE
68 silly gunzTarPerm extractEntry deps/libffi/ChangeLog.libgcj
69 silly gunzTarPerm extractEntry deps/libffi/ChangeLog.v1
70 silly gunzTarPerm extractEntry deps/libffi/texinfo.tex
71 silly gunzTarPerm extractEntry deps/libffi/Makefile.am
72 silly gunzTarPerm extractEntry deps/libffi/Makefile.in
73 silly gunzTarPerm extractEntry deps/libffi/ChangeLog.libffi
74 silly gunzTarPerm extractEntry deps/libffi/acinclude.m4
75 silly gunzTarPerm extractEntry deps/libffi/aclocal.m4
76 silly gunzTarPerm extractEntry deps/libffi/closure.c
77 silly gunzTarPerm extractEntry deps/libffi/compile
78 silly gunzTarPerm extractEntry deps/libffi/config/README
79 silly gunzTarPerm extractEntry deps/libffi/config/freebsd/ia32/ffi.h
80 silly gunzTarPerm extractEntry deps/libffi/config/freebsd/ia32/fficonfig.h
81 silly gunzTarPerm extractEntry deps/libffi/config/freebsd/ia32/ffitarget.h
82 silly gunzTarPerm extractEntry deps/libffi/config/freebsd/x64/ffi.h
83 silly gunzTarPerm extractEntry deps/libffi/config/freebsd/x64/fficonfig.h
84 silly gunzTarPerm extractEntry deps/libffi/config/freebsd/x64/ffitarget.h
85 silly gunzTarPerm extractEntry deps/libffi/config/linux/arm/ffi.h
86 silly gunzTarPerm extractEntry deps/libffi/config/linux/arm/fficonfig.h
87 silly gunzTarPerm extractEntry deps/libffi/config/linux/arm/ffitarget.h
88 silly gunzTarPerm extractEntry deps/libffi/config/linux/arm/flags.txt
89 silly gunzTarPerm extractEntry deps/libffi/config/linux/ia32/ffi.h
90 silly gunzTarPerm extractEntry deps/libffi/config/linux/ia32/fficonfig.h
91 silly gunzTarPerm extractEntry deps/libffi/config/linux/ia32/ffitarget.h
92 silly gunzTarPerm extractEntry deps/libffi/config/linux/ia32/flags.txt
93 silly gunzTarPerm extractEntry deps/libffi/config/linux/x64/ffi.h
94 silly gunzTarPerm extractEntry deps/libffi/config/linux/x64/fficonfig.h
95 silly gunzTarPerm extractEntry deps/libffi/config/linux/x64/ffitarget.h
96 silly gunzTarPerm extractEntry deps/libffi/config/linux/x64/flags.txt
97 silly gunzTarPerm extractEntry deps/libffi/config/mac/ia32/ffi.h
98 silly gunzTarPerm extractEntry deps/libffi/config/mac/ia32/fficonfig.h
99 silly gunzTarPerm extractEntry deps/libffi/config/mac/ia32/ffitarget.h
100 silly gunzTarPerm extractEntry deps/libffi/config/mac/ia32/flags.txt
101 silly gunzTarPerm extractEntry deps/libffi/config/mac/x64/ffi.h
102 silly gunzTarPerm extractEntry deps/libffi/config/mac/x64/fficonfig.h
103 silly gunzTarPerm extractEntry deps/libffi/config/mac/x64/ffitarget.h
104 silly gunzTarPerm extractEntry deps/libffi/config/mac/x64/flags.txt
105 silly gunzTarPerm extractEntry deps/libffi/config/solaris/ia32/ffi.h
106 silly gunzTarPerm extractEntry deps/libffi/config/solaris/ia32/fficonfig.h
107 silly gunzTarPerm extractEntry deps/libffi/config/solaris/ia32/ffitarget.h
108 silly gunzTarPerm extractEntry deps/libffi/config/solaris/ia32/flags.txt
109 silly gunzTarPerm extractEntry deps/libffi/config/solaris/x64/ffi.h
110 silly gunzTarPerm extractEntry deps/libffi/config/solaris/x64/fficonfig.h
111 silly gunzTarPerm extractEntry deps/libffi/config/solaris/x64/ffitarget.h
112 silly gunzTarPerm extractEntry deps/libffi/config/solaris/x64/flags.txt
113 silly gunzTarPerm extractEntry deps/libffi/config/win/ia32/ffi.h
114 silly gunzTarPerm extractEntry deps/libffi/config/win/ia32/fficonfig.h
115 silly gunzTarPerm extractEntry deps/libffi/config/win/ia32/ffitarget.h
116 silly gunzTarPerm extractEntry deps/libffi/config/win/ia32/flags.txt
117 silly gunzTarPerm extractEntry deps/libffi/config/win/x64/ffi.h
118 silly gunzTarPerm extractEntry deps/libffi/config/win/x64/fficonfig.h
119 silly gunzTarPerm extractEntry deps/libffi/config/win/x64/ffitarget.h
120 silly gunzTarPerm extractEntry deps/libffi/config.guess
121 silly gunzTarPerm extractEntry deps/libffi/config.sub
122 silly gunzTarPerm extractEntry deps/libffi/configure
123 silly gunzTarPerm extractEntry deps/libffi/configure.ac
124 silly gunzTarPerm extractEntry deps/libffi/configure.host
125 silly gunzTarPerm extractEntry deps/libffi/depcomp
126 silly gunzTarPerm extractEntry deps/libffi/ChangeLog
127 silly gunzTarPerm extractEntry deps/libffi/fficonfig.h.in
128 silly gunzTarPerm extractEntry deps/libffi/generate-ios-source-and-headers.py
129 silly gunzTarPerm extractEntry deps/libffi/generate-osx-source-and-headers.py
130 silly gunzTarPerm extractEntry deps/libffi/include/Makefile.am
131 silly gunzTarPerm extractEntry deps/libffi/include/Makefile.in
132 silly gunzTarPerm extractEntry deps/libffi/include/ffi.h.in
133 silly gunzTarPerm extractEntry deps/libffi/include/ffi_common.h
134 silly gunzTarPerm extractEntry deps/libffi/install-sh
135 silly gunzTarPerm extractEntry deps/libffi/libffi.gyp
136 silly gunzTarPerm extractEntry deps/libffi/libffi.pc.in
137 silly gunzTarPerm extractEntry deps/libffi/libffi.xcodeproj/project.pbxproj
138 silly gunzTarPerm extractEntry deps/libffi/libtool-version
139 silly gunzTarPerm extractEntry deps/libffi/ltmain.sh
140 silly gunzTarPerm extractEntry deps/libffi/m4/ax_gcc_archflag.m4
141 silly gunzTarPerm extractEntry deps/libffi/m4/asmcfi.m4
142 silly gunzTarPerm extractEntry deps/libffi/m4/ax_cflags_warn_all.m4
143 silly gunzTarPerm extractEntry deps/libffi/m4/ax_compiler_vendor.m4
144 silly gunzTarPerm extractEntry deps/libffi/m4/ax_configure_args.m4
145 silly gunzTarPerm extractEntry deps/libffi/m4/ax_enable_builddir.m4
146 silly gunzTarPerm extractEntry deps/libffi/m4/ax_cc_maxopt.m4
147 silly gunzTarPerm extractEntry deps/libffi/m4/ax_gcc_x86_cpuid.m4
148 silly gunzTarPerm extractEntry deps/libffi/m4/libtool.m4
149 silly gunzTarPerm extractEntry deps/libffi/m4/ltoptions.m4
150 silly gunzTarPerm extractEntry deps/libffi/m4/ltsugar.m4
151 silly gunzTarPerm extractEntry deps/libffi/m4/ltversion.m4
152 silly gunzTarPerm extractEntry deps/libffi/m4/lt~obsolete.m4
153 silly gunzTarPerm extractEntry deps/libffi/man/Makefile.am
154 silly gunzTarPerm extractEntry deps/libffi/man/Makefile.in
155 silly gunzTarPerm extractEntry deps/libffi/man/ffi.3
156 silly gunzTarPerm extractEntry deps/libffi/man/ffi_call.3
157 silly gunzTarPerm extractEntry deps/libffi/man/ffi_prep_cif.3
158 silly gunzTarPerm extractEntry deps/libffi/man/ffi_prep_cif_var.3
159 silly gunzTarPerm extractEntry deps/libffi/mdate-sh
160 silly gunzTarPerm extractEntry deps/libffi/missing
161 silly gunzTarPerm extractEntry deps/libffi/msvcc.sh
162 silly gunzTarPerm extractEntry deps/libffi/src/mips/ffi.c
163 silly gunzTarPerm extractEntry deps/libffi/src/mips/ffitarget.h
164 silly gunzTarPerm extractEntry deps/libffi/src/mips/n32.S
165 silly gunzTarPerm extractEntry deps/libffi/src/mips/o32.S
166 silly gunzTarPerm extractEntry deps/libffi/src/alpha/ffi.c
167 silly gunzTarPerm extractEntry deps/libffi/src/alpha/ffitarget.h
168 silly gunzTarPerm extractEntry deps/libffi/src/alpha/osf.S
169 silly gunzTarPerm extractEntry deps/libffi/src/avr32/ffi.c
170 silly gunzTarPerm extractEntry deps/libffi/src/avr32/ffitarget.h
171 silly gunzTarPerm extractEntry deps/libffi/src/avr32/sysv.S
172 silly gunzTarPerm extractEntry deps/libffi/src/closures.c
173 silly gunzTarPerm extractEntry deps/libffi/src/cris/ffi.c
174 silly gunzTarPerm extractEntry deps/libffi/src/cris/ffitarget.h
175 silly gunzTarPerm extractEntry deps/libffi/src/cris/sysv.S
176 silly gunzTarPerm extractEntry deps/libffi/src/debug.c
177 silly gunzTarPerm extractEntry deps/libffi/src/dlmalloc.c
178 silly gunzTarPerm extractEntry deps/libffi/src/frv/eabi.S
179 silly gunzTarPerm extractEntry deps/libffi/src/frv/ffi.c
180 silly gunzTarPerm extractEntry deps/libffi/src/frv/ffitarget.h
181 silly gunzTarPerm extractEntry deps/libffi/src/ia64/ffi.c
182 silly gunzTarPerm extractEntry deps/libffi/src/ia64/ffitarget.h
183 silly gunzTarPerm extractEntry deps/libffi/src/ia64/ia64_flags.h
184 silly gunzTarPerm extractEntry deps/libffi/src/ia64/unix.S
185 silly gunzTarPerm extractEntry deps/libffi/src/java_raw_api.c
186 silly gunzTarPerm extractEntry deps/libffi/src/m32r/ffi.c
187 silly gunzTarPerm extractEntry deps/libffi/src/m32r/ffitarget.h
188 silly gunzTarPerm extractEntry deps/libffi/src/m32r/sysv.S
189 silly gunzTarPerm extractEntry deps/libffi/src/m68k/ffi.c
190 silly gunzTarPerm extractEntry deps/libffi/src/m68k/ffitarget.h
191 silly gunzTarPerm extractEntry deps/libffi/src/m68k/sysv.S
192 silly gunzTarPerm extractEntry deps/libffi/src/arm/ffi.c
193 silly gunzTarPerm extractEntry deps/libffi/src/arm/ffitarget.h
194 silly gunzTarPerm extractEntry deps/libffi/src/arm/gentramp.sh
195 silly gunzTarPerm extractEntry deps/libffi/src/arm/sysv.S
196 silly gunzTarPerm extractEntry deps/libffi/src/arm/trampoline.S
197 silly gunzTarPerm extractEntry deps/libffi/src/moxie/eabi.S
198 silly gunzTarPerm extractEntry deps/libffi/src/moxie/ffi.c
199 silly gunzTarPerm extractEntry deps/libffi/src/pa/ffi.c
200 silly gunzTarPerm extractEntry deps/libffi/src/pa/ffitarget.h
201 silly gunzTarPerm extractEntry deps/libffi/src/pa/hpux32.S
202 silly gunzTarPerm extractEntry deps/libffi/src/pa/linux.S
203 silly gunzTarPerm extractEntry deps/libffi/src/powerpc/ffi_darwin.c
204 silly gunzTarPerm extractEntry deps/libffi/src/powerpc/aix.S
205 silly gunzTarPerm extractEntry deps/libffi/src/powerpc/asm.h
206 silly gunzTarPerm extractEntry deps/libffi/src/powerpc/darwin.S
207 silly gunzTarPerm extractEntry deps/libffi/src/powerpc/darwin_closure.S
208 silly gunzTarPerm extractEntry deps/libffi/src/powerpc/ffi.c
209 silly gunzTarPerm extractEntry deps/libffi/src/powerpc/aix_closure.S
210 silly gunzTarPerm extractEntry deps/libffi/src/powerpc/ffitarget.h
211 silly gunzTarPerm extractEntry deps/libffi/src/powerpc/linux64.S
212 silly gunzTarPerm extractEntry deps/libffi/src/powerpc/linux64_closure.S
213 silly gunzTarPerm extractEntry deps/libffi/src/powerpc/ppc_closure.S
214 silly gunzTarPerm extractEntry deps/libffi/src/powerpc/sysv.S
215 silly gunzTarPerm extractEntry deps/libffi/src/prep_cif.c
216 silly gunzTarPerm extractEntry deps/libffi/src/raw_api.c
217 silly gunzTarPerm extractEntry deps/libffi/src/s390/ffi.c
218 silly gunzTarPerm extractEntry deps/libffi/src/s390/ffitarget.h
219 silly gunzTarPerm extractEntry deps/libffi/src/s390/sysv.S
220 silly gunzTarPerm extractEntry deps/libffi/src/sh/ffi.c
221 silly gunzTarPerm extractEntry deps/libffi/src/sh/ffitarget.h
222 silly gunzTarPerm extractEntry deps/libffi/src/sh/sysv.S
223 silly gunzTarPerm extractEntry deps/libffi/src/sh64/ffi.c
224 silly gunzTarPerm extractEntry deps/libffi/src/sh64/ffitarget.h
225 silly gunzTarPerm extractEntry deps/libffi/src/sh64/sysv.S
226 silly gunzTarPerm extractEntry deps/libffi/src/sparc/ffi.c
227 silly gunzTarPerm extractEntry deps/libffi/src/sparc/ffitarget.h
228 silly gunzTarPerm extractEntry deps/libffi/src/sparc/v8.S
229 silly gunzTarPerm extractEntry deps/libffi/src/sparc/v9.S
230 silly gunzTarPerm extractEntry deps/libffi/src/types.c
231 silly gunzTarPerm extractEntry deps/libffi/src/x86/sysv.S
232 silly gunzTarPerm extractEntry deps/libffi/src/x86/darwin.S
233 silly gunzTarPerm extractEntry deps/libffi/src/x86/ffi.c
234 silly gunzTarPerm extractEntry deps/libffi/src/x86/ffi64.c
235 silly gunzTarPerm extractEntry deps/libffi/src/x86/ffitarget.h
236 silly gunzTarPerm extractEntry deps/libffi/src/x86/freebsd.S
237 silly gunzTarPerm extractEntry deps/libffi/src/x86/darwin64.S
238 silly gunzTarPerm extractEntry deps/libffi/src/x86/unix64.S
239 silly gunzTarPerm extractEntry deps/libffi/src/x86/win32.S
240 silly gunzTarPerm extractEntry deps/libffi/src/x86/win32.asm
241 silly gunzTarPerm extractEntry deps/libffi/src/x86/win64.S
242 silly gunzTarPerm extractEntry deps/libffi/src/x86/win64.asm
243 silly gunzTarPerm extractEntry deps/libffi/test.c
244 silly gunzTarPerm extractEntry deps/libffi/testsuite/Makefile.am
245 silly gunzTarPerm extractEntry deps/libffi/testsuite/Makefile.in
246 silly gunzTarPerm extractEntry deps/libffi/testsuite/config/default.exp
247 silly gunzTarPerm extractEntry deps/libffi/testsuite/lib/libffi.exp
248 silly gunzTarPerm extractEntry deps/libffi/testsuite/lib/target-libpath.exp
249 silly gunzTarPerm extractEntry deps/libffi/testsuite/lib/wrapper.exp
250 silly gunzTarPerm extractEntry deps/libffi/testsuite/libffi.call/cls_ulonglong.c
251 silly gunzTarPerm extractEntry deps/libffi/testsuite/libffi.call/a.out
252 silly gunzTarPerm extractEntry deps/libffi/testsuite/libffi.call/closure_fn0.c
253 silly gunzTarPerm extractEntry deps/libffi/testsuite/libffi.call/closure_fn1.c
254 silly gunzTarPerm extractEntry deps/libffi/testsuite/libffi.call/closure_fn2.c
255 silly gunzTarPerm extractEntry deps/libffi/testsuite/libffi.call/closure_fn3.c
256 silly gunzTarPerm extractEntry deps/libffi/testsuite/libffi.call/closure_fn4.c
257 silly gunzTarPerm extractEntry deps/libffi/testsuite/libffi.call/closure_fn5.c
258 silly gunzTarPerm extractEntry deps/libffi/testsuite/libffi.call/closure_fn6.c
259 silly gunzTarPerm extractEntry deps/libffi/testsuite/libffi.call/closure_loc_fn0.c
260 silly gunzTarPerm extractEntry deps/libffi/testsuite/libffi.call/closure_stdcall.c
261 silly gunzTarPerm extractEntry deps/libffi/testsuite/libffi.call/closure_thiscall.c
262 silly gunzTarPerm extractEntry deps/libffi/testsuite/libffi.call/cls_12byte.c
263 silly gunzTarPerm extractEntry deps/libffi/testsuite/libffi.call/cls_16byte.c
264 silly gunzTarPerm extractEntry deps/libffi/testsuite/libffi.call/cls_18byte.c
265 silly gunzTarPerm extractEntry deps/libffi/testsuite/libffi.call/cls_19byte.c
266 silly gunzTarPerm extractEntry deps/libffi/testsuite/libffi.call/cls_1_1byte.c
267 silly gunzTarPerm extractEntry deps/libffi/testsuite/libffi.call/cls_20byte.c
268 silly gunzTarPerm extractEntry deps/libffi/testsuite/libffi.call/cls_20byte1.c
269 silly gunzTarPerm extractEntry deps/libffi/testsuite/libffi.call/cls_24byte.c
270 silly gunzTarPerm extractEntry deps/libffi/testsuite/libffi.call/cls_2byte.c
271 silly gunzTarPerm extractEntry deps/libffi/testsuite/libffi.call/cls_3_1byte.c
272 silly gunzTarPerm extractEntry deps/libffi/testsuite/libffi.call/cls_3byte1.c
273 silly gunzTarPerm extractEntry deps/libffi/testsuite/libffi.call/cls_3byte2.c
274 silly gunzTarPerm extractEntry deps/libffi/testsuite/libffi.call/cls_4_1byte.c
275 silly gunzTarPerm extractEntry deps/libffi/testsuite/libffi.call/cls_4byte.c
276 silly gunzTarPerm extractEntry deps/libffi/testsuite/libffi.call/cls_5_1_byte.c
277 silly gunzTarPerm extractEntry deps/libffi/testsuite/libffi.call/cls_5byte.c
278 silly gunzTarPerm extractEntry deps/libffi/testsuite/libffi.call/cls_64byte.c
279 silly gunzTarPerm extractEntry deps/libffi/testsuite/libffi.call/cls_6_1_byte.c
280 silly gunzTarPerm extractEntry deps/libffi/testsuite/libffi.call/cls_6byte.c
281 silly gunzTarPerm extractEntry deps/libffi/testsuite/libffi.call/cls_7_1_byte.c
282 silly gunzTarPerm extractEntry deps/libffi/testsuite/libffi.call/cls_7byte.c
283 silly gunzTarPerm extractEntry deps/libffi/testsuite/libffi.call/cls_8byte.c
284 silly gunzTarPerm extractEntry deps/libffi/testsuite/libffi.call/cls_9byte1.c
285 silly gunzTarPerm extractEntry deps/libffi/testsuite/libffi.call/cls_9byte2.c
286 silly gunzTarPerm extractEntry deps/libffi/testsuite/libffi.call/cls_align_double.c
287 silly gunzTarPerm extractEntry deps/libffi/testsuite/libffi.call/cls_align_float.c
288 silly gunzTarPerm extractEntry deps/libffi/testsuite/libffi.call/cls_align_longdouble.c
289 silly gunzTarPerm extractEntry deps/libffi/testsuite/libffi.call/cls_align_longdouble_split.c
290 silly gunzTarPerm extractEntry deps/libffi/testsuite/libffi.call/cls_align_longdouble_split2.c
291 silly gunzTarPerm extractEntry deps/libffi/testsuite/libffi.call/cls_align_pointer.c
292 silly gunzTarPerm extractEntry deps/libffi/testsuite/libffi.call/cls_align_sint16.c
293 silly gunzTarPerm extractEntry deps/libffi/testsuite/libffi.call/cls_align_sint32.c
294 silly gunzTarPerm extractEntry deps/libffi/testsuite/libffi.call/cls_align_sint64.c
295 silly gunzTarPerm extractEntry deps/libffi/testsuite/libffi.call/cls_align_uint16.c
296 silly gunzTarPerm extractEntry deps/libffi/testsuite/libffi.call/cls_align_uint32.c
297 silly gunzTarPerm extractEntry deps/libffi/testsuite/libffi.call/cls_align_uint64.c
298 silly gunzTarPerm extractEntry deps/libffi/testsuite/libffi.call/cls_dbls_struct.c
299 silly gunzTarPerm extractEntry deps/libffi/testsuite/libffi.call/cls_double.c
300 silly gunzTarPerm extractEntry deps/libffi/testsuite/libffi.call/cls_double_va.c
301 silly gunzTarPerm extractEntry deps/libffi/testsuite/libffi.call/cls_float.c
302 silly gunzTarPerm extractEntry deps/libffi/testsuite/libffi.call/cls_longdouble.c
303 silly gunzTarPerm extractEntry deps/libffi/testsuite/libffi.call/cls_longdouble_va.c
304 silly gunzTarPerm extractEntry deps/libffi/testsuite/libffi.call/cls_multi_schar.c
305 silly gunzTarPerm extractEntry deps/libffi/testsuite/libffi.call/cls_multi_sshort.c
306 silly gunzTarPerm extractEntry deps/libffi/testsuite/libffi.call/cls_multi_sshortchar.c
307 silly gunzTarPerm extractEntry deps/libffi/testsuite/libffi.call/cls_multi_uchar.c
308 silly gunzTarPerm extractEntry deps/libffi/testsuite/libffi.call/cls_multi_ushort.c
309 silly gunzTarPerm extractEntry deps/libffi/testsuite/libffi.call/cls_multi_ushortchar.c
310 silly gunzTarPerm extractEntry deps/libffi/testsuite/libffi.call/cls_pointer.c
311 silly gunzTarPerm extractEntry deps/libffi/testsuite/libffi.call/cls_pointer_stack.c
312 silly gunzTarPerm extractEntry deps/libffi/testsuite/libffi.call/cls_schar.c
313 silly gunzTarPerm extractEntry deps/libffi/testsuite/libffi.call/cls_sint.c
314 silly gunzTarPerm extractEntry deps/libffi/testsuite/libffi.call/cls_sshort.c
315 silly gunzTarPerm extractEntry deps/libffi/testsuite/libffi.call/cls_uchar.c
316 silly gunzTarPerm extractEntry deps/libffi/testsuite/libffi.call/cls_uint.c
317 silly gunzTarPerm extractEntry deps/libffi/testsuite/libffi.call/call.exp
318 silly gunzTarPerm extractEntry deps/libffi/testsuite/libffi.call/cls_ushort.c
319 silly gunzTarPerm extractEntry deps/libffi/testsuite/libffi.call/err_bad_abi.c
320 silly gunzTarPerm extractEntry deps/libffi/testsuite/libffi.call/err_bad_typedef.c
321 silly gunzTarPerm extractEntry deps/libffi/testsuite/libffi.call/fastthis1_win32.c
322 silly gunzTarPerm extractEntry deps/libffi/testsuite/libffi.call/fastthis2_win32.c
323 silly gunzTarPerm extractEntry deps/libffi/testsuite/libffi.call/fastthis3_win32.c
324 silly gunzTarPerm extractEntry deps/libffi/testsuite/libffi.call/ffitest.h
325 silly gunzTarPerm extractEntry deps/libffi/testsuite/libffi.call/float.c
326 silly gunzTarPerm extractEntry deps/libffi/testsuite/libffi.call/float1.c
327 silly gunzTarPerm extractEntry deps/libffi/testsuite/libffi.call/float2.c
328 silly gunzTarPerm extractEntry deps/libffi/testsuite/libffi.call/float3.c
329 silly gunzTarPerm extractEntry deps/libffi/testsuite/libffi.call/float4.c
330 silly gunzTarPerm extractEntry deps/libffi/testsuite/libffi.call/float_va.c
331 silly gunzTarPerm extractEntry deps/libffi/testsuite/libffi.call/huge_struct.c
332 silly gunzTarPerm extractEntry deps/libffi/testsuite/libffi.call/many.c
333 silly gunzTarPerm extractEntry deps/libffi/testsuite/libffi.call/many2.c
334 silly gunzTarPerm extractEntry deps/libffi/testsuite/libffi.call/many2_win32.c
335 silly gunzTarPerm extractEntry deps/libffi/testsuite/libffi.call/many_win32.c
336 silly gunzTarPerm extractEntry deps/libffi/testsuite/libffi.call/negint.c
337 silly gunzTarPerm extractEntry deps/libffi/testsuite/libffi.call/nested_struct.c
338 silly gunzTarPerm extractEntry deps/libffi/testsuite/libffi.call/nested_struct1.c
339 silly gunzTarPerm extractEntry deps/libffi/testsuite/libffi.call/nested_struct10.c
340 silly gunzTarPerm extractEntry deps/libffi/testsuite/libffi.call/nested_struct2.c
341 silly gunzTarPerm extractEntry deps/libffi/testsuite/libffi.call/nested_struct3.c
342 silly gunzTarPerm extractEntry deps/libffi/testsuite/libffi.call/nested_struct4.c
343 silly gunzTarPerm extractEntry deps/libffi/testsuite/libffi.call/nested_struct5.c
344 silly gunzTarPerm extractEntry deps/libffi/testsuite/libffi.call/nested_struct6.c
345 silly gunzTarPerm extractEntry deps/libffi/testsuite/libffi.call/nested_struct7.c
346 silly gunzTarPerm extractEntry deps/libffi/testsuite/libffi.call/nested_struct8.c
347 silly gunzTarPerm extractEntry deps/libffi/testsuite/libffi.call/nested_struct9.c
348 silly gunzTarPerm extractEntry deps/libffi/testsuite/libffi.call/problem1.c
349 silly gunzTarPerm extractEntry deps/libffi/testsuite/libffi.call/promotion.c
350 silly gunzTarPerm extractEntry deps/libffi/testsuite/libffi.call/pyobjc-tc.c
351 silly gunzTarPerm extractEntry deps/libffi/testsuite/libffi.call/return_dbl.c
352 silly gunzTarPerm extractEntry deps/libffi/testsuite/libffi.call/return_dbl1.c
353 silly gunzTarPerm extractEntry deps/libffi/testsuite/libffi.call/return_dbl2.c
354 silly gunzTarPerm extractEntry deps/libffi/testsuite/libffi.call/return_fl.c
355 silly gunzTarPerm extractEntry deps/libffi/testsuite/libffi.call/return_fl1.c
356 silly gunzTarPerm extractEntry deps/libffi/testsuite/libffi.call/return_fl2.c
357 silly gunzTarPerm extractEntry deps/libffi/testsuite/libffi.call/return_fl3.c
358 silly gunzTarPerm extractEntry deps/libffi/testsuite/libffi.call/return_ldl.c
359 silly gunzTarPerm extractEntry deps/libffi/testsuite/libffi.call/return_ll.c
360 silly gunzTarPerm extractEntry deps/libffi/testsuite/libffi.call/return_ll1.c
361 silly gunzTarPerm extractEntry deps/libffi/testsuite/libffi.call/return_sc.c
362 silly gunzTarPerm extractEntry deps/libffi/testsuite/libffi.call/return_sl.c
363 silly gunzTarPerm extractEntry deps/libffi/testsuite/libffi.call/return_uc.c
364 silly gunzTarPerm extractEntry deps/libffi/testsuite/libffi.call/return_ul.c
365 silly gunzTarPerm extractEntry deps/libffi/testsuite/libffi.call/stret_large.c
366 silly gunzTarPerm extractEntry deps/libffi/testsuite/libffi.call/stret_large2.c
367 silly gunzTarPerm extractEntry deps/libffi/testsuite/libffi.call/stret_medium.c
368 silly gunzTarPerm extractEntry deps/libffi/testsuite/libffi.call/stret_medium2.c
369 silly gunzTarPerm extractEntry deps/libffi/testsuite/libffi.call/strlen.c
370 silly gunzTarPerm extractEntry deps/libffi/testsuite/libffi.call/strlen2_win32.c
371 silly gunzTarPerm extractEntry deps/libffi/testsuite/libffi.call/strlen_win32.c
372 silly gunzTarPerm extractEntry deps/libffi/testsuite/libffi.call/struct1.c
373 silly gunzTarPerm extractEntry deps/libffi/testsuite/libffi.call/struct1_win32.c
374 silly gunzTarPerm extractEntry deps/libffi/testsuite/libffi.call/struct2.c
375 silly gunzTarPerm extractEntry deps/libffi/testsuite/libffi.call/struct2_win32.c
376 silly gunzTarPerm extractEntry deps/libffi/testsuite/libffi.call/struct3.c
377 silly gunzTarPerm extractEntry deps/libffi/testsuite/libffi.call/struct4.c
378 silly gunzTarPerm extractEntry deps/libffi/testsuite/libffi.call/struct5.c
379 silly gunzTarPerm extractEntry deps/libffi/testsuite/libffi.call/struct6.c
380 silly gunzTarPerm extractEntry deps/libffi/testsuite/libffi.call/struct7.c
381 silly gunzTarPerm extractEntry deps/libffi/testsuite/libffi.call/struct8.c
382 silly gunzTarPerm extractEntry deps/libffi/testsuite/libffi.call/struct9.c
383 silly gunzTarPerm extractEntry deps/libffi/testsuite/libffi.call/testclosure.c
384 silly gunzTarPerm extractEntry deps/libffi/testsuite/libffi.special/ffitestcxx.h
385 silly gunzTarPerm extractEntry deps/libffi/testsuite/libffi.special/special.exp
386 silly gunzTarPerm extractEntry deps/libffi/testsuite/libffi.special/unwindtest.cc
387 silly gunzTarPerm extractEntry deps/libffi/testsuite/libffi.special/unwindtest_ffi_call.cc
388 silly gunzTarPerm extractEntry deps/libffi/doc/libffi.info
389 silly gunzTarPerm extractEntry deps/libffi/doc/libffi.texi
390 silly gunzTarPerm extractEntry deps/libffi/doc/stamp-vti
391 silly gunzTarPerm extractEntry deps/libffi/doc/version.texi
392 silly gunzTarPerm extractEntry deps/pthreads-win32/README
393 silly gunzTarPerm extractEntry deps/pthreads-win32/pthread_mutex_consistent.c
394 silly gunzTarPerm extractEntry deps/pthreads-win32/Bmakefile
395 silly gunzTarPerm extractEntry deps/pthreads-win32/CONTRIBUTORS
396 silly gunzTarPerm extractEntry deps/pthreads-win32/COPYING
397 silly gunzTarPerm extractEntry deps/pthreads-win32/COPYING.LIB
398 silly gunzTarPerm extractEntry deps/pthreads-win32/ChangeLog
399 silly gunzTarPerm extractEntry deps/pthreads-win32/FAQ
400 silly gunzTarPerm extractEntry deps/pthreads-win32/GNUmakefile
401 silly gunzTarPerm extractEntry deps/pthreads-win32/MAINTAINERS
402 silly gunzTarPerm extractEntry deps/pthreads-win32/Makefile
403 silly gunzTarPerm extractEntry deps/pthreads-win32/NEWS
404 silly gunzTarPerm extractEntry deps/pthreads-win32/Nmakefile
405 silly gunzTarPerm extractEntry deps/pthreads-win32/Nmakefile.tests
406 silly gunzTarPerm extractEntry deps/pthreads-win32/PROGRESS
407 silly gunzTarPerm extractEntry deps/pthreads-win32/ANNOUNCE
408 silly gunzTarPerm extractEntry deps/pthreads-win32/README.Borland
409 silly gunzTarPerm extractEntry deps/pthreads-win32/README.CV
410 silly gunzTarPerm extractEntry deps/pthreads-win32/README.NONPORTABLE
411 silly gunzTarPerm extractEntry deps/pthreads-win32/README.Watcom
412 silly gunzTarPerm extractEntry deps/pthreads-win32/README.WinCE
413 silly gunzTarPerm extractEntry deps/pthreads-win32/TODO
414 silly gunzTarPerm extractEntry deps/pthreads-win32/WinCE-PORT
415 silly gunzTarPerm extractEntry deps/pthreads-win32/attr.c
416 silly gunzTarPerm extractEntry deps/pthreads-win32/autostatic.c
417 silly gunzTarPerm extractEntry deps/pthreads-win32/barrier.c
418 silly gunzTarPerm extractEntry deps/pthreads-win32/builddmc.bat
419 silly gunzTarPerm extractEntry deps/pthreads-win32/cancel.c
420 silly gunzTarPerm extractEntry deps/pthreads-win32/cleanup.c
421 silly gunzTarPerm extractEntry deps/pthreads-win32/condvar.c
422 silly gunzTarPerm extractEntry deps/pthreads-win32/config.h
423 silly gunzTarPerm extractEntry deps/pthreads-win32/context.h
424 silly gunzTarPerm extractEntry deps/pthreads-win32/create.c
425 silly gunzTarPerm extractEntry deps/pthreads-win32/dll.c
426 silly gunzTarPerm extractEntry deps/pthreads-win32/errno.c
427 silly gunzTarPerm extractEntry deps/pthreads-win32/exit.c
428 silly gunzTarPerm extractEntry deps/pthreads-win32/fork.c
429 silly gunzTarPerm extractEntry deps/pthreads-win32/global.c
430 silly gunzTarPerm extractEntry deps/pthreads-win32/implement.h
431 silly gunzTarPerm extractEntry deps/pthreads-win32/manual/pthread_mutexattr_init.html
432 silly gunzTarPerm extractEntry deps/pthreads-win32/manual/ChangeLog
433 silly gunzTarPerm extractEntry deps/pthreads-win32/manual/index.html
434 silly gunzTarPerm extractEntry deps/pthreads-win32/manual/pthreadCancelableWait.html
435 silly gunzTarPerm extractEntry deps/pthreads-win32/manual/pthread_attr_init.html
436 silly gunzTarPerm extractEntry deps/pthreads-win32/manual/pthread_attr_setstackaddr.html
437 silly gunzTarPerm extractEntry deps/pthreads-win32/manual/pthread_attr_setstacksize.html
438 silly gunzTarPerm extractEntry deps/pthreads-win32/manual/pthread_barrier_init.html
439 silly gunzTarPerm extractEntry deps/pthreads-win32/manual/pthread_barrier_wait.html
440 silly gunzTarPerm extractEntry deps/pthreads-win32/manual/pthread_barrierattr_init.html
441 silly gunzTarPerm extractEntry deps/pthreads-win32/manual/pthread_barrierattr_setpshared.html
442 silly gunzTarPerm extractEntry deps/pthreads-win32/manual/pthread_cancel.html
443 silly gunzTarPerm extractEntry deps/pthreads-win32/manual/pthread_cleanup_push.html
444 silly gunzTarPerm extractEntry deps/pthreads-win32/manual/pthread_cond_init.html
445 silly gunzTarPerm extractEntry deps/pthreads-win32/manual/pthread_condattr_init.html
446 silly gunzTarPerm extractEntry deps/pthreads-win32/manual/pthread_condattr_setpshared.html
447 silly gunzTarPerm extractEntry deps/pthreads-win32/manual/pthread_create.html
448 silly gunzTarPerm extractEntry deps/pthreads-win32/manual/pthread_delay_np.html
449 silly gunzTarPerm extractEntry deps/pthreads-win32/manual/pthread_detach.html
450 silly gunzTarPerm extractEntry deps/pthreads-win32/manual/pthread_equal.html
451 silly gunzTarPerm extractEntry deps/pthreads-win32/manual/pthread_exit.html
452 silly gunzTarPerm extractEntry deps/pthreads-win32/manual/pthread_getunique_np.html
453 silly gunzTarPerm extractEntry deps/pthreads-win32/manual/pthread_getw32threadhandle_np.html
454 silly gunzTarPerm extractEntry deps/pthreads-win32/manual/pthread_join.html
455 silly gunzTarPerm extractEntry deps/pthreads-win32/manual/pthread_key_create.html
456 silly gunzTarPerm extractEntry deps/pthreads-win32/manual/pthread_kill.html
457 silly gunzTarPerm extractEntry deps/pthreads-win32/manual/pthread_mutex_init.html
458 silly gunzTarPerm extractEntry deps/pthreads-win32/manual/PortabilityIssues.html
459 silly gunzTarPerm extractEntry deps/pthreads-win32/manual/pthread_mutexattr_setpshared.html
460 silly gunzTarPerm extractEntry deps/pthreads-win32/manual/pthread_num_processors_np.html
461 silly gunzTarPerm extractEntry deps/pthreads-win32/manual/pthread_once.html
462 silly gunzTarPerm extractEntry deps/pthreads-win32/manual/pthread_rwlock_init.html
463 silly gunzTarPerm extractEntry deps/pthreads-win32/manual/pthread_rwlock_rdlock.html
464 silly gunzTarPerm extractEntry deps/pthreads-win32/manual/pthread_rwlock_timedrdlock.html
465 silly gunzTarPerm extractEntry deps/pthreads-win32/manual/pthread_rwlock_timedwrlock.html
466 silly gunzTarPerm extractEntry deps/pthreads-win32/manual/pthread_rwlock_unlock.html
467 silly gunzTarPerm extractEntry deps/pthreads-win32/manual/pthread_rwlock_wrlock.html
468 silly gunzTarPerm extractEntry deps/pthreads-win32/manual/pthread_rwlockattr_init.html
469 silly gunzTarPerm extractEntry deps/pthreads-win32/manual/pthread_rwlockattr_setpshared.html
470 silly gunzTarPerm extractEntry deps/pthreads-win32/manual/pthread_self.html
471 silly gunzTarPerm extractEntry deps/pthreads-win32/manual/pthread_setcancelstate.html
472 silly gunzTarPerm extractEntry deps/pthreads-win32/manual/pthread_setcanceltype.html
473 silly gunzTarPerm extractEntry deps/pthreads-win32/manual/pthread_setconcurrency.html
474 silly gunzTarPerm extractEntry deps/pthreads-win32/manual/pthread_setschedparam.html
475 silly gunzTarPerm extractEntry deps/pthreads-win32/manual/pthread_spin_init.html
476 silly gunzTarPerm extractEntry deps/pthreads-win32/manual/pthread_spin_lock.html
477 silly gunzTarPerm extractEntry deps/pthreads-win32/manual/pthread_spin_unlock.html
478 silly gunzTarPerm extractEntry deps/pthreads-win32/manual/pthread_timechange_handler_np.html
479 silly gunzTarPerm extractEntry deps/pthreads-win32/manual/pthread_win32_attach_detach_np.html
480 silly gunzTarPerm extractEntry deps/pthreads-win32/manual/pthread_win32_test_features_np.html
481 silly gunzTarPerm extractEntry deps/pthreads-win32/manual/sched_get_priority_max.html
482 silly gunzTarPerm extractEntry deps/pthreads-win32/manual/sched_getscheduler.html
483 silly gunzTarPerm extractEntry deps/pthreads-win32/manual/sched_setscheduler.html
484 silly gunzTarPerm extractEntry deps/pthreads-win32/manual/sched_yield.html
485 silly gunzTarPerm extractEntry deps/pthreads-win32/manual/sem_init.html
486 silly gunzTarPerm extractEntry deps/pthreads-win32/misc.c
487 silly gunzTarPerm extractEntry deps/pthreads-win32/mutex.c
488 silly gunzTarPerm extractEntry deps/pthreads-win32/need_errno.h
489 silly gunzTarPerm extractEntry deps/pthreads-win32/nonportable.c
490 silly gunzTarPerm extractEntry deps/pthreads-win32/private.c
491 silly gunzTarPerm extractEntry deps/pthreads-win32/pthread.c
492 silly gunzTarPerm extractEntry deps/pthreads-win32/pthread.dsp
493 silly gunzTarPerm extractEntry deps/pthreads-win32/pthread.dsw
494 silly gunzTarPerm extractEntry deps/pthreads-win32/pthread.gyp
495 silly gunzTarPerm extractEntry deps/pthreads-win32/pthread.h
496 silly gunzTarPerm extractEntry deps/pthreads-win32/pthread_attr_destroy.c
497 silly gunzTarPerm extractEntry deps/pthreads-win32/pthread_attr_getdetachstate.c
498 silly gunzTarPerm extractEntry deps/pthreads-win32/pthread_attr_getinheritsched.c
499 silly gunzTarPerm extractEntry deps/pthreads-win32/pthread_attr_getschedparam.c
500 silly gunzTarPerm extractEntry deps/pthreads-win32/pthread_attr_getschedpolicy.c
501 silly gunzTarPerm extractEntry deps/pthreads-win32/pthread_attr_getscope.c
502 silly gunzTarPerm extractEntry deps/pthreads-win32/pthread_attr_getstackaddr.c
503 silly gunzTarPerm extractEntry deps/pthreads-win32/pthread_attr_getstacksize.c
504 silly gunzTarPerm extractEntry deps/pthreads-win32/pthread_attr_init.c
505 silly gunzTarPerm extractEntry deps/pthreads-win32/pthread_attr_setdetachstate.c
506 silly gunzTarPerm extractEntry deps/pthreads-win32/pthread_attr_setinheritsched.c
507 silly gunzTarPerm extractEntry deps/pthreads-win32/pthread_attr_setschedparam.c
508 silly gunzTarPerm extractEntry deps/pthreads-win32/pthread_attr_setschedpolicy.c
509 silly gunzTarPerm extractEntry deps/pthreads-win32/pthread_attr_setscope.c
510 silly gunzTarPerm extractEntry deps/pthreads-win32/pthread_attr_setstackaddr.c
511 silly gunzTarPerm extractEntry deps/pthreads-win32/pthread_attr_setstacksize.c
512 silly gunzTarPerm extractEntry deps/pthreads-win32/pthread_barrier_destroy.c
513 silly gunzTarPerm extractEntry deps/pthreads-win32/pthread_barrier_init.c
514 silly gunzTarPerm extractEntry deps/pthreads-win32/pthread_barrier_wait.c
515 silly gunzTarPerm extractEntry deps/pthreads-win32/pthread_barrierattr_destroy.c
516 silly gunzTarPerm extractEntry deps/pthreads-win32/pthread_barrierattr_getpshared.c
517 silly gunzTarPerm extractEntry deps/pthreads-win32/pthread_barrierattr_init.c
518 silly gunzTarPerm extractEntry deps/pthreads-win32/pthread_barrierattr_setpshared.c
519 silly gunzTarPerm extractEntry deps/pthreads-win32/pthread_cancel.c
520 silly gunzTarPerm extractEntry deps/pthreads-win32/pthread_cond_destroy.c
521 silly gunzTarPerm extractEntry deps/pthreads-win32/pthread_cond_init.c
522 silly gunzTarPerm extractEntry deps/pthreads-win32/pthread_cond_signal.c
523 silly gunzTarPerm extractEntry deps/pthreads-win32/pthread_cond_wait.c
524 silly gunzTarPerm extractEntry deps/pthreads-win32/pthread_condattr_destroy.c
525 silly gunzTarPerm extractEntry deps/pthreads-win32/pthread_condattr_getpshared.c
526 silly gunzTarPerm extractEntry deps/pthreads-win32/pthread_condattr_init.c
527 silly gunzTarPerm extractEntry deps/pthreads-win32/pthread_condattr_setpshared.c
528 silly gunzTarPerm extractEntry deps/pthreads-win32/pthread_delay_np.c
529 silly gunzTarPerm extractEntry deps/pthreads-win32/pthread_detach.c
530 silly gunzTarPerm extractEntry deps/pthreads-win32/pthread_equal.c
531 silly gunzTarPerm extractEntry deps/pthreads-win32/pthread_exit.c
532 silly gunzTarPerm extractEntry deps/pthreads-win32/pthread_getconcurrency.c
533 silly gunzTarPerm extractEntry deps/pthreads-win32/pthread_getschedparam.c
534 silly gunzTarPerm extractEntry deps/pthreads-win32/pthread_getspecific.c
535 silly gunzTarPerm extractEntry deps/pthreads-win32/pthread_getunique_np.c
536 silly gunzTarPerm extractEntry deps/pthreads-win32/pthread_getw32threadhandle_np.c
537 silly gunzTarPerm extractEntry deps/pthreads-win32/pthread_join.c
538 silly gunzTarPerm extractEntry deps/pthreads-win32/pthread_key_create.c
539 silly gunzTarPerm extractEntry deps/pthreads-win32/pthread_key_delete.c
540 silly gunzTarPerm extractEntry deps/pthreads-win32/pthread_kill.c
541 silly gunzTarPerm extractEntry deps/pthreads-win32/BUGS
542 silly gunzTarPerm extractEntry deps/pthreads-win32/pthread_mutex_destroy.c
543 silly gunzTarPerm extractEntry deps/pthreads-win32/pthread_mutex_init.c
544 silly gunzTarPerm extractEntry deps/pthreads-win32/pthread_mutex_lock.c
545 silly gunzTarPerm extractEntry deps/pthreads-win32/pthread_mutex_timedlock.c
546 silly gunzTarPerm extractEntry deps/pthreads-win32/pthread_mutex_trylock.c
547 silly gunzTarPerm extractEntry deps/pthreads-win32/pthread_mutex_unlock.c
548 silly gunzTarPerm extractEntry deps/pthreads-win32/pthread_mutexattr_destroy.c
549 silly gunzTarPerm extractEntry deps/pthreads-win32/pthread_mutexattr_getkind_np.c
550 silly gunzTarPerm extractEntry deps/pthreads-win32/pthread_mutexattr_getpshared.c
551 silly gunzTarPerm extractEntry deps/pthreads-win32/pthread_mutexattr_getrobust.c
552 silly gunzTarPerm extractEntry deps/pthreads-win32/pthread_mutexattr_gettype.c
553 silly gunzTarPerm extractEntry deps/pthreads-win32/pthread_mutexattr_init.c
554 silly gunzTarPerm extractEntry deps/pthreads-win32/pthread_mutexattr_setkind_np.c
555 silly gunzTarPerm extractEntry deps/pthreads-win32/pthread_mutexattr_setpshared.c
556 silly gunzTarPerm extractEntry deps/pthreads-win32/pthread_mutexattr_setrobust.c
557 silly gunzTarPerm extractEntry deps/pthreads-win32/pthread_mutexattr_settype.c
558 silly gunzTarPerm extractEntry deps/pthreads-win32/pthread_num_processors_np.c
559 silly gunzTarPerm extractEntry deps/pthreads-win32/pthread_once.c
560 silly gunzTarPerm extractEntry deps/pthreads-win32/pthread_rwlock_destroy.c
561 silly gunzTarPerm extractEntry deps/pthreads-win32/pthread_rwlock_init.c
562 silly gunzTarPerm extractEntry deps/pthreads-win32/pthread_rwlock_rdlock.c
563 silly gunzTarPerm extractEntry deps/pthreads-win32/pthread_rwlock_timedrdlock.c
564 silly gunzTarPerm extractEntry deps/pthreads-win32/pthread_rwlock_timedwrlock.c
565 silly gunzTarPerm extractEntry deps/pthreads-win32/pthread_rwlock_tryrdlock.c
566 silly gunzTarPerm extractEntry deps/pthreads-win32/pthread_rwlock_trywrlock.c
567 silly gunzTarPerm extractEntry deps/pthreads-win32/pthread_rwlock_unlock.c
568 silly gunzTarPerm extractEntry deps/pthreads-win32/pthread_rwlock_wrlock.c
569 silly gunzTarPerm extractEntry deps/pthreads-win32/pthread_rwlockattr_destroy.c
570 silly gunzTarPerm extractEntry deps/pthreads-win32/pthread_rwlockattr_getpshared.c
571 silly gunzTarPerm extractEntry deps/pthreads-win32/pthread_rwlockattr_init.c
572 silly gunzTarPerm extractEntry deps/pthreads-win32/pthread_rwlockattr_setpshared.c
573 silly gunzTarPerm extractEntry deps/pthreads-win32/pthread_self.c
574 silly gunzTarPerm extractEntry deps/pthreads-win32/pthread_setcancelstate.c
575 silly gunzTarPerm extractEntry deps/pthreads-win32/pthread_setcanceltype.c
576 silly gunzTarPerm extractEntry deps/pthreads-win32/pthread_setconcurrency.c
577 silly gunzTarPerm extractEntry deps/pthreads-win32/pthread_setschedparam.c
578 silly gunzTarPerm extractEntry deps/pthreads-win32/pthread_setspecific.c
579 silly gunzTarPerm extractEntry deps/pthreads-win32/pthread_spin_destroy.c
580 silly gunzTarPerm extractEntry deps/pthreads-win32/pthread_spin_init.c
581 silly gunzTarPerm extractEntry deps/pthreads-win32/pthread_spin_lock.c
582 silly gunzTarPerm extractEntry deps/pthreads-win32/pthread_spin_trylock.c
583 silly gunzTarPerm extractEntry deps/pthreads-win32/pthread_spin_unlock.c
584 silly gunzTarPerm extractEntry deps/pthreads-win32/pthread_testcancel.c
585 silly gunzTarPerm extractEntry deps/pthreads-win32/pthread_timechange_handler_np.c
586 silly gunzTarPerm extractEntry deps/pthreads-win32/pthread_win32_attach_detach_np.c
587 silly gunzTarPerm extractEntry deps/pthreads-win32/ptw32_MCS_lock.c
588 silly gunzTarPerm extractEntry deps/pthreads-win32/ptw32_callUserDestroyRoutines.c
589 silly gunzTarPerm extractEntry deps/pthreads-win32/ptw32_calloc.c
590 silly gunzTarPerm extractEntry deps/pthreads-win32/ptw32_cond_check_need_init.c
591 silly gunzTarPerm extractEntry deps/pthreads-win32/ptw32_getprocessors.c
592 silly gunzTarPerm extractEntry deps/pthreads-win32/ptw32_is_attr.c
593 silly gunzTarPerm extractEntry deps/pthreads-win32/ptw32_mutex_check_need_init.c
594 silly gunzTarPerm extractEntry deps/pthreads-win32/ptw32_new.c
595 silly gunzTarPerm extractEntry deps/pthreads-win32/ptw32_processInitialize.c
596 silly gunzTarPerm extractEntry deps/pthreads-win32/ptw32_processTerminate.c
597 silly gunzTarPerm extractEntry deps/pthreads-win32/ptw32_relmillisecs.c
598 silly gunzTarPerm extractEntry deps/pthreads-win32/ptw32_reuse.c
599 silly gunzTarPerm extractEntry deps/pthreads-win32/ptw32_rwlock_cancelwrwait.c
600 silly gunzTarPerm extractEntry deps/pthreads-win32/ptw32_rwlock_check_need_init.c
601 silly gunzTarPerm extractEntry deps/pthreads-win32/ptw32_semwait.c
602 silly gunzTarPerm extractEntry deps/pthreads-win32/ptw32_spinlock_check_need_init.c
603 silly gunzTarPerm extractEntry deps/pthreads-win32/ptw32_threadDestroy.c
604 silly gunzTarPerm extractEntry deps/pthreads-win32/ptw32_threadStart.c
605 silly gunzTarPerm extractEntry deps/pthreads-win32/ptw32_throw.c
606 silly gunzTarPerm extractEntry deps/pthreads-win32/ptw32_timespec.c
607 silly gunzTarPerm extractEntry deps/pthreads-win32/ptw32_tkAssocCreate.c
608 silly gunzTarPerm extractEntry deps/pthreads-win32/ptw32_tkAssocDestroy.c
609 silly gunzTarPerm extractEntry deps/pthreads-win32/rwlock.c
610 silly gunzTarPerm extractEntry deps/pthreads-win32/sched.c
611 silly gunzTarPerm extractEntry deps/pthreads-win32/sched.h
612 silly gunzTarPerm extractEntry deps/pthreads-win32/sched_get_priority_max.c
613 silly gunzTarPerm extractEntry deps/pthreads-win32/sched_get_priority_min.c
614 silly gunzTarPerm extractEntry deps/pthreads-win32/sched_getscheduler.c
615 silly gunzTarPerm extractEntry deps/pthreads-win32/sched_setscheduler.c
616 silly gunzTarPerm extractEntry deps/pthreads-win32/sched_yield.c
617 silly gunzTarPerm extractEntry deps/pthreads-win32/sem_close.c
618 silly gunzTarPerm extractEntry deps/pthreads-win32/sem_destroy.c
619 silly gunzTarPerm extractEntry deps/pthreads-win32/sem_getvalue.c
620 silly gunzTarPerm extractEntry deps/pthreads-win32/sem_init.c
621 silly gunzTarPerm extractEntry deps/pthreads-win32/sem_open.c
622 silly gunzTarPerm extractEntry deps/pthreads-win32/sem_post.c
623 silly gunzTarPerm extractEntry deps/pthreads-win32/sem_post_multiple.c
624 silly gunzTarPerm extractEntry deps/pthreads-win32/sem_timedwait.c
625 silly gunzTarPerm extractEntry deps/pthreads-win32/sem_trywait.c
626 silly gunzTarPerm extractEntry deps/pthreads-win32/sem_unlink.c
627 silly gunzTarPerm extractEntry deps/pthreads-win32/sem_wait.c
628 silly gunzTarPerm extractEntry deps/pthreads-win32/semaphore.c
629 silly gunzTarPerm extractEntry deps/pthreads-win32/semaphore.h
630 silly gunzTarPerm extractEntry deps/pthreads-win32/signal.c
631 silly gunzTarPerm extractEntry deps/pthreads-win32/spin.c
632 silly gunzTarPerm extractEntry deps/pthreads-win32/sync.c
633 silly gunzTarPerm extractEntry deps/pthreads-win32/tests/README
634 silly gunzTarPerm extractEntry deps/pthreads-win32/tests/join3.c
635 silly gunzTarPerm extractEntry deps/pthreads-win32/tests/Debug.dsp
636 silly gunzTarPerm extractEntry deps/pthreads-win32/tests/Debug.dsw
637 silly gunzTarPerm extractEntry deps/pthreads-win32/tests/Debug.plg
638 silly gunzTarPerm extractEntry deps/pthreads-win32/tests/Debug.txt
639 silly gunzTarPerm extractEntry deps/pthreads-win32/tests/GNUmakefile
640 silly gunzTarPerm extractEntry deps/pthreads-win32/tests/Bmakefile
641 silly gunzTarPerm extractEntry deps/pthreads-win32/tests/README.BENCHTESTS
642 silly gunzTarPerm extractEntry deps/pthreads-win32/tests/SIZES.GC
643 silly gunzTarPerm extractEntry deps/pthreads-win32/tests/SIZES.GCE
644 silly gunzTarPerm extractEntry deps/pthreads-win32/tests/SIZES.VC
645 silly gunzTarPerm extractEntry deps/pthreads-win32/tests/SIZES.VCE
646 silly gunzTarPerm extractEntry deps/pthreads-win32/tests/SIZES.VSE
647 silly gunzTarPerm extractEntry deps/pthreads-win32/tests/Wmakefile
648 silly gunzTarPerm extractEntry deps/pthreads-win32/tests/barrier1.c
649 silly gunzTarPerm extractEntry deps/pthreads-win32/tests/barrier2.c
650 silly gunzTarPerm extractEntry deps/pthreads-win32/tests/barrier3.c
651 silly gunzTarPerm extractEntry deps/pthreads-win32/tests/barrier4.c
652 silly gunzTarPerm extractEntry deps/pthreads-win32/tests/barrier5.c
653 silly gunzTarPerm extractEntry deps/pthreads-win32/tests/barrier6.c
654 silly gunzTarPerm extractEntry deps/pthreads-win32/tests/benchlib.c
655 silly gunzTarPerm extractEntry deps/pthreads-win32/tests/benchtest.h
656 silly gunzTarPerm extractEntry deps/pthreads-win32/tests/benchtest1.c
657 silly gunzTarPerm extractEntry deps/pthreads-win32/tests/benchtest2.c
658 silly gunzTarPerm extractEntry deps/pthreads-win32/tests/benchtest3.c
659 silly gunzTarPerm extractEntry deps/pthreads-win32/tests/benchtest4.c
660 silly gunzTarPerm extractEntry deps/pthreads-win32/tests/benchtest5.c
661 silly gunzTarPerm extractEntry deps/pthreads-win32/tests/cancel1.c
662 silly gunzTarPerm extractEntry deps/pthreads-win32/tests/cancel2.c
663 silly gunzTarPerm extractEntry deps/pthreads-win32/tests/cancel3.c
664 silly gunzTarPerm extractEntry deps/pthreads-win32/tests/cancel4.c
665 silly gunzTarPerm extractEntry deps/pthreads-win32/tests/cancel5.c
666 silly gunzTarPerm extractEntry deps/pthreads-win32/tests/cancel6a.c
667 silly gunzTarPerm extractEntry deps/pthreads-win32/tests/cancel6d.c
668 silly gunzTarPerm extractEntry deps/pthreads-win32/tests/cancel7.c
669 silly gunzTarPerm extractEntry deps/pthreads-win32/tests/cancel8.c
670 silly gunzTarPerm extractEntry deps/pthreads-win32/tests/cancel9.c
671 silly gunzTarPerm extractEntry deps/pthreads-win32/tests/cleanup0.c
672 silly gunzTarPerm extractEntry deps/pthreads-win32/tests/cleanup1.c
673 silly gunzTarPerm extractEntry deps/pthreads-win32/tests/cleanup2.c
674 silly gunzTarPerm extractEntry deps/pthreads-win32/tests/cleanup3.c
675 silly gunzTarPerm extractEntry deps/pthreads-win32/tests/condvar1.c
676 silly gunzTarPerm extractEntry deps/pthreads-win32/tests/condvar1_1.c
677 silly gunzTarPerm extractEntry deps/pthreads-win32/tests/condvar1_2.c
678 silly gunzTarPerm extractEntry deps/pthreads-win32/tests/condvar2.c
679 silly gunzTarPerm extractEntry deps/pthreads-win32/tests/condvar2_1.c
680 silly gunzTarPerm extractEntry deps/pthreads-win32/tests/condvar3.c
681 silly gunzTarPerm extractEntry deps/pthreads-win32/tests/condvar3_1.c
682 silly gunzTarPerm extractEntry deps/pthreads-win32/tests/condvar3_2.c
683 silly gunzTarPerm extractEntry deps/pthreads-win32/tests/condvar3_3.c
684 silly gunzTarPerm extractEntry deps/pthreads-win32/tests/condvar4.c
685 silly gunzTarPerm extractEntry deps/pthreads-win32/tests/condvar5.c
686 silly gunzTarPerm extractEntry deps/pthreads-win32/tests/condvar6.c
687 silly gunzTarPerm extractEntry deps/pthreads-win32/tests/condvar7.c
688 silly gunzTarPerm extractEntry deps/pthreads-win32/tests/condvar8.c
689 silly gunzTarPerm extractEntry deps/pthreads-win32/tests/condvar9.c
690 silly gunzTarPerm extractEntry deps/pthreads-win32/tests/context1.c
691 silly gunzTarPerm extractEntry deps/pthreads-win32/tests/count1.c
692 silly gunzTarPerm extractEntry deps/pthreads-win32/tests/create1.c
693 silly gunzTarPerm extractEntry deps/pthreads-win32/tests/create2.c
694 silly gunzTarPerm extractEntry deps/pthreads-win32/tests/delay1.c
695 silly gunzTarPerm extractEntry deps/pthreads-win32/tests/delay2.c
696 silly gunzTarPerm extractEntry deps/pthreads-win32/tests/detach1.c
697 silly gunzTarPerm extractEntry deps/pthreads-win32/tests/equal1.c
698 silly gunzTarPerm extractEntry deps/pthreads-win32/tests/errno1.c
699 silly gunzTarPerm extractEntry deps/pthreads-win32/tests/exception1.c
700 silly gunzTarPerm extractEntry deps/pthreads-win32/tests/exception2.c
701 silly gunzTarPerm extractEntry deps/pthreads-win32/tests/exception3.c
702 silly gunzTarPerm extractEntry deps/pthreads-win32/tests/exit1.c
703 silly gunzTarPerm extractEntry deps/pthreads-win32/tests/exit2.c
704 silly gunzTarPerm extractEntry deps/pthreads-win32/tests/exit3.c
705 silly gunzTarPerm extractEntry deps/pthreads-win32/tests/exit4.c
706 silly gunzTarPerm extractEntry deps/pthreads-win32/tests/exit5.c
707 silly gunzTarPerm extractEntry deps/pthreads-win32/tests/eyal1.c
708 silly gunzTarPerm extractEntry deps/pthreads-win32/tests/inherit1.c
709 silly gunzTarPerm extractEntry deps/pthreads-win32/tests/join0.c
710 silly gunzTarPerm extractEntry deps/pthreads-win32/tests/join1.c
711 silly gunzTarPerm extractEntry deps/pthreads-win32/tests/join2.c
712 silly gunzTarPerm extractEntry deps/pthreads-win32/tests/ChangeLog
713 silly gunzTarPerm extractEntry deps/pthreads-win32/tests/kill1.c
714 silly gunzTarPerm extractEntry deps/pthreads-win32/tests/loadfree.c
715 silly gunzTarPerm extractEntry deps/pthreads-win32/tests/mutex1.c
716 silly gunzTarPerm extractEntry deps/pthreads-win32/tests/mutex1e.c
717 silly gunzTarPerm extractEntry deps/pthreads-win32/tests/mutex1n.c
718 silly gunzTarPerm extractEntry deps/pthreads-win32/tests/mutex1r.c
719 silly gunzTarPerm extractEntry deps/pthreads-win32/tests/mutex2.c
720 silly gunzTarPerm extractEntry deps/pthreads-win32/tests/mutex2e.c
721 silly gunzTarPerm extractEntry deps/pthreads-win32/tests/mutex2r.c
722 silly gunzTarPerm extractEntry deps/pthreads-win32/tests/mutex3.c
723 silly gunzTarPerm extractEntry deps/pthreads-win32/tests/mutex3e.c
724 silly gunzTarPerm extractEntry deps/pthreads-win32/tests/mutex3r.c
725 silly gunzTarPerm extractEntry deps/pthreads-win32/tests/mutex4.c
726 silly gunzTarPerm extractEntry deps/pthreads-win32/tests/mutex5.c
727 silly gunzTarPerm extractEntry deps/pthreads-win32/tests/mutex6.c
728 silly gunzTarPerm extractEntry deps/pthreads-win32/tests/mutex6e.c
729 silly gunzTarPerm extractEntry deps/pthreads-win32/tests/mutex6es.c
730 silly gunzTarPerm extractEntry deps/pthreads-win32/tests/mutex6n.c
731 silly gunzTarPerm extractEntry deps/pthreads-win32/tests/mutex6r.c
732 silly gunzTarPerm extractEntry deps/pthreads-win32/tests/mutex6rs.c
733 silly gunzTarPerm extractEntry deps/pthreads-win32/tests/mutex6s.c
734 silly gunzTarPerm extractEntry deps/pthreads-win32/tests/mutex7.c
735 silly gunzTarPerm extractEntry deps/pthreads-win32/tests/mutex7e.c
736 silly gunzTarPerm extractEntry deps/pthreads-win32/tests/mutex7n.c
737 silly gunzTarPerm extractEntry deps/pthreads-win32/tests/mutex7r.c
738 silly gunzTarPerm extractEntry deps/pthreads-win32/tests/mutex8.c
739 silly gunzTarPerm extractEntry deps/pthreads-win32/tests/mutex8e.c
740 silly gunzTarPerm extractEntry deps/pthreads-win32/tests/mutex8n.c
741 silly gunzTarPerm extractEntry deps/pthreads-win32/tests/mutex8r.c
742 silly gunzTarPerm extractEntry deps/pthreads-win32/tests/once1.c
743 silly gunzTarPerm extractEntry deps/pthreads-win32/tests/once2.c
744 silly gunzTarPerm extractEntry deps/pthreads-win32/tests/once3.c
745 silly gunzTarPerm extractEntry deps/pthreads-win32/tests/once4.c
746 silly gunzTarPerm extractEntry deps/pthreads-win32/tests/openmp1.c
747 silly gunzTarPerm extractEntry deps/pthreads-win32/tests/priority1.c
748 silly gunzTarPerm extractEntry deps/pthreads-win32/tests/priority2.c
749 silly gunzTarPerm extractEntry deps/pthreads-win32/tests/reuse1.c
750 silly gunzTarPerm extractEntry deps/pthreads-win32/tests/reuse2.c
751 silly gunzTarPerm extractEntry deps/pthreads-win32/tests/robust1.c
752 silly gunzTarPerm extractEntry deps/pthreads-win32/tests/robust2.c
753 silly gunzTarPerm extractEntry deps/pthreads-win32/tests/robust3.c
754 silly gunzTarPerm extractEntry deps/pthreads-win32/tests/robust4.c
755 silly gunzTarPerm extractEntry deps/pthreads-win32/tests/robust5.c
756 silly gunzTarPerm extractEntry deps/pthreads-win32/tests/rwlock1.c
757 silly gunzTarPerm extractEntry deps/pthreads-win32/tests/rwlock2.c
758 silly gunzTarPerm extractEntry deps/pthreads-win32/tests/rwlock2_t.c
759 silly gunzTarPerm extractEntry deps/pthreads-win32/tests/rwlock3.c
760 silly gunzTarPerm extractEntry deps/pthreads-win32/tests/rwlock3_t.c
761 silly gunzTarPerm extractEntry deps/pthreads-win32/tests/rwlock4.c
762 silly gunzTarPerm extractEntry deps/pthreads-win32/tests/rwlock4_t.c
763 silly gunzTarPerm extractEntry deps/pthreads-win32/tests/rwlock5.c
764 silly gunzTarPerm extractEntry deps/pthreads-win32/tests/rwlock5_t.c
765 silly gunzTarPerm extractEntry deps/pthreads-win32/tests/rwlock6.c
766 silly gunzTarPerm extractEntry deps/pthreads-win32/tests/rwlock6_t.c
767 silly gunzTarPerm extractEntry deps/pthreads-win32/tests/rwlock6_t2.c
768 silly gunzTarPerm extractEntry deps/pthreads-win32/tests/rwlock7.c
769 silly gunzTarPerm extractEntry deps/pthreads-win32/tests/rwlock8.c
770 silly gunzTarPerm extractEntry deps/pthreads-win32/tests/self1.c
771 silly gunzTarPerm extractEntry deps/pthreads-win32/tests/self2.c
772 silly gunzTarPerm extractEntry deps/pthreads-win32/tests/semaphore1.c
773 silly gunzTarPerm extractEntry deps/pthreads-win32/tests/semaphore2.c
774 silly gunzTarPerm extractEntry deps/pthreads-win32/tests/semaphore3.c
775 silly gunzTarPerm extractEntry deps/pthreads-win32/tests/semaphore4.c
776 silly gunzTarPerm extractEntry deps/pthreads-win32/tests/semaphore4t.c
777 silly gunzTarPerm extractEntry deps/pthreads-win32/tests/semaphore5.c
778 silly gunzTarPerm extractEntry deps/pthreads-win32/tests/sequence1.c
779 silly gunzTarPerm extractEntry deps/pthreads-win32/tests/sizes.c
780 silly gunzTarPerm extractEntry deps/pthreads-win32/tests/spin1.c
781 silly gunzTarPerm extractEntry deps/pthreads-win32/tests/spin2.c
782 silly gunzTarPerm extractEntry deps/pthreads-win32/tests/spin3.c
783 silly gunzTarPerm extractEntry deps/pthreads-win32/tests/spin4.c
784 silly gunzTarPerm extractEntry deps/pthreads-win32/tests/stress1.c
785 silly gunzTarPerm extractEntry deps/pthreads-win32/tests/test.h
786 silly gunzTarPerm extractEntry deps/pthreads-win32/tests/tryentercs.c
787 silly gunzTarPerm extractEntry deps/pthreads-win32/tests/tryentercs2.c
788 silly gunzTarPerm extractEntry deps/pthreads-win32/tests/tsd1.c
789 silly gunzTarPerm extractEntry deps/pthreads-win32/tests/tsd2.c
790 silly gunzTarPerm extractEntry deps/pthreads-win32/tests/valid1.c
791 silly gunzTarPerm extractEntry deps/pthreads-win32/tests/valid2.c
792 silly gunzTarPerm extractEntry deps/pthreads-win32/tsd.c
793 silly gunzTarPerm extractEntry deps/pthreads-win32/version.rc
794 silly gunzTarPerm extractEntry deps/pthreads-win32/w32_CancelableWait.c
795 silly gunzTarPerm extractEntry .travis.yml
796 silly gunzTarPerm extractEntry binding.gyp
797 silly gunzTarPerm extractEntry History.md
798 silly gunzTarPerm extractEntry doc/benchmark.js
799 silly gunzTarPerm extractEntry doc/benchmark.txt
800 silly gunzTarPerm extractEntry example/abs.js
801 silly gunzTarPerm extractEntry example/sqlite.js
802 silly gunzTarPerm extractEntry example/factorial/README.md
803 silly gunzTarPerm extractEntry example/factorial/factorial.js
804 silly gunzTarPerm extractEntry example/factorial/factorial.c
805 silly gunzTarPerm extractEntry lib/_foreign_function.js
806 silly gunzTarPerm extractEntry lib/cif.js
807 silly gunzTarPerm extractEntry lib/cif_var.js
808 silly gunzTarPerm extractEntry lib/dynamic_library.js
809 silly gunzTarPerm extractEntry lib/callback.js
810 silly gunzTarPerm extractEntry lib/ffi.js
811 silly gunzTarPerm extractEntry lib/foreign_function.js
812 silly gunzTarPerm extractEntry lib/foreign_function_var.js
813 silly gunzTarPerm extractEntry lib/function.js
814 silly gunzTarPerm extractEntry lib/library.js
815 silly gunzTarPerm extractEntry lib/bindings.js
816 silly gunzTarPerm extractEntry lib/type.js
817 silly gunzTarPerm extractEntry lib/errno.js
818 silly gunzTarPerm extractEntry .jshintrc
819 silly gunzTarPerm extractEntry src/callback_info.cc
820 silly gunzTarPerm extractEntry src/ffi.cc
821 silly gunzTarPerm extractEntry src/ffi.h
822 silly gunzTarPerm extractEntry src/threaded_callback_invokation.cc
823 silly gunzTarPerm extractEntry test/variadic.js
824 silly gunzTarPerm extractEntry test/cif.js
825 silly gunzTarPerm extractEntry test/dynamic_library.js
826 silly gunzTarPerm extractEntry test/errno.js
827 silly gunzTarPerm extractEntry test/types.js
828 silly gunzTarPerm extractEntry test/callback.js
829 silly gunzTarPerm extractEntry test/function.js
830 silly gunzTarPerm extractEntry test/library.js
831 silly gunzTarPerm extractEntry test/objc.js
832 silly gunzTarPerm extractEntry test/foreign_function.js
833 silly gunzTarPerm extractEntry test/ffi_tests.cc
834 silly gunzTarPerm extractEntry test/binding.gyp
835 silly lockFile 39f268fe-ackathon-server-node-modules-ffi tar:///Users/craignishina/Workspace/IntelHackathon/server/node_modules/ffi
836 silly lockFile 39f268fe-ackathon-server-node-modules-ffi tar:///Users/craignishina/Workspace/IntelHackathon/server/node_modules/ffi
837 silly lockFile b0d81482-ishina-npm-ffi-1-2-7-package-tgz tar:///Users/craignishina/.npm/ffi/1.2.7/package.tgz
838 silly lockFile b0d81482-ishina-npm-ffi-1-2-7-package-tgz tar:///Users/craignishina/.npm/ffi/1.2.7/package.tgz
839 info preinstall ffi@1.2.7
840 verbose readDependencies using package.json deps
841 verbose readDependencies using package.json deps
842 verbose cache add [ 'bindings@*', null ]
843 verbose cache add name=undefined spec="bindings@*" args=["bindings@*",null]
844 verbose parsed url { protocol: null,
844 verbose parsed url   slashes: null,
844 verbose parsed url   auth: null,
844 verbose parsed url   host: null,
844 verbose parsed url   port: null,
844 verbose parsed url   hostname: null,
844 verbose parsed url   hash: null,
844 verbose parsed url   search: null,
844 verbose parsed url   query: null,
844 verbose parsed url   pathname: 'bindings@*',
844 verbose parsed url   path: 'bindings@*',
844 verbose parsed url   href: 'bindings@*' }
845 verbose cache add name="bindings" spec="*" args=["bindings","*"]
846 verbose parsed url { protocol: null,
846 verbose parsed url   slashes: null,
846 verbose parsed url   auth: null,
846 verbose parsed url   host: null,
846 verbose parsed url   port: null,
846 verbose parsed url   hostname: null,
846 verbose parsed url   hash: null,
846 verbose parsed url   search: null,
846 verbose parsed url   query: null,
846 verbose parsed url   pathname: '*',
846 verbose parsed url   path: '*',
846 verbose parsed url   href: '*' }
847 verbose addNamed [ 'bindings', '*' ]
848 verbose addNamed [ null, '*' ]
849 silly lockFile a3858fc2-bindings bindings@*
850 verbose lock bindings@* /Users/craignishina/.npm/a3858fc2-bindings.lock
851 verbose cache add [ 'debug@*', null ]
852 verbose cache add name=undefined spec="debug@*" args=["debug@*",null]
853 verbose parsed url { protocol: null,
853 verbose parsed url   slashes: null,
853 verbose parsed url   auth: null,
853 verbose parsed url   host: null,
853 verbose parsed url   port: null,
853 verbose parsed url   hostname: null,
853 verbose parsed url   hash: null,
853 verbose parsed url   search: null,
853 verbose parsed url   query: null,
853 verbose parsed url   pathname: 'debug@*',
853 verbose parsed url   path: 'debug@*',
853 verbose parsed url   href: 'debug@*' }
854 verbose cache add name="debug" spec="*" args=["debug","*"]
855 verbose parsed url { protocol: null,
855 verbose parsed url   slashes: null,
855 verbose parsed url   auth: null,
855 verbose parsed url   host: null,
855 verbose parsed url   port: null,
855 verbose parsed url   hostname: null,
855 verbose parsed url   hash: null,
855 verbose parsed url   search: null,
855 verbose parsed url   query: null,
855 verbose parsed url   pathname: '*',
855 verbose parsed url   path: '*',
855 verbose parsed url   href: '*' }
856 verbose addNamed [ 'debug', '*' ]
857 verbose addNamed [ null, '*' ]
858 silly lockFile 3ac45eff-debug debug@*
859 verbose lock debug@* /Users/craignishina/.npm/3ac45eff-debug.lock
860 verbose cache add [ 'ref@*', null ]
861 verbose cache add name=undefined spec="ref@*" args=["ref@*",null]
862 verbose parsed url { protocol: null,
862 verbose parsed url   slashes: null,
862 verbose parsed url   auth: null,
862 verbose parsed url   host: null,
862 verbose parsed url   port: null,
862 verbose parsed url   hostname: null,
862 verbose parsed url   hash: null,
862 verbose parsed url   search: null,
862 verbose parsed url   query: null,
862 verbose parsed url   pathname: 'ref@*',
862 verbose parsed url   path: 'ref@*',
862 verbose parsed url   href: 'ref@*' }
863 verbose cache add name="ref" spec="*" args=["ref","*"]
864 verbose parsed url { protocol: null,
864 verbose parsed url   slashes: null,
864 verbose parsed url   auth: null,
864 verbose parsed url   host: null,
864 verbose parsed url   port: null,
864 verbose parsed url   hostname: null,
864 verbose parsed url   hash: null,
864 verbose parsed url   search: null,
864 verbose parsed url   query: null,
864 verbose parsed url   pathname: '*',
864 verbose parsed url   path: '*',
864 verbose parsed url   href: '*' }
865 verbose addNamed [ 'ref', '*' ]
866 verbose addNamed [ null, '*' ]
867 silly lockFile 905fdac8-ref ref@*
868 verbose lock ref@* /Users/craignishina/.npm/905fdac8-ref.lock
869 verbose cache add [ 'ref-struct@*', null ]
870 verbose cache add name=undefined spec="ref-struct@*" args=["ref-struct@*",null]
871 verbose parsed url { protocol: null,
871 verbose parsed url   slashes: null,
871 verbose parsed url   auth: null,
871 verbose parsed url   host: null,
871 verbose parsed url   port: null,
871 verbose parsed url   hostname: null,
871 verbose parsed url   hash: null,
871 verbose parsed url   search: null,
871 verbose parsed url   query: null,
871 verbose parsed url   pathname: 'ref-struct@*',
871 verbose parsed url   path: 'ref-struct@*',
871 verbose parsed url   href: 'ref-struct@*' }
872 verbose cache add name="ref-struct" spec="*" args=["ref-struct","*"]
873 verbose parsed url { protocol: null,
873 verbose parsed url   slashes: null,
873 verbose parsed url   auth: null,
873 verbose parsed url   host: null,
873 verbose parsed url   port: null,
873 verbose parsed url   hostname: null,
873 verbose parsed url   hash: null,
873 verbose parsed url   search: null,
873 verbose parsed url   query: null,
873 verbose parsed url   pathname: '*',
873 verbose parsed url   path: '*',
873 verbose parsed url   href: '*' }
874 verbose addNamed [ 'ref-struct', '*' ]
875 verbose addNamed [ null, '*' ]
876 silly lockFile 20ab9ce6-ref-struct ref-struct@*
877 verbose lock ref-struct@* /Users/craignishina/.npm/20ab9ce6-ref-struct.lock
878 silly addNameRange { name: 'bindings', range: '*', hasData: false }
879 silly addNameRange { name: 'debug', range: '*', hasData: false }
880 silly addNameRange { name: 'ref', range: '*', hasData: false }
881 silly addNameRange { name: 'ref-struct', range: '*', hasData: false }
882 verbose url raw bindings
883 verbose url resolving [ 'https://registry.npmjs.org/', './bindings' ]
884 verbose url resolved https://registry.npmjs.org/bindings
885 info trying registry request attempt 1 at 13:03:23
886 verbose etag "BJGP1201ZXLWX88VO1W0N0YSR"
887 http GET https://registry.npmjs.org/bindings
888 verbose url raw debug
889 verbose url resolving [ 'https://registry.npmjs.org/', './debug' ]
890 verbose url resolved https://registry.npmjs.org/debug
891 info trying registry request attempt 1 at 13:03:23
892 verbose etag "3OUBPQ62PQL6618PPQTBTTOHV"
893 http GET https://registry.npmjs.org/debug
894 verbose url raw ref
895 verbose url resolving [ 'https://registry.npmjs.org/', './ref' ]
896 verbose url resolved https://registry.npmjs.org/ref
897 info trying registry request attempt 1 at 13:03:23
898 verbose etag "6II9XPKGTP54OGUORMADY4PI2"
899 http GET https://registry.npmjs.org/ref
900 verbose url raw ref-struct
901 verbose url resolving [ 'https://registry.npmjs.org/', './ref-struct' ]
902 verbose url resolved https://registry.npmjs.org/ref-struct
903 info trying registry request attempt 1 at 13:03:23
904 verbose etag "E2FE75Z544IV5N5LOBWVNVHBG"
905 http GET https://registry.npmjs.org/ref-struct
906 http 304 https://registry.npmjs.org/debug
907 silly registry.get cb [ 304,
907 silly registry.get   { date: 'Thu, 12 Feb 2015 21:03:23 GMT',
907 silly registry.get     server: 'Apache',
907 silly registry.get     via: '1.1 varnish',
907 silly registry.get     'last-modified': 'Thu, 12 Feb 2015 21:02:55 GMT',
907 silly registry.get     'cache-control': 'max-age=60',
907 silly registry.get     etag: '"3OUBPQ62PQL6618PPQTBTTOHV"',
907 silly registry.get     age: '54',
907 silly registry.get     'x-served-by': 'cache-sjc3129-SJC',
907 silly registry.get     'x-cache': 'HIT',
907 silly registry.get     'x-cache-hits': '3',
907 silly registry.get     'x-timer': 'S1423775003.688377,VS0,VE0',
907 silly registry.get     vary: 'Accept',
907 silly registry.get     'content-length': '0',
907 silly registry.get     'keep-alive': 'timeout=10, max=50',
907 silly registry.get     connection: 'Keep-Alive' } ]
908 verbose etag debug from cache
909 silly addNameRange number 2 { name: 'debug', range: '*', hasData: true }
910 silly addNameRange versions [ 'debug',
910 silly addNameRange   [ '0.0.1',
910 silly addNameRange     '0.1.0',
910 silly addNameRange     '0.2.0',
910 silly addNameRange     '0.3.0',
910 silly addNameRange     '0.4.0',
910 silly addNameRange     '0.4.1',
910 silly addNameRange     '0.5.0',
910 silly addNameRange     '0.6.0',
910 silly addNameRange     '0.7.0',
910 silly addNameRange     '0.7.1',
910 silly addNameRange     '0.7.2',
910 silly addNameRange     '0.7.3',
910 silly addNameRange     '0.7.4',
910 silly addNameRange     '0.8.0',
910 silly addNameRange     '0.8.1',
910 silly addNameRange     '1.0.0',
910 silly addNameRange     '1.0.1',
910 silly addNameRange     '1.0.2',
910 silly addNameRange     '1.0.3',
910 silly addNameRange     '1.0.4',
910 silly addNameRange     '2.0.0',
910 silly addNameRange     '2.1.0',
910 silly addNameRange     '2.1.1' ] ]
911 verbose addNamed [ 'debug', '2.1.1' ]
912 verbose addNamed [ '2.1.1', '2.1.1' ]
913 silly lockFile 656b33b7-debug-2-1-1 debug@2.1.1
914 verbose lock debug@2.1.1 /Users/craignishina/.npm/656b33b7-debug-2-1-1.lock
915 silly lockFile 656b33b7-debug-2-1-1 debug@2.1.1
916 silly lockFile 656b33b7-debug-2-1-1 debug@2.1.1
917 silly lockFile 3ac45eff-debug debug@*
918 silly lockFile 3ac45eff-debug debug@*
919 http 304 https://registry.npmjs.org/bindings
920 silly registry.get cb [ 304,
920 silly registry.get   { date: 'Thu, 12 Feb 2015 21:03:23 GMT',
920 silly registry.get     server: 'Apache',
920 silly registry.get     via: '1.1 varnish',
920 silly registry.get     'last-modified': 'Thu, 12 Feb 2015 21:03:23 GMT',
920 silly registry.get     'cache-control': 'max-age=60',
920 silly registry.get     etag: '"BJGP1201ZXLWX88VO1W0N0YSR"',
920 silly registry.get     age: '37',
920 silly registry.get     'x-served-by': 'cache-sjc3132-SJC',
920 silly registry.get     'x-cache': 'HIT',
920 silly registry.get     'x-cache-hits': '1',
920 silly registry.get     'x-timer': 'S1423775003.698883,VS0,VE0',
920 silly registry.get     vary: 'Accept',
920 silly registry.get     'content-length': '0',
920 silly registry.get     'keep-alive': 'timeout=10, max=50',
920 silly registry.get     connection: 'Keep-Alive' } ]
921 verbose etag bindings from cache
922 silly addNameRange number 2 { name: 'bindings', range: '*', hasData: true }
923 silly addNameRange versions [ 'bindings',
923 silly addNameRange   [ '0.0.1',
923 silly addNameRange     '0.1.0',
923 silly addNameRange     '0.1.1',
923 silly addNameRange     '0.2.0',
923 silly addNameRange     '0.2.1',
923 silly addNameRange     '0.2.2',
923 silly addNameRange     '0.2.3',
923 silly addNameRange     '0.2.4',
923 silly addNameRange     '0.3.0',
923 silly addNameRange     '0.4.0',
923 silly addNameRange     '1.0.0',
923 silly addNameRange     '1.1.0',
923 silly addNameRange     '1.1.1',
923 silly addNameRange     '1.2.0',
923 silly addNameRange     '1.2.1' ] ]
924 verbose addNamed [ 'bindings', '1.2.1' ]
925 verbose addNamed [ '1.2.1', '1.2.1' ]
926 silly lockFile e9060511-bindings-1-2-1 bindings@1.2.1
927 verbose lock bindings@1.2.1 /Users/craignishina/.npm/e9060511-bindings-1-2-1.lock
928 silly lockFile e9060511-bindings-1-2-1 bindings@1.2.1
929 silly lockFile e9060511-bindings-1-2-1 bindings@1.2.1
930 silly lockFile a3858fc2-bindings bindings@*
931 silly lockFile a3858fc2-bindings bindings@*
932 http 304 https://registry.npmjs.org/ref-struct
933 silly registry.get cb [ 304,
933 silly registry.get   { date: 'Thu, 12 Feb 2015 21:03:23 GMT',
933 silly registry.get     server: 'Apache',
933 silly registry.get     via: '1.1 varnish',
933 silly registry.get     'last-modified': 'Thu, 12 Feb 2015 21:03:23 GMT',
933 silly registry.get     'cache-control': 'max-age=60',
933 silly registry.get     etag: '"E2FE75Z544IV5N5LOBWVNVHBG"',
933 silly registry.get     age: '0',
933 silly registry.get     'x-served-by': 'cache-sjc3124-SJC',
933 silly registry.get     'x-cache': 'HIT',
933 silly registry.get     'x-cache-hits': '1',
933 silly registry.get     'x-timer': 'S1423775003.698432,VS0,VE41',
933 silly registry.get     vary: 'Accept',
933 silly registry.get     'content-length': '0',
933 silly registry.get     'keep-alive': 'timeout=10, max=50',
933 silly registry.get     connection: 'Keep-Alive' } ]
934 verbose etag ref-struct from cache
935 silly addNameRange number 2 { name: 'ref-struct', range: '*', hasData: true }
936 silly addNameRange versions [ 'ref-struct',
936 silly addNameRange   [ '0.0.1',
936 silly addNameRange     '0.0.2',
936 silly addNameRange     '0.0.3',
936 silly addNameRange     '0.0.4',
936 silly addNameRange     '0.0.5',
936 silly addNameRange     '0.0.6',
936 silly addNameRange     '0.0.7',
936 silly addNameRange     '1.0.0' ] ]
937 verbose addNamed [ 'ref-struct', '1.0.0' ]
938 verbose addNamed [ '1.0.0', '1.0.0' ]
939 silly lockFile 7256be3f-ref-struct-1-0-0 ref-struct@1.0.0
940 verbose lock ref-struct@1.0.0 /Users/craignishina/.npm/7256be3f-ref-struct-1-0-0.lock
941 silly lockFile 7256be3f-ref-struct-1-0-0 ref-struct@1.0.0
942 silly lockFile 7256be3f-ref-struct-1-0-0 ref-struct@1.0.0
943 silly lockFile 20ab9ce6-ref-struct ref-struct@*
944 silly lockFile 20ab9ce6-ref-struct ref-struct@*
945 http 304 https://registry.npmjs.org/ref
946 silly registry.get cb [ 304,
946 silly registry.get   { date: 'Thu, 12 Feb 2015 21:03:23 GMT',
946 silly registry.get     server: 'Apache',
946 silly registry.get     via: '1.1 varnish',
946 silly registry.get     'last-modified': 'Thu, 12 Feb 2015 21:03:23 GMT',
946 silly registry.get     'cache-control': 'max-age=60',
946 silly registry.get     etag: '"6II9XPKGTP54OGUORMADY4PI2"',
946 silly registry.get     age: '0',
946 silly registry.get     'x-served-by': 'cache-sjc3133-SJC',
946 silly registry.get     'x-cache': 'HIT',
946 silly registry.get     'x-cache-hits': '1',
946 silly registry.get     'x-timer': 'S1423775003.691619,VS0,VE82',
946 silly registry.get     vary: 'Accept',
946 silly registry.get     'content-length': '0',
946 silly registry.get     'keep-alive': 'timeout=10, max=50',
946 silly registry.get     connection: 'Keep-Alive' } ]
947 verbose etag ref from cache
948 silly addNameRange number 2 { name: 'ref', range: '*', hasData: true }
949 silly addNameRange versions [ 'ref',
949 silly addNameRange   [ '0.0.1',
949 silly addNameRange     '0.0.2',
949 silly addNameRange     '0.0.3',
949 silly addNameRange     '0.0.4',
949 silly addNameRange     '0.0.5',
949 silly addNameRange     '0.0.6',
949 silly addNameRange     '0.0.7',
949 silly addNameRange     '0.0.8',
949 silly addNameRange     '0.0.9',
949 silly addNameRange     '0.0.10',
949 silly addNameRange     '0.0.11',
949 silly addNameRange     '0.0.12',
949 silly addNameRange     '0.0.13',
949 silly addNameRange     '0.0.14',
949 silly addNameRange     '0.0.15',
949 silly addNameRange     '0.0.16',
949 silly addNameRange     '0.0.17',
949 silly addNameRange     '0.0.18',
949 silly addNameRange     '0.0.19',
949 silly addNameRange     '0.0.20',
949 silly addNameRange     '0.1.0',
949 silly addNameRange     '0.1.1',
949 silly addNameRange     '0.1.2',
949 silly addNameRange     '0.1.3',
949 silly addNameRange     '0.2.0',
949 silly addNameRange     '0.2.1',
949 silly addNameRange     '0.2.2',
949 silly addNameRange     '0.2.3',
949 silly addNameRange     '0.3.0',
949 silly addNameRange     '0.3.1',
949 silly addNameRange     '0.3.2',
949 silly addNameRange     '0.3.3',
949 silly addNameRange     '0.3.4',
949 silly addNameRange     '0.3.5',
949 silly addNameRange     '1.0.0' ] ]
950 verbose addNamed [ 'ref', '1.0.0' ]
951 verbose addNamed [ '1.0.0', '1.0.0' ]
952 silly lockFile 3a0ec8c2-ref-1-0-0 ref@1.0.0
953 verbose lock ref@1.0.0 /Users/craignishina/.npm/3a0ec8c2-ref-1-0-0.lock
954 silly lockFile 3a0ec8c2-ref-1-0-0 ref@1.0.0
955 silly lockFile 3a0ec8c2-ref-1-0-0 ref@1.0.0
956 silly lockFile 905fdac8-ref ref@*
957 silly lockFile 905fdac8-ref ref@*
958 silly resolved [ { name: 'debug',
958 silly resolved     version: '2.1.1',
958 silly resolved     repository: { type: 'git', url: 'git://github.com/visionmedia/debug.git' },
958 silly resolved     description: 'small debugging utility',
958 silly resolved     keywords: [ 'debug', 'log', 'debugger' ],
958 silly resolved     author: { name: 'TJ Holowaychuk', email: 'tj@vision-media.ca' },
958 silly resolved     contributors: [ [Object] ],
958 silly resolved     license: 'MIT',
958 silly resolved     dependencies: { ms: '0.6.2' },
958 silly resolved     devDependencies: { browserify: '6.1.0', mocha: '*' },
958 silly resolved     main: './node.js',
958 silly resolved     browser: './browser.js',
958 silly resolved     component: { scripts: [Object] },
958 silly resolved     readme: '# debug\n\n  tiny node.js debugging utility modelled after node core\'s debugging technique.\n\n## Installation\n\n```bash\n$ npm install debug\n```\n\n## Usage\n\n With `debug` you simply invoke the exported function to generate your debug function, passing it a name which will determine if a noop function is returned, or a decorated `console.error`, so all of the `console` format string goodies you\'re used to work fine. A unique color is selected per-function for visibility.\n\nExample _app.js_:\n\n```js\nvar debug = require(\'debug\')(\'http\')\n  , http = require(\'http\')\n  , name = \'My App\';\n\n// fake app\n\ndebug(\'booting %s\', name);\n\nhttp.createServer(function(req, res){\n  debug(req.method + \' \' + req.url);\n  res.end(\'hello\\n\');\n}).listen(3000, function(){\n  debug(\'listening\');\n});\n\n// fake worker of some kind\n\nrequire(\'./worker\');\n```\n\nExample _worker.js_:\n\n```js\nvar debug = require(\'debug\')(\'worker\');\n\nsetInterval(function(){\n  debug(\'doing some work\');\n}, 1000);\n```\n\n The __DEBUG__ environment variable is then used to enable these based on space or comma-delimited names. Here are some examples:\n\n  ![debug http and worker](http://f.cl.ly/items/18471z1H402O24072r1J/Screenshot.png)\n\n  ![debug worker](http://f.cl.ly/items/1X413v1a3M0d3C2c1E0i/Screenshot.png)\n\n#### Windows note\n\n On Windows the environment variable is set using the `set` command. \n \n ```cmd\n set DEBUG=*,-not_this\n ```\n\nThen, run the program to be debugged as ususal.\n\n## Millisecond diff\n\n  When actively developing an application it can be useful to see when the time spent between one `debug()` call and the next. Suppose for example you invoke `debug()` before requesting a resource, and after as well, the "+NNNms" will show you how much time was spent between calls.\n\n  ![](http://f.cl.ly/items/2i3h1d3t121M2Z1A3Q0N/Screenshot.png)\n\n  When stdout is not a TTY, `Date#toUTCString()` is used, making it more useful for logging the debug information as shown below:\n\n  ![](http://f.cl.ly/items/112H3i0e0o0P0a2Q2r11/Screenshot.png)\n\n## Conventions\n\n If you\'re using this in one or more of your libraries, you _should_ use the name of your library so that developers may toggle debugging as desired without guessing names. If you have more than one debuggers you _should_ prefix them with your library name and use ":" to separate features. For example "bodyParser" from Connect would then be "connect:bodyParser".\n\n## Wildcards\n\n  The `*` character may be used as a wildcard. Suppose for example your library has debuggers named "connect:bodyParser", "connect:compress", "connect:session", instead of listing all three with `DEBUG=connect:bodyParser,connect.compress,connect:session`, you may simply do `DEBUG=connect:*`, or to run everything using this module simply use `DEBUG=*`.\n\n  You can also exclude specific debuggers by prefixing them with a "-" character.  For example, `DEBUG=*,-connect:*` would include all debuggers except those starting with "connect:".\n\n## Browser support\n\n  Debug works in the browser as well, currently persisted by `localStorage`. For example if you have `worker:a` and `worker:b` as shown below, and wish to debug both type `debug.enable(\'worker:*\')` in the console and refresh the page, this will remain until you disable with `debug.disable()`.\n\n```js\na = debug(\'worker:a\');\nb = debug(\'worker:b\');\n\nsetInterval(function(){\n  a(\'doing some work\');\n}, 1000);\n\nsetInterval(function(){\n  b(\'doing some work\');\n}, 1200);\n```\n\n#### Web Inspector Colors\n\n  Colors are also enabled on "Web Inspectors" that understand the `%c` formatting\n  option. These are WebKit web inspectors, Firefox ([since version\n  31](https://hacks.mozilla.org/2014/05/editable-box-model-multiple-selection-sublime-text-keys-much-more-firefox-developer-tools-episode-31/))\n  and the Firebug plugin for Firefox (any version).\n\n  Colored output looks something like:\n\n  ![](https://cloud.githubusercontent.com/assets/71256/3139768/b98c5fd8-e8ef-11e3-862a-f7253b6f47c6.png)\n\n### stderr vs stdout\n\nYou can set an alternative logging method per-namespace by overriding the `log` method on a per-namespace or globally:\n\nExample _stderr.js_:\n\n```js\nvar debug = require(\'../\');\nvar log = debug(\'app:log\');\n\n// by default console.log is used\nlog(\'goes to stdout!\');\n\nvar error = debug(\'app:error\');\n// set this namespace to log via console.error\nerror.log = console.error.bind(console); // don\'t forget to bind to console!\nerror(\'goes to stderr\');\nlog(\'still goes to stdout!\');\n\n// set all output to go via console.warn\n// overrides all per-namespace log settings\ndebug.log = console.warn.bind(console);\nlog(\'now goes to stderr via console.warn\');\nerror(\'still goes to stderr, but via console.warn now\');\n```\n\n## Authors\n\n - TJ Holowaychuk\n - Nathan Rajlich\n\n## License\n\n(The MIT License)\n\nCopyright (c) 2014 TJ Holowaychuk &lt;tj@vision-media.ca&gt;\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\'Software\'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \'AS IS\', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n',
958 silly resolved     readmeFilename: 'Readme.md',
958 silly resolved     bugs: { url: 'https://github.com/visionmedia/debug/issues' },
958 silly resolved     homepage: 'https://github.com/visionmedia/debug',
958 silly resolved     _id: 'debug@2.1.1',
958 silly resolved     _from: 'debug@*' },
958 silly resolved   { name: 'bindings',
958 silly resolved     description: 'Helper module for loading your native module\'s .node file',
958 silly resolved     keywords: [ 'native', 'addon', 'bindings', 'gyp', 'waf', 'c', 'c++' ],
958 silly resolved     version: '1.2.1',
958 silly resolved     author:
958 silly resolved      { name: 'Nathan Rajlich',
958 silly resolved        email: 'nathan@tootallnate.net',
958 silly resolved        url: 'http://tootallnate.net' },
958 silly resolved     repository:
958 silly resolved      { type: 'git',
958 silly resolved        url: 'git://github.com/TooTallNate/node-bindings.git' },
958 silly resolved     main: './bindings.js',
958 silly resolved     bugs: { url: 'https://github.com/TooTallNate/node-bindings/issues' },
958 silly resolved     homepage: 'https://github.com/TooTallNate/node-bindings',
958 silly resolved     license: 'MIT',
958 silly resolved     readme: 'node-bindings\n=============\n### Helper module for loading your native module\'s .node file\n\nThis is a helper module for authors of Node.js native addon modules.\nIt is basically the "swiss army knife" of `require()`ing your native module\'s\n`.node` file.\n\nThroughout the course of Node\'s native addon history, addons have ended up being\ncompiled in a variety of different places, depending on which build tool and which\nversion of node was used. To make matters worse, now the _gyp_ build tool can\nproduce either a _Release_ or _Debug_ build, each being built into different\nlocations.\n\nThis module checks _all_ the possible locations that a native addon would be built\nat, and returns the first one that loads successfully.\n\n\nInstallation\n------------\n\nInstall with `npm`:\n\n``` bash\n$ npm install bindings\n```\n\nOr add it to the `"dependencies"` section of your _package.json_ file.\n\n\nExample\n-------\n\n`require()`ing the proper bindings file for the current node version, platform\nand architecture is as simple as:\n\n``` js\nvar bindings = require(\'bindings\')(\'binding.node\')\n\n// Use your bindings defined in your C files\nbindings.your_c_function()\n```\n\n\nNice Error Output\n-----------------\n\nWhen the `.node` file could not be loaded, `node-bindings` throws an Error with\na nice error message telling you exactly what was tried. You can also check the\n`err.tries` Array property.\n\n```\nError: Could not load the bindings file. Tried:\n → /Users/nrajlich/ref/build/binding.node\n → /Users/nrajlich/ref/build/Debug/binding.node\n → /Users/nrajlich/ref/build/Release/binding.node\n → /Users/nrajlich/ref/out/Debug/binding.node\n → /Users/nrajlich/ref/Debug/binding.node\n → /Users/nrajlich/ref/out/Release/binding.node\n → /Users/nrajlich/ref/Release/binding.node\n → /Users/nrajlich/ref/build/default/binding.node\n → /Users/nrajlich/ref/compiled/0.8.2/darwin/x64/binding.node\n    at bindings (/Users/nrajlich/ref/node_modules/bindings/bindings.js:84:13)\n    at Object.<anonymous> (/Users/nrajlich/ref/lib/ref.js:5:47)\n    at Module._compile (module.js:449:26)\n    at Object.Module._extensions..js (module.js:467:10)\n    at Module.load (module.js:356:32)\n    at Function.Module._load (module.js:312:12)\n    ...\n```\n\n\nLicense\n-------\n\n(The MIT License)\n\nCopyright (c) 2012 Nathan Rajlich &lt;nathan@tootallnate.net&gt;\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\'Software\'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \'AS IS\', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n',
958 silly resolved     readmeFilename: 'README.md',
958 silly resolved     _id: 'bindings@1.2.1',
958 silly resolved     _from: 'bindings@*' },
958 silly resolved   { name: 'ref-struct',
958 silly resolved     description: 'Create ABI-compliant "struct" instances on top of Buffers',
958 silly resolved     keywords: [ 'struct', 'ref', 'abi', 'c', 'c++', 'ffi' ],
958 silly resolved     version: '1.0.0',
958 silly resolved     author:
958 silly resolved      { name: 'Nathan Rajlich',
958 silly resolved        email: 'nathan@tootallnate.net',
958 silly resolved        url: 'http://tootallnate.net' },
958 silly resolved     repository:
958 silly resolved      { type: 'git',
958 silly resolved        url: 'git://github.com/TooTallNate/ref-struct.git' },
958 silly resolved     main: './lib/struct.js',
958 silly resolved     scripts: { test: 'node-gyp rebuild --directory test && mocha -gc --reporter spec' },
958 silly resolved     dependencies: { debug: '2', ref: '~0.3.2' },
958 silly resolved     devDependencies:
958 silly resolved      { bindings: '~1.2.0',
958 silly resolved        nan: '~1.1.0',
958 silly resolved        mocha: '*',
958 silly resolved        'ref-array': '~0.0.3' },
958 silly resolved     readme: 'ref-struct\n==========\n### Create ABI-compliant "[struct][]" instances on top of Buffers\n[![Build Status](https://secure.travis-ci.org/TooTallNate/ref-struct.svg)](https://travis-ci.org/TooTallNate/ref-struct)\n[![Build Status](https://ci.appveyor.com/api/projects/status/6v4h5v5kh9kmtke8)](https://ci.appveyor.com/project/TooTallNate/ref-struct)\n\n\nThis module offers a "struct" implementation on top of Node.js Buffers\nusing the ref "type" interface.\n\nInstallation\n------------\n\nInstall with `npm`:\n\n``` bash\n$ npm install ref-struct\n```\n\n\nExamples\n--------\n\nSay you wanted to emulate the `timeval` struct from the stdlib:\n\n``` c\nstruct timeval {\n  time_t       tv_sec;   /* seconds since Jan. 1, 1970 */\n  suseconds_t  tv_usec;  /* and microseconds */\n};\n```\n\n``` js\nvar ref = require(\'ref\')\nvar StructType = require(\'ref-struct\')\n\n// define the time types\nvar time_t = ref.types.long\nvar suseconds_t = ref.types.long\n\n// define the "timeval" struct type\nvar timeval = StructType({\n  tv_sec: time_t,\n  tv_usec: suseconds_t\n})\n\n// now we can create instances of it\nvar tv = new timeval\n```\n\n#### With `node-ffi`\n\nThis gets very powerful when combined with `node-ffi` to invoke C functions:\n\n``` js\nvar ffi = require(\'ffi\')\n\nvar tv = new timeval\ngettimeofday(tv.ref(), null)\n```\n\n#### Progressive API\n\nYou can build up a Struct "type" incrementally (useful when interacting with a\nparser) using the `defineProperty()` function. But as soon as you _create_ an\ninstance of the struct type, then the struct type is finalized, and no more\nproperties may be added to it.\n\n``` js\nvar ref = require(\'ref\')\nvar StructType = require(\'ref-struct\')\n\nvar MyStruct = Struct()\nMyStruct.defineProperty(\'width\', ref.types.int)\nMyStruct.defineProperty(\'height\', ref.types.int)\n\nvar i = new MyStruct({ width: 5, height: 10 })\n\nMyStruct.defineProperty(\'weight\', ref.types.int)\n// AssertionError: an instance of this Struct type has already been created, cannot add new "fields" anymore\n//      at Function.defineProperty (/Users/nrajlich/ref-struct/lib/struct.js:180:3)\n```\n\n\nLicense\n-------\n\n(The MIT License)\n\nCopyright (c) 2012 Nathan Rajlich &lt;nathan@tootallnate.net&gt;\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\'Software\'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \'AS IS\', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n[struct]: http://wikipedia.org/wiki/Struct_(C_programming_language)\n',
958 silly resolved     readmeFilename: 'README.md',
958 silly resolved     bugs: { url: 'https://github.com/TooTallNate/ref-struct/issues' },
958 silly resolved     homepage: 'https://github.com/TooTallNate/ref-struct',
958 silly resolved     _id: 'ref-struct@1.0.0',
958 silly resolved     _from: 'ref-struct@*' },
958 silly resolved   { name: 'ref',
958 silly resolved     description: 'Turn Buffer instances into "pointers"',
958 silly resolved     keywords:
958 silly resolved      [ 'native',
958 silly resolved        'buffer',
958 silly resolved        'extensions',
958 silly resolved        'c++',
958 silly resolved        'pointer',
958 silly resolved        'reference',
958 silly resolved        'dereference',
958 silly resolved        'type',
958 silly resolved        'int',
958 silly resolved        'long',
958 silly resolved        'float',
958 silly resolved        'double',
958 silly resolved        'byte',
958 silly resolved        '64' ],
958 silly resolved     version: '1.0.0',
958 silly resolved     author:
958 silly resolved      { name: 'Nathan Rajlich',
958 silly resolved        email: 'nathan@tootallnate.net',
958 silly resolved        url: 'http://tootallnate.net' },
958 silly resolved     repository: { type: 'git', url: 'git://github.com/TooTallNate/ref.git' },
958 silly resolved     main: './lib/ref.js',
958 silly resolved     scripts:
958 silly resolved      { docs: 'node docs/compile',
958 silly resolved        test: 'mocha -gc --reporter spec',
958 silly resolved        install: 'node-gyp rebuild' },
958 silly resolved     dependencies: { bindings: '~1.2.0', debug: '2', nan: '~1.5.1' },
958 silly resolved     devDependencies:
958 silly resolved      { dox: '0.4.4',
958 silly resolved        'highlight.js': '1',
958 silly resolved        jade: '0.35.0',
958 silly resolved        marked: '0.3.2',
958 silly resolved        mocha: '*',
958 silly resolved        weak: '0.3.2' },
958 silly resolved     gypfile: true,
958 silly resolved     readme: 'ref\n===\n### Turn Buffer instances into "pointers"\n[![Build Status](https://secure.travis-ci.org/TooTallNate/ref.svg)](https://travis-ci.org/TooTallNate/ref)\n[![Build Status](https://ci.appveyor.com/api/projects/status/n8mswogp2im4uot8)](https://ci.appveyor.com/project/TooTallNate/ref)\n\n\nThis module is inspired by the old `Pointer` class from node-ffi, but with the\nintent of using Node\'s fast `Buffer` instances instead of a slow C++ `Pointer`\nclass. These two concepts were previously very similar, but now this module\nbrings over the functionality that Pointers had and Buffers are missing, so\nnow Buffers are a lot more powerful.\n\n### Features:\n\n * Get the memory address of any `Buffer` instance\n * Read/write references to JavaScript Objects into `Buffer` instances\n * Read/write `Buffer` instances\' memory addresses to other `Buffer` instances\n * Read/write `int64_t` and `uint64_t` data values (Numbers or Strings)\n * A "type" convention, so that you can specify a buffer as an `int *`,\n   and reference/dereference at will.\n * Offers a buffer instance representing the `NULL` pointer\n\n\nInstallation\n------------\n\nInstall with `npm`:\n\n``` bash\n$ npm install ref\n```\n\n\nExamples\n--------\n\n#### referencing and derefencing\n\n``` js\nvar ref = require(\'ref\')\n\n// so we can all agree that a buffer with the int value written\n// to it could be represented as an "int *"\nvar buf = new Buffer(4)\nbuf.writeInt32LE(12345, 0)\n\n// first, what is the memory address of the buffer?\nconsole.log(buf.address())  // ← 140362165284824\n\n// using `ref`, you can set the "type", and gain magic abilities!\nbuf.type = ref.types.int\n\n// now we can dereference to get the "meaningful" value\nconsole.log(buf.deref())  // ← 12345\n\n\n// you can also get references to the original buffer if you need it.\n// this buffer could be thought of as an "int **"\nvar one = buf.ref()\n\n// and you can dereference all the way back down to an int\nconsole.log(one.deref().deref())  // ← 12345\n```\n\nSee the [full API Docs][docs] for more examples.\n\n\nThe "type" interface\n--------------------\n\nYou can easily define your own "type" objects at attach to `Buffer` instances.\nIt just needs to be a regular JavaScript Object that contains the following\nproperties:\n\n| **Name**      | **Data Type**                    | **Description**\n|:--------------|:---------------------------------|:----------------------------------\n| `size`        | Number                           | The size in bytes required to hold this type.\n| `indirection` | Number                           | The current level of indirection of the buffer. Usually this would be _1_, and gets incremented on Buffers from `ref()` calls. A value of less than or equal to _0_ is invalid.\n| `get`         | Function (buffer, offset)        | The function to invoke when dereferencing this type when the indirection level is _1_.\n| `set`         | Function (buffer, offset, value) | The function to invoke when setting a value to a buffer instance.\n| `name`        | String                           | _(optional)_ The name to use during debugging for this type.\n| `alignment`   | Number                           | _(optional)_ The alignment of this type when placed in a struct. Defaults to the type\'s `size`.\n\nFor example, you could define a "bigint" type that dereferences into a\n[`bigint`](https://github.com/substack/node-bigint) instance:\n\n``` js\nvar ref = require(\'ref\')\nvar bigint = require(\'bigint\')\n\n// define the "type" instance according to the spec\nvar BigintType = {\n    size: ref.sizeof.int64\n  , indirection: 1\n  , get: function (buffer, offset) {\n      // return a bigint instance from the buffer\n      return bigint.fromBuffer(buffer)\n    }\n  , set: function (buffer, offset, value) {\n      // \'value\' would be a bigint instance\n      var val = value.toString()\n      return ref.writeInt64(buffer, offset || 0, val)\n    }\n}\n\n// now we can create instances of the type from existing buffers.\n// "buf" is some Buffer instance returned from some external data\n// source, which should contain "bigint" binary data.\nbuf.type = BigintType\n\n// and now you can create "bigint" instances using this generic "types" API\nvar val = buf.deref()\n            .add(\'1234\')\n            .sqrt()\n            .shiftLeft(5)\n```\n\nBuild the docs\n--------------\n\nInstall the dev dependencies:\n\n``` bash\n$ npm install\n```\n\nGenerate the docs:\n\n``` bash\n$ npm run docs\n```\n\n\nLicense\n-------\n\n(The MIT License)\n\nCopyright (c) 2012 Nathan Rajlich &lt;nathan@tootallnate.net&gt;\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\'Software\'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \'AS IS\', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n[docs]: http://tootallnate.github.com/ref\n',
958 silly resolved     readmeFilename: 'README.md',
958 silly resolved     bugs: { url: 'https://github.com/TooTallNate/ref/issues' },
958 silly resolved     homepage: 'https://github.com/TooTallNate/ref',
958 silly resolved     _id: 'ref@1.0.0',
958 silly resolved     _from: 'ref@*' } ]
959 info install debug@2.1.1 into /Users/craignishina/Workspace/IntelHackathon/server/node_modules/ffi
960 info install bindings@1.2.1 into /Users/craignishina/Workspace/IntelHackathon/server/node_modules/ffi
961 info install ref-struct@1.0.0 into /Users/craignishina/Workspace/IntelHackathon/server/node_modules/ffi
962 info install ref@1.0.0 into /Users/craignishina/Workspace/IntelHackathon/server/node_modules/ffi
963 info installOne debug@2.1.1
964 info installOne bindings@1.2.1
965 info installOne ref-struct@1.0.0
966 info installOne ref@1.0.0
967 info /Users/craignishina/Workspace/IntelHackathon/server/node_modules/ffi/node_modules/debug unbuild
968 info /Users/craignishina/Workspace/IntelHackathon/server/node_modules/ffi/node_modules/bindings unbuild
969 info /Users/craignishina/Workspace/IntelHackathon/server/node_modules/ffi/node_modules/ref-struct unbuild
970 info /Users/craignishina/Workspace/IntelHackathon/server/node_modules/ffi/node_modules/ref unbuild
971 verbose tar unpack /Users/craignishina/.npm/debug/2.1.1/package.tgz
972 silly lockFile 327fe7f7-e-modules-ffi-node-modules-debug tar:///Users/craignishina/Workspace/IntelHackathon/server/node_modules/ffi/node_modules/debug
973 verbose lock tar:///Users/craignishina/Workspace/IntelHackathon/server/node_modules/ffi/node_modules/debug /Users/craignishina/.npm/327fe7f7-e-modules-ffi-node-modules-debug.lock
974 silly lockFile 7c853b25-hina-npm-debug-2-1-1-package-tgz tar:///Users/craignishina/.npm/debug/2.1.1/package.tgz
975 verbose lock tar:///Users/craignishina/.npm/debug/2.1.1/package.tgz /Users/craignishina/.npm/7c853b25-hina-npm-debug-2-1-1-package-tgz.lock
976 verbose tar unpack /Users/craignishina/.npm/bindings/1.2.1/package.tgz
977 silly lockFile a8a3318f-odules-ffi-node-modules-bindings tar:///Users/craignishina/Workspace/IntelHackathon/server/node_modules/ffi/node_modules/bindings
978 verbose lock tar:///Users/craignishina/Workspace/IntelHackathon/server/node_modules/ffi/node_modules/bindings /Users/craignishina/.npm/a8a3318f-odules-ffi-node-modules-bindings.lock
979 silly lockFile 4ba81f3b-a-npm-bindings-1-2-1-package-tgz tar:///Users/craignishina/.npm/bindings/1.2.1/package.tgz
980 verbose lock tar:///Users/craignishina/.npm/bindings/1.2.1/package.tgz /Users/craignishina/.npm/4ba81f3b-a-npm-bindings-1-2-1-package-tgz.lock
981 verbose tar unpack /Users/craignishina/.npm/ref-struct/1.0.0/package.tgz
982 silly lockFile a3d3abf5-ules-ffi-node-modules-ref-struct tar:///Users/craignishina/Workspace/IntelHackathon/server/node_modules/ffi/node_modules/ref-struct
983 verbose lock tar:///Users/craignishina/Workspace/IntelHackathon/server/node_modules/ffi/node_modules/ref-struct /Users/craignishina/.npm/a3d3abf5-ules-ffi-node-modules-ref-struct.lock
984 silly lockFile b653d8df-npm-ref-struct-1-0-0-package-tgz tar:///Users/craignishina/.npm/ref-struct/1.0.0/package.tgz
985 verbose lock tar:///Users/craignishina/.npm/ref-struct/1.0.0/package.tgz /Users/craignishina/.npm/b653d8df-npm-ref-struct-1-0-0-package-tgz.lock
986 verbose tar unpack /Users/craignishina/.npm/ref/1.0.0/package.tgz
987 silly lockFile 01a1c1bc-ode-modules-ffi-node-modules-ref tar:///Users/craignishina/Workspace/IntelHackathon/server/node_modules/ffi/node_modules/ref
988 verbose lock tar:///Users/craignishina/Workspace/IntelHackathon/server/node_modules/ffi/node_modules/ref /Users/craignishina/.npm/01a1c1bc-ode-modules-ffi-node-modules-ref.lock
989 silly lockFile 311a890a-ishina-npm-ref-1-0-0-package-tgz tar:///Users/craignishina/.npm/ref/1.0.0/package.tgz
990 verbose lock tar:///Users/craignishina/.npm/ref/1.0.0/package.tgz /Users/craignishina/.npm/311a890a-ishina-npm-ref-1-0-0-package-tgz.lock
991 silly gunzTarPerm modes [ '755', '644' ]
992 silly gunzTarPerm modes [ '755', '644' ]
993 silly gunzTarPerm modes [ '755', '644' ]
994 silly gunzTarPerm modes [ '755', '644' ]
995 silly gunzTarPerm extractEntry package.json
996 silly gunzTarPerm extractEntry package.json
997 silly gunzTarPerm extractEntry package.json
998 silly gunzTarPerm extractEntry package.json
999 silly gunzTarPerm extractEntry .npmignore
1000 silly gunzTarPerm extractEntry browser.js
1001 silly gunzTarPerm extractEntry README.md
1002 silly gunzTarPerm extractEntry bindings.js
1003 silly gunzTarPerm extractEntry .npmignore
1004 silly gunzTarPerm extractEntry README.md
1005 silly gunzTarPerm extractEntry .npmignore
1006 silly gunzTarPerm extractEntry README.md
1007 silly gunzTarPerm extractEntry debug.js
1008 silly gunzTarPerm extractEntry node.js
1009 silly gunzTarPerm extractEntry .jshintrc
1010 silly gunzTarPerm extractEntry .travis.yml
1011 silly gunzTarPerm extractEntry test/address.js
1012 silly gunzTarPerm extractEntry test/coerce.js
1013 silly gunzTarPerm extractEntry .jshintrc
1014 silly gunzTarPerm extractEntry History.md
1015 silly gunzTarPerm extractEntry appveyor.yml
1016 silly gunzTarPerm extractEntry test/int64.js
1017 silly gunzTarPerm extractEntry test/isNull.js
1018 silly gunzTarPerm extractEntry History.md
1019 silly gunzTarPerm extractEntry component.json
1020 silly gunzTarPerm extractEntry lib/struct.js
1021 silly gunzTarPerm extractEntry test/struct.js
1022 silly gunzTarPerm extractEntry test/binding.gyp
1023 silly gunzTarPerm extractEntry test/struct_tests.cc
1024 silly gunzTarPerm extractEntry test/char.js
1025 silly gunzTarPerm extractEntry test/pointer.js
1026 silly gunzTarPerm extractEntry Makefile
1027 silly gunzTarPerm extractEntry Readme.md
1028 silly lockFile a8a3318f-odules-ffi-node-modules-bindings tar:///Users/craignishina/Workspace/IntelHackathon/server/node_modules/ffi/node_modules/bindings
1029 silly lockFile a8a3318f-odules-ffi-node-modules-bindings tar:///Users/craignishina/Workspace/IntelHackathon/server/node_modules/ffi/node_modules/bindings
1030 silly gunzTarPerm extractEntry test/ref-deref.js
1031 silly gunzTarPerm extractEntry test/reinterpret.js
1032 silly lockFile 4ba81f3b-a-npm-bindings-1-2-1-package-tgz tar:///Users/craignishina/.npm/bindings/1.2.1/package.tgz
1033 silly lockFile 4ba81f3b-a-npm-bindings-1-2-1-package-tgz tar:///Users/craignishina/.npm/bindings/1.2.1/package.tgz
1034 info preinstall bindings@1.2.1
1035 verbose readDependencies using package.json deps
1036 verbose readDependencies using package.json deps
1037 silly resolved []
1038 verbose about to build /Users/craignishina/Workspace/IntelHackathon/server/node_modules/ffi/node_modules/bindings
1039 info build /Users/craignishina/Workspace/IntelHackathon/server/node_modules/ffi/node_modules/bindings
1040 verbose linkStuff [ false,
1040 verbose linkStuff   false,
1040 verbose linkStuff   false,
1040 verbose linkStuff   '/Users/craignishina/Workspace/IntelHackathon/server/node_modules/ffi/node_modules' ]
1041 info linkStuff bindings@1.2.1
1042 verbose linkBins bindings@1.2.1
1043 verbose linkMans bindings@1.2.1
1044 verbose rebuildBundles bindings@1.2.1
1045 silly gunzTarPerm extractEntry test/reinterpretUntilZeros.js
1046 silly gunzTarPerm extractEntry test/string.js
1047 info install bindings@1.2.1
1048 info postinstall bindings@1.2.1
1049 silly gunzTarPerm extractEntry bower.json
1050 silly gunzTarPerm extractEntry test/bool.js
1051 silly gunzTarPerm extractEntry test/types.js
1052 silly gunzTarPerm extractEntry test/alloc.js
1053 silly gunzTarPerm extractEntry test/object.js
1054 silly gunzTarPerm extractEntry test/utf16le.bin
1055 silly gunzTarPerm extractEntry appveyor.yml
1056 silly gunzTarPerm extractEntry .travis.yml
1057 silly gunzTarPerm extractEntry docs/compile.js
1058 silly gunzTarPerm extractEntry docs/gh-pages.sh
1059 silly gunzTarPerm extractEntry docs/images/apple-touch-icon-114x114.png
1060 silly gunzTarPerm extractEntry docs/images/apple-touch-icon-72x72.png
1061 silly gunzTarPerm extractEntry docs/images/apple-touch-icon.png
1062 silly gunzTarPerm extractEntry docs/images/favicon.ico
1063 silly gunzTarPerm extractEntry docs/images/ref.pxm
1064 silly lockFile 327fe7f7-e-modules-ffi-node-modules-debug tar:///Users/craignishina/Workspace/IntelHackathon/server/node_modules/ffi/node_modules/debug
1065 silly lockFile 327fe7f7-e-modules-ffi-node-modules-debug tar:///Users/craignishina/Workspace/IntelHackathon/server/node_modules/ffi/node_modules/debug
1066 silly lockFile 7c853b25-hina-npm-debug-2-1-1-package-tgz tar:///Users/craignishina/.npm/debug/2.1.1/package.tgz
1067 silly lockFile 7c853b25-hina-npm-debug-2-1-1-package-tgz tar:///Users/craignishina/.npm/debug/2.1.1/package.tgz
1068 info preinstall debug@2.1.1
1069 silly gunzTarPerm extractEntry docs/index.jade
1070 verbose readDependencies using package.json deps
1071 verbose readDependencies using package.json deps
1072 verbose cache add [ 'ms@0.6.2', null ]
1073 verbose cache add name=undefined spec="ms@0.6.2" args=["ms@0.6.2",null]
1074 verbose parsed url { protocol: null,
1074 verbose parsed url   slashes: null,
1074 verbose parsed url   auth: null,
1074 verbose parsed url   host: null,
1074 verbose parsed url   port: null,
1074 verbose parsed url   hostname: null,
1074 verbose parsed url   hash: null,
1074 verbose parsed url   search: null,
1074 verbose parsed url   query: null,
1074 verbose parsed url   pathname: 'ms@0.6.2',
1074 verbose parsed url   path: 'ms@0.6.2',
1074 verbose parsed url   href: 'ms@0.6.2' }
1075 verbose cache add name="ms" spec="0.6.2" args=["ms","0.6.2"]
1076 verbose parsed url { protocol: null,
1076 verbose parsed url   slashes: null,
1076 verbose parsed url   auth: null,
1076 verbose parsed url   host: null,
1076 verbose parsed url   port: null,
1076 verbose parsed url   hostname: null,
1076 verbose parsed url   hash: null,
1076 verbose parsed url   search: null,
1076 verbose parsed url   query: null,
1076 verbose parsed url   pathname: '0.6.2',
1076 verbose parsed url   path: '0.6.2',
1076 verbose parsed url   href: '0.6.2' }
1077 verbose addNamed [ 'ms', '0.6.2' ]
1078 verbose addNamed [ '0.6.2', '0.6.2' ]
1079 silly lockFile 549cc243-ms-0-6-2 ms@0.6.2
1080 verbose lock ms@0.6.2 /Users/craignishina/.npm/549cc243-ms-0-6-2.lock
1081 silly gunzTarPerm extractEntry docs/scripts/jquery-1.7.2.min.js
1082 silly gunzTarPerm extractEntry docs/scripts/main.js
1083 verbose url raw ms/0.6.2
1084 verbose url resolving [ 'https://registry.npmjs.org/', './ms/0.6.2' ]
1085 verbose url resolved https://registry.npmjs.org/ms/0.6.2
1086 info trying registry request attempt 1 at 13:03:23
1087 verbose etag "5X193XKI0OYMRSV5OJQQDBYY6"
1088 http GET https://registry.npmjs.org/ms/0.6.2
1089 silly lockFile a3d3abf5-ules-ffi-node-modules-ref-struct tar:///Users/craignishina/Workspace/IntelHackathon/server/node_modules/ffi/node_modules/ref-struct
1090 silly lockFile a3d3abf5-ules-ffi-node-modules-ref-struct tar:///Users/craignishina/Workspace/IntelHackathon/server/node_modules/ffi/node_modules/ref-struct
1091 silly gunzTarPerm extractEntry docs/stylesheets/base.css
1092 silly gunzTarPerm extractEntry docs/stylesheets/layout.css
1093 silly lockFile b653d8df-npm-ref-struct-1-0-0-package-tgz tar:///Users/craignishina/.npm/ref-struct/1.0.0/package.tgz
1094 silly lockFile b653d8df-npm-ref-struct-1-0-0-package-tgz tar:///Users/craignishina/.npm/ref-struct/1.0.0/package.tgz
1095 info preinstall ref-struct@1.0.0
1096 verbose readDependencies using package.json deps
1097 silly gunzTarPerm extractEntry docs/stylesheets/skeleton.css
1098 silly gunzTarPerm extractEntry lib/ref.js
1099 verbose readDependencies using package.json deps
1100 silly gunzTarPerm extractEntry History.md
1101 silly gunzTarPerm extractEntry src/binding.cc
1102 verbose cache add [ 'ref@~0.3.2', null ]
1103 verbose cache add name=undefined spec="ref@~0.3.2" args=["ref@~0.3.2",null]
1104 verbose parsed url { protocol: null,
1104 verbose parsed url   slashes: null,
1104 verbose parsed url   auth: null,
1104 verbose parsed url   host: null,
1104 verbose parsed url   port: null,
1104 verbose parsed url   hostname: null,
1104 verbose parsed url   hash: null,
1104 verbose parsed url   search: null,
1104 verbose parsed url   query: null,
1104 verbose parsed url   pathname: 'ref@~0.3.2',
1104 verbose parsed url   path: 'ref@~0.3.2',
1104 verbose parsed url   href: 'ref@~0.3.2' }
1105 verbose cache add name="ref" spec="~0.3.2" args=["ref","~0.3.2"]
1106 verbose parsed url { protocol: null,
1106 verbose parsed url   slashes: null,
1106 verbose parsed url   auth: null,
1106 verbose parsed url   host: null,
1106 verbose parsed url   port: null,
1106 verbose parsed url   hostname: null,
1106 verbose parsed url   hash: null,
1106 verbose parsed url   search: null,
1106 verbose parsed url   query: null,
1106 verbose parsed url   pathname: '~0.3.2',
1106 verbose parsed url   path: '~0.3.2',
1106 verbose parsed url   href: '~0.3.2' }
1107 verbose addNamed [ 'ref', '~0.3.2' ]
1108 verbose addNamed [ null, '>=0.3.2-0 <0.4.0-0' ]
1109 silly lockFile bfa77c73-ref-0-3-2 ref@~0.3.2
1110 verbose lock ref@~0.3.2 /Users/craignishina/.npm/bfa77c73-ref-0-3-2.lock
1111 silly addNameRange { name: 'ref', range: '>=0.3.2-0 <0.4.0-0', hasData: false }
1112 verbose registry.get ref not expired, no request
1113 silly addNameRange number 2 { name: 'ref', range: '>=0.3.2-0 <0.4.0-0', hasData: true }
1114 silly addNameRange versions [ 'ref',
1114 silly addNameRange   [ '0.0.1',
1114 silly addNameRange     '0.0.2',
1114 silly addNameRange     '0.0.3',
1114 silly addNameRange     '0.0.4',
1114 silly addNameRange     '0.0.5',
1114 silly addNameRange     '0.0.6',
1114 silly addNameRange     '0.0.7',
1114 silly addNameRange     '0.0.8',
1114 silly addNameRange     '0.0.9',
1114 silly addNameRange     '0.0.10',
1114 silly addNameRange     '0.0.11',
1114 silly addNameRange     '0.0.12',
1114 silly addNameRange     '0.0.13',
1114 silly addNameRange     '0.0.14',
1114 silly addNameRange     '0.0.15',
1114 silly addNameRange     '0.0.16',
1114 silly addNameRange     '0.0.17',
1114 silly addNameRange     '0.0.18',
1114 silly addNameRange     '0.0.19',
1114 silly addNameRange     '0.0.20',
1114 silly addNameRange     '0.1.0',
1114 silly addNameRange     '0.1.1',
1114 silly addNameRange     '0.1.2',
1114 silly addNameRange     '0.1.3',
1114 silly addNameRange     '0.2.0',
1114 silly addNameRange     '0.2.1',
1114 silly addNameRange     '0.2.2',
1114 silly addNameRange     '0.2.3',
1114 silly addNameRange     '0.3.0',
1114 silly addNameRange     '0.3.1',
1114 silly addNameRange     '0.3.2',
1114 silly addNameRange     '0.3.3',
1114 silly addNameRange     '0.3.4',
1114 silly addNameRange     '0.3.5',
1114 silly addNameRange     '1.0.0' ] ]
1115 verbose addNamed [ 'ref', '0.3.5' ]
1116 verbose addNamed [ '0.3.5', '0.3.5' ]
1117 silly lockFile 2d54cf95-ref-0-3-5 ref@0.3.5
1118 verbose lock ref@0.3.5 /Users/craignishina/.npm/2d54cf95-ref-0-3-5.lock
1119 silly lockFile 2d54cf95-ref-0-3-5 ref@0.3.5
1120 silly lockFile 2d54cf95-ref-0-3-5 ref@0.3.5
1121 silly lockFile bfa77c73-ref-0-3-2 ref@~0.3.2
1122 silly lockFile bfa77c73-ref-0-3-2 ref@~0.3.2
1123 silly resolved [ { name: 'ref',
1123 silly resolved     description: 'Turn Buffer instances into "pointers"',
1123 silly resolved     keywords:
1123 silly resolved      [ 'native',
1123 silly resolved        'buffer',
1123 silly resolved        'extensions',
1123 silly resolved        'c++',
1123 silly resolved        'pointer',
1123 silly resolved        'reference',
1123 silly resolved        'dereference',
1123 silly resolved        'type',
1123 silly resolved        'int',
1123 silly resolved        'long',
1123 silly resolved        'float',
1123 silly resolved        'double',
1123 silly resolved        'byte',
1123 silly resolved        '64' ],
1123 silly resolved     version: '0.3.5',
1123 silly resolved     author:
1123 silly resolved      { name: 'Nathan Rajlich',
1123 silly resolved        email: 'nathan@tootallnate.net',
1123 silly resolved        url: 'http://tootallnate.net' },
1123 silly resolved     repository: { type: 'git', url: 'git://github.com/TooTallNate/ref.git' },
1123 silly resolved     main: './lib/ref.js',
1123 silly resolved     scripts:
1123 silly resolved      { docs: 'node docs/compile',
1123 silly resolved        test: 'mocha -gc --reporter spec',
1123 silly resolved        install: 'node-gyp rebuild' },
1123 silly resolved     dependencies: { bindings: '~1.2.0', debug: '2', nan: '~1.5.1' },
1123 silly resolved     devDependencies:
1123 silly resolved      { dox: '0.4.4',
1123 silly resolved        'highlight.js': '1',
1123 silly resolved        jade: '0.35.0',
1123 silly resolved        marked: '0.3.2',
1123 silly resolved        mocha: '*',
1123 silly resolved        weak: '0.3.2' },
1123 silly resolved     gypfile: true,
1123 silly resolved     readme: 'ref\n===\n### Turn Buffer instances into "pointers"\n[![Build Status](https://secure.travis-ci.org/TooTallNate/ref.svg)](https://travis-ci.org/TooTallNate/ref)\n[![Build Status](https://ci.appveyor.com/api/projects/status/n8mswogp2im4uot8)](https://ci.appveyor.com/project/TooTallNate/ref)\n\n\nThis module is inspired by the old `Pointer` class from node-ffi, but with the\nintent of using Node\'s fast `Buffer` instances instead of a slow C++ `Pointer`\nclass. These two concepts were previously very similar, but now this module\nbrings over the functionality that Pointers had and Buffers are missing, so\nnow Buffers are a lot more powerful.\n\n### Features:\n\n * Get the memory address of any `Buffer` instance\n * Read/write references to JavaScript Objects into `Buffer` instances\n * Read/write `Buffer` instances\' memory addresses to other `Buffer` instances\n * Read/write `int64_t` and `uint64_t` data values (Numbers or Strings)\n * A "type" convention, so that you can specify a buffer as an `int *`,\n   and reference/dereference at will.\n * Offers a buffer instance representing the `NULL` pointer\n\n\nInstallation\n------------\n\nInstall with `npm`:\n\n``` bash\n$ npm install ref\n```\n\n\nExamples\n--------\n\n#### referencing and derefencing\n\n``` js\nvar ref = require(\'ref\')\n\n// so we can all agree that a buffer with the int value written\n// to it could be represented as an "int *"\nvar buf = new Buffer(4)\nbuf.writeInt32LE(12345, 0)\n\n// first, what is the memory address of the buffer?\nconsole.log(buf.address())  // ← 140362165284824\n\n// using `ref`, you can set the "type", and gain magic abilities!\nbuf.type = ref.types.int\n\n// now we can dereference to get the "meaningful" value\nconsole.log(buf.deref())  // ← 12345\n\n\n// you can also get references to the original buffer if you need it.\n// this buffer could be thought of as an "int **"\nvar one = buf.ref()\n\n// and you can dereference all the way back down to an int\nconsole.log(one.deref().deref())  // ← 12345\n```\n\nSee the [full API Docs][docs] for more examples.\n\n\nThe "type" interface\n--------------------\n\nYou can easily define your own "type" objects at attach to `Buffer` instances.\nIt just needs to be a regular JavaScript Object that contains the following\nproperties:\n\n| **Name**      | **Data Type**                    | **Description**\n|:--------------|:---------------------------------|:----------------------------------\n| `size`        | Number                           | The size in bytes required to hold this type.\n| `indirection` | Number                           | The current level of indirection of the buffer. Usually this would be _1_, and gets incremented on Buffers from `ref()` calls. A value of less than or equal to _0_ is invalid.\n| `get`         | Function (buffer, offset)        | The function to invoke when dereferencing this type when the indirection level is _1_.\n| `set`         | Function (buffer, offset, value) | The function to invoke when setting a value to a buffer instance.\n| `name`        | String                           | _(optional)_ The name to use during debugging for this type.\n| `alignment`   | Number                           | _(optional)_ The alignment of this type when placed in a struct. Defaults to the type\'s `size`.\n\nFor example, you could define a "bigint" type that dereferences into a\n[`bigint`](https://github.com/substack/node-bigint) instance:\n\n``` js\nvar ref = require(\'ref\')\nvar bigint = require(\'bigint\')\n\n// define the "type" instance according to the spec\nvar BigintType = {\n    size: ref.sizeof.int64\n  , indirection: 1\n  , get: function (buffer, offset) {\n      // return a bigint instance from the buffer\n      return bigint.fromBuffer(buffer)\n    }\n  , set: function (buffer, offset, value) {\n      // \'value\' would be a bigint instance\n      var val = value.toString()\n      return ref.writeInt64(buffer, offset || 0, val)\n    }\n}\n\n// now we can create instances of the type from existing buffers.\n// "buf" is some Buffer instance returned from some external data\n// source, which should contain "bigint" binary data.\nbuf.type = BigintType\n\n// and now you can create "bigint" instances using this generic "types" API\nvar val = buf.deref()\n            .add(\'1234\')\n            .sqrt()\n            .shiftLeft(5)\n```\n\nBuild the docs\n--------------\n\nInstall the dev dependencies:\n\n``` bash\n$ npm install\n```\n\nGenerate the docs:\n\n``` bash\n$ npm run docs\n```\n\n\nLicense\n-------\n\n(The MIT License)\n\nCopyright (c) 2012 Nathan Rajlich &lt;nathan@tootallnate.net&gt;\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\'Software\'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \'AS IS\', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n[docs]: http://tootallnate.github.com/ref\n',
1123 silly resolved     readmeFilename: 'README.md',
1123 silly resolved     bugs: { url: 'https://github.com/TooTallNate/ref/issues' },
1123 silly resolved     homepage: 'https://github.com/TooTallNate/ref',
1123 silly resolved     _id: 'ref@0.3.5',
1123 silly resolved     _from: 'ref@~0.3.2' } ]
1124 info install ref@0.3.5 into /Users/craignishina/Workspace/IntelHackathon/server/node_modules/ffi/node_modules/ref-struct
1125 info installOne ref@0.3.5
1126 info /Users/craignishina/Workspace/IntelHackathon/server/node_modules/ffi/node_modules/ref-struct/node_modules/ref unbuild
1127 verbose tar unpack /Users/craignishina/.npm/ref/0.3.5/package.tgz
1128 silly lockFile 3c087746-ules-ref-struct-node-modules-ref tar:///Users/craignishina/Workspace/IntelHackathon/server/node_modules/ffi/node_modules/ref-struct/node_modules/ref
1129 verbose lock tar:///Users/craignishina/Workspace/IntelHackathon/server/node_modules/ffi/node_modules/ref-struct/node_modules/ref /Users/craignishina/.npm/3c087746-ules-ref-struct-node-modules-ref.lock
1130 silly lockFile 8217092c-ishina-npm-ref-0-3-5-package-tgz tar:///Users/craignishina/.npm/ref/0.3.5/package.tgz
1131 verbose lock tar:///Users/craignishina/.npm/ref/0.3.5/package.tgz /Users/craignishina/.npm/8217092c-ishina-npm-ref-0-3-5-package-tgz.lock
1132 silly gunzTarPerm modes [ '755', '644' ]
1133 silly gunzTarPerm extractEntry package.json
1134 silly gunzTarPerm extractEntry .npmignore
1135 silly gunzTarPerm extractEntry README.md
1136 silly gunzTarPerm extractEntry test/address.js
1137 silly gunzTarPerm extractEntry test/coerce.js
1138 silly gunzTarPerm extractEntry test/int64.js
1139 silly gunzTarPerm extractEntry test/isNull.js
1140 silly gunzTarPerm extractEntry test/char.js
1141 silly gunzTarPerm extractEntry test/pointer.js
1142 silly gunzTarPerm extractEntry test/ref-deref.js
1143 silly gunzTarPerm extractEntry test/reinterpret.js
1144 silly gunzTarPerm extractEntry test/reinterpretUntilZeros.js
1145 silly gunzTarPerm extractEntry test/string.js
1146 silly gunzTarPerm extractEntry test/bool.js
1147 silly gunzTarPerm extractEntry test/types.js
1148 silly gunzTarPerm extractEntry binding.gyp
1149 silly gunzTarPerm extractEntry test/alloc.js
1150 silly gunzTarPerm extractEntry test/object.js
1151 silly gunzTarPerm extractEntry test/utf16le.bin
1152 silly gunzTarPerm extractEntry appveyor.yml
1153 silly gunzTarPerm extractEntry .travis.yml
1154 silly gunzTarPerm extractEntry docs/compile.js
1155 silly gunzTarPerm extractEntry docs/gh-pages.sh
1156 silly gunzTarPerm extractEntry docs/images/apple-touch-icon-114x114.png
1157 silly gunzTarPerm extractEntry docs/images/apple-touch-icon-72x72.png
1158 silly gunzTarPerm extractEntry docs/images/apple-touch-icon.png
1159 silly gunzTarPerm extractEntry docs/images/favicon.ico
1160 silly gunzTarPerm extractEntry docs/images/ref.pxm
1161 silly gunzTarPerm extractEntry docs/index.jade
1162 silly gunzTarPerm extractEntry docs/scripts/jquery-1.7.2.min.js
1163 silly gunzTarPerm extractEntry docs/scripts/main.js
1164 silly gunzTarPerm extractEntry docs/stylesheets/base.css
1165 silly gunzTarPerm extractEntry docs/stylesheets/layout.css
1166 silly gunzTarPerm extractEntry docs/stylesheets/skeleton.css
1167 silly gunzTarPerm extractEntry lib/ref.js
1168 silly gunzTarPerm extractEntry History.md
1169 silly gunzTarPerm extractEntry src/binding.cc
1170 silly gunzTarPerm extractEntry binding.gyp
1171 silly lockFile 01a1c1bc-ode-modules-ffi-node-modules-ref tar:///Users/craignishina/Workspace/IntelHackathon/server/node_modules/ffi/node_modules/ref
1172 silly lockFile 01a1c1bc-ode-modules-ffi-node-modules-ref tar:///Users/craignishina/Workspace/IntelHackathon/server/node_modules/ffi/node_modules/ref
1173 silly lockFile 311a890a-ishina-npm-ref-1-0-0-package-tgz tar:///Users/craignishina/.npm/ref/1.0.0/package.tgz
1174 silly lockFile 311a890a-ishina-npm-ref-1-0-0-package-tgz tar:///Users/craignishina/.npm/ref/1.0.0/package.tgz
1175 info preinstall ref@1.0.0
1176 verbose readDependencies using package.json deps
1177 verbose readDependencies using package.json deps
1178 verbose cache add [ 'nan@~1.5.1', null ]
1179 verbose cache add name=undefined spec="nan@~1.5.1" args=["nan@~1.5.1",null]
1180 verbose parsed url { protocol: null,
1180 verbose parsed url   slashes: null,
1180 verbose parsed url   auth: null,
1180 verbose parsed url   host: null,
1180 verbose parsed url   port: null,
1180 verbose parsed url   hostname: null,
1180 verbose parsed url   hash: null,
1180 verbose parsed url   search: null,
1180 verbose parsed url   query: null,
1180 verbose parsed url   pathname: 'nan@~1.5.1',
1180 verbose parsed url   path: 'nan@~1.5.1',
1180 verbose parsed url   href: 'nan@~1.5.1' }
1181 verbose cache add name="nan" spec="~1.5.1" args=["nan","~1.5.1"]
1182 verbose parsed url { protocol: null,
1182 verbose parsed url   slashes: null,
1182 verbose parsed url   auth: null,
1182 verbose parsed url   host: null,
1182 verbose parsed url   port: null,
1182 verbose parsed url   hostname: null,
1182 verbose parsed url   hash: null,
1182 verbose parsed url   search: null,
1182 verbose parsed url   query: null,
1182 verbose parsed url   pathname: '~1.5.1',
1182 verbose parsed url   path: '~1.5.1',
1182 verbose parsed url   href: '~1.5.1' }
1183 verbose addNamed [ 'nan', '~1.5.1' ]
1184 verbose addNamed [ null, '>=1.5.1-0 <1.6.0-0' ]
1185 silly lockFile 188c3c8c-nan-1-5-1 nan@~1.5.1
1186 verbose lock nan@~1.5.1 /Users/craignishina/.npm/188c3c8c-nan-1-5-1.lock
1187 silly addNameRange { name: 'nan', range: '>=1.5.1-0 <1.6.0-0', hasData: false }
1188 verbose url raw nan
1189 verbose url resolving [ 'https://registry.npmjs.org/', './nan' ]
1190 verbose url resolved https://registry.npmjs.org/nan
1191 info trying registry request attempt 1 at 13:03:23
1192 verbose etag "14O3K2LGQVD10ZCWPT1QRZU6G"
1193 http GET https://registry.npmjs.org/nan
1194 silly lockFile 3c087746-ules-ref-struct-node-modules-ref tar:///Users/craignishina/Workspace/IntelHackathon/server/node_modules/ffi/node_modules/ref-struct/node_modules/ref
1195 silly lockFile 3c087746-ules-ref-struct-node-modules-ref tar:///Users/craignishina/Workspace/IntelHackathon/server/node_modules/ffi/node_modules/ref-struct/node_modules/ref
1196 silly lockFile 8217092c-ishina-npm-ref-0-3-5-package-tgz tar:///Users/craignishina/.npm/ref/0.3.5/package.tgz
1197 silly lockFile 8217092c-ishina-npm-ref-0-3-5-package-tgz tar:///Users/craignishina/.npm/ref/0.3.5/package.tgz
1198 info preinstall ref@0.3.5
1199 verbose readDependencies using package.json deps
1200 verbose readDependencies using package.json deps
1201 verbose cache add [ 'nan@~1.5.1', null ]
1202 verbose cache add name=undefined spec="nan@~1.5.1" args=["nan@~1.5.1",null]
1203 verbose parsed url { protocol: null,
1203 verbose parsed url   slashes: null,
1203 verbose parsed url   auth: null,
1203 verbose parsed url   host: null,
1203 verbose parsed url   port: null,
1203 verbose parsed url   hostname: null,
1203 verbose parsed url   hash: null,
1203 verbose parsed url   search: null,
1203 verbose parsed url   query: null,
1203 verbose parsed url   pathname: 'nan@~1.5.1',
1203 verbose parsed url   path: 'nan@~1.5.1',
1203 verbose parsed url   href: 'nan@~1.5.1' }
1204 verbose cache add name="nan" spec="~1.5.1" args=["nan","~1.5.1"]
1205 verbose parsed url { protocol: null,
1205 verbose parsed url   slashes: null,
1205 verbose parsed url   auth: null,
1205 verbose parsed url   host: null,
1205 verbose parsed url   port: null,
1205 verbose parsed url   hostname: null,
1205 verbose parsed url   hash: null,
1205 verbose parsed url   search: null,
1205 verbose parsed url   query: null,
1205 verbose parsed url   pathname: '~1.5.1',
1205 verbose parsed url   path: '~1.5.1',
1205 verbose parsed url   href: '~1.5.1' }
1206 verbose addNamed [ 'nan', '~1.5.1' ]
1207 http 304 https://registry.npmjs.org/ms/0.6.2
1208 silly registry.get cb [ 304,
1208 silly registry.get   { date: 'Thu, 12 Feb 2015 21:03:24 GMT',
1208 silly registry.get     server: 'Apache',
1208 silly registry.get     via: '1.1 varnish',
1208 silly registry.get     'last-modified': 'Thu, 12 Feb 2015 21:03:24 GMT',
1208 silly registry.get     'cache-control': 'max-age=60',
1208 silly registry.get     etag: '"5X193XKI0OYMRSV5OJQQDBYY6"',
1208 silly registry.get     age: '7',
1208 silly registry.get     'x-served-by': 'cache-sjc3130-SJC',
1208 silly registry.get     'x-cache': 'HIT',
1208 silly registry.get     'x-cache-hits': '1',
1208 silly registry.get     'x-timer': 'S1423775004.016888,VS0,VE0',
1208 silly registry.get     vary: 'Accept',
1208 silly registry.get     'content-length': '0',
1208 silly registry.get     'keep-alive': 'timeout=10, max=50',
1208 silly registry.get     connection: 'Keep-Alive' } ]
1209 verbose etag ms/0.6.2 from cache
1210 silly lockFile 549cc243-ms-0-6-2 ms@0.6.2
1211 silly lockFile 549cc243-ms-0-6-2 ms@0.6.2
1212 silly resolved [ { name: 'ms',
1212 silly resolved     version: '0.6.2',
1212 silly resolved     description: 'Tiny ms conversion utility',
1212 silly resolved     repository: { type: 'git', url: 'git://github.com/guille/ms.js.git' },
1212 silly resolved     main: './index',
1212 silly resolved     devDependencies: { mocha: '*', 'expect.js': '*', serve: '*' },
1212 silly resolved     component: { scripts: [Object] },
1212 silly resolved     readme: '# ms.js: miliseconds conversion utility\n\n```js\nms(\'1d\')      // 86400000\nms(\'10h\')     // 36000000\nms(\'2h\')      // 7200000\nms(\'1m\')      // 60000\nms(\'5s\')      // 5000\nms(\'100\')     // 100\n```\n\n```js\nms(60000)             // "1m"\nms(2 * 60000)         // "2m"\nms(ms(\'10 hours\'))    // "10h"\n```\n\n```js\nms(60000, { long: true })             // "1 minute"\nms(2 * 60000, { long: true })         // "2 minutes"\nms(ms(\'10 hours\', { long: true }))    // "10 hours"\n```\n\n- Node/Browser compatible. Published as `ms` in NPM.\n- If a number is supplied to `ms`, a string with a unit is returned.\n- If a string that contains the number is supplied, it returns it as\na number (e.g: it returns `100` for `\'100\'`).\n- If you pass a string with a number and a valid unit, the number of\nequivalent ms is returned.\n\n## License\n\nMIT',
1212 silly resolved     readmeFilename: 'README.md',
1212 silly resolved     bugs: { url: 'https://github.com/guille/ms.js/issues' },
1212 silly resolved     homepage: 'https://github.com/guille/ms.js',
1212 silly resolved     _id: 'ms@0.6.2',
1212 silly resolved     _from: 'ms@0.6.2' } ]
1213 info install ms@0.6.2 into /Users/craignishina/Workspace/IntelHackathon/server/node_modules/ffi/node_modules/debug
1214 info installOne ms@0.6.2
1215 info /Users/craignishina/Workspace/IntelHackathon/server/node_modules/ffi/node_modules/debug/node_modules/ms unbuild
1216 verbose tar unpack /Users/craignishina/.npm/ms/0.6.2/package.tgz
1217 silly lockFile d8236f9a-de-modules-debug-node-modules-ms tar:///Users/craignishina/Workspace/IntelHackathon/server/node_modules/ffi/node_modules/debug/node_modules/ms
1218 verbose lock tar:///Users/craignishina/Workspace/IntelHackathon/server/node_modules/ffi/node_modules/debug/node_modules/ms /Users/craignishina/.npm/d8236f9a-de-modules-debug-node-modules-ms.lock
1219 silly lockFile a9a855e6-nishina-npm-ms-0-6-2-package-tgz tar:///Users/craignishina/.npm/ms/0.6.2/package.tgz
1220 verbose lock tar:///Users/craignishina/.npm/ms/0.6.2/package.tgz /Users/craignishina/.npm/a9a855e6-nishina-npm-ms-0-6-2-package-tgz.lock
1221 silly gunzTarPerm modes [ '755', '644' ]
1222 silly gunzTarPerm extractEntry package.json
1223 silly gunzTarPerm extractEntry .npmignore
1224 silly gunzTarPerm extractEntry README.md
1225 silly gunzTarPerm extractEntry index.js
1226 silly lockFile d8236f9a-de-modules-debug-node-modules-ms tar:///Users/craignishina/Workspace/IntelHackathon/server/node_modules/ffi/node_modules/debug/node_modules/ms
1227 silly lockFile d8236f9a-de-modules-debug-node-modules-ms tar:///Users/craignishina/Workspace/IntelHackathon/server/node_modules/ffi/node_modules/debug/node_modules/ms
1228 silly lockFile a9a855e6-nishina-npm-ms-0-6-2-package-tgz tar:///Users/craignishina/.npm/ms/0.6.2/package.tgz
1229 silly lockFile a9a855e6-nishina-npm-ms-0-6-2-package-tgz tar:///Users/craignishina/.npm/ms/0.6.2/package.tgz
1230 info preinstall ms@0.6.2
1231 verbose readDependencies using package.json deps
1232 verbose readDependencies using package.json deps
1233 silly resolved []
1234 verbose about to build /Users/craignishina/Workspace/IntelHackathon/server/node_modules/ffi/node_modules/debug/node_modules/ms
1235 info build /Users/craignishina/Workspace/IntelHackathon/server/node_modules/ffi/node_modules/debug/node_modules/ms
1236 verbose linkStuff [ false,
1236 verbose linkStuff   false,
1236 verbose linkStuff   false,
1236 verbose linkStuff   '/Users/craignishina/Workspace/IntelHackathon/server/node_modules/ffi/node_modules/debug/node_modules' ]
1237 info linkStuff ms@0.6.2
1238 verbose linkBins ms@0.6.2
1239 verbose linkMans ms@0.6.2
1240 verbose rebuildBundles ms@0.6.2
1241 info install ms@0.6.2
1242 info postinstall ms@0.6.2
1243 verbose about to build /Users/craignishina/Workspace/IntelHackathon/server/node_modules/ffi/node_modules/debug
1244 info build /Users/craignishina/Workspace/IntelHackathon/server/node_modules/ffi/node_modules/debug
1245 verbose linkStuff [ false,
1245 verbose linkStuff   false,
1245 verbose linkStuff   false,
1245 verbose linkStuff   '/Users/craignishina/Workspace/IntelHackathon/server/node_modules/ffi/node_modules' ]
1246 info linkStuff debug@2.1.1
1247 verbose linkBins debug@2.1.1
1248 verbose linkMans debug@2.1.1
1249 verbose rebuildBundles debug@2.1.1
1250 verbose rebuildBundles [ 'ms' ]
1251 info install debug@2.1.1
1252 info postinstall debug@2.1.1
1253 http 304 https://registry.npmjs.org/nan
1254 silly registry.get cb [ 304,
1254 silly registry.get   { date: 'Thu, 12 Feb 2015 21:03:24 GMT',
1254 silly registry.get     server: 'Apache',
1254 silly registry.get     via: '1.1 varnish',
1254 silly registry.get     'last-modified': 'Thu, 12 Feb 2015 21:03:24 GMT',
1254 silly registry.get     'cache-control': 'max-age=60',
1254 silly registry.get     etag: '"14O3K2LGQVD10ZCWPT1QRZU6G"',
1254 silly registry.get     age: '27',
1254 silly registry.get     'x-served-by': 'cache-sjc3129-SJC',
1254 silly registry.get     'x-cache': 'HIT',
1254 silly registry.get     'x-cache-hits': '1',
1254 silly registry.get     'x-timer': 'S1423775004.114842,VS0,VE0',
1254 silly registry.get     vary: 'Accept',
1254 silly registry.get     'content-length': '0',
1254 silly registry.get     'keep-alive': 'timeout=10, max=50',
1254 silly registry.get     connection: 'Keep-Alive' } ]
1255 verbose etag nan from cache
1256 silly addNameRange number 2 { name: 'nan', range: '>=1.5.1-0 <1.6.0-0', hasData: true }
1257 silly addNameRange versions [ 'nan',
1257 silly addNameRange   [ '0.3.0-wip',
1257 silly addNameRange     '0.3.0-wip2',
1257 silly addNameRange     '0.3.0',
1257 silly addNameRange     '0.3.1',
1257 silly addNameRange     '0.3.2',
1257 silly addNameRange     '0.4.0',
1257 silly addNameRange     '0.4.1',
1257 silly addNameRange     '0.4.2',
1257 silly addNameRange     '0.4.3',
1257 silly addNameRange     '0.4.4',
1257 silly addNameRange     '0.5.0',
1257 silly addNameRange     '0.5.1',
1257 silly addNameRange     '0.5.2',
1257 silly addNameRange     '0.6.0',
1257 silly addNameRange     '0.7.0',
1257 silly addNameRange     '0.7.1',
1257 silly addNameRange     '0.8.0',
1257 silly addNameRange     '1.0.0',
1257 silly addNameRange     '1.1.0',
1257 silly addNameRange     '1.1.1',
1257 silly addNameRange     '1.1.2',
1257 silly addNameRange     '1.2.0',
1257 silly addNameRange     '1.3.0',
1257 silly addNameRange     '1.4.0',
1257 silly addNameRange     '1.4.1',
1257 silly addNameRange     '1.5.0',
1257 silly addNameRange     '1.4.2',
1257 silly addNameRange     '1.4.3',
1257 silly addNameRange     '1.5.1',
1257 silly addNameRange     '1.5.2',
1257 silly addNameRange     '1.6.0',
1257 silly addNameRange     '1.5.3',
1257 silly addNameRange     '1.6.1',
1257 silly addNameRange     '1.6.2' ] ]
1258 verbose addNamed [ 'nan', '1.5.3' ]
1259 verbose addNamed [ '1.5.3', '1.5.3' ]
1260 silly lockFile 8d6a9e94-nan-1-5-3 nan@1.5.3
1261 verbose lock nan@1.5.3 /Users/craignishina/.npm/8d6a9e94-nan-1-5-3.lock
1262 silly lockFile 8d6a9e94-nan-1-5-3 nan@1.5.3
1263 silly lockFile 8d6a9e94-nan-1-5-3 nan@1.5.3
1264 silly lockFile 188c3c8c-nan-1-5-1 nan@~1.5.1
1265 silly lockFile 188c3c8c-nan-1-5-1 nan@~1.5.1
1266 silly resolved [ { name: 'nan',
1266 silly resolved     version: '1.5.3',
1266 silly resolved     description: 'Native Abstractions for Node.js: C++ header for Node 0.8->0.12 compatibility',
1266 silly resolved     main: 'include_dirs.js',
1266 silly resolved     repository: { type: 'git', url: 'git://github.com/rvagg/nan.git' },
1266 silly resolved     scripts:
1266 silly resolved      { test: 'tap --gc test/js/*-test.js',
1266 silly resolved        'rebuild-tests': 'node-gyp rebuild --directory test' },
1266 silly resolved     contributors:
1266 silly resolved      [ [Object],
1266 silly resolved        [Object],
1266 silly resolved        [Object],
1266 silly resolved        [Object],
1266 silly resolved        [Object],
1266 silly resolved        [Object],
1266 silly resolved        [Object] ],
1266 silly resolved     devDependencies:
1266 silly resolved      { bindings: '~1.2.1',
1266 silly resolved        'node-gyp': '~1.0.2',
1266 silly resolved        tap: '~0.5.0',
1266 silly resolved        xtend: '~4.0.0' },
1266 silly resolved     license: 'MIT',
1266 silly resolved     readme: 'Native Abstractions for Node.js\n===============================\n\n**A header file filled with macro and utility goodness for making add-on development for Node.js easier across versions 0.8, 0.10 and 0.11, and eventually 0.12.**\n\n***Current version: 1.5.2***\n\n*(See [CHANGELOG.md](https://github.com/rvagg/nan/blob/master/CHANGELOG.md) for complete ChangeLog)*\n\n[![NPM](https://nodei.co/npm/nan.png?downloads=true&downloadRank=true)](https://nodei.co/npm/nan/) [![NPM](https://nodei.co/npm-dl/nan.png?months=6&height=3)](https://nodei.co/npm/nan/)\n\n[![Build Status](https://secure.travis-ci.org/rvagg/nan.png)](http://travis-ci.org/rvagg/nan)\n[![Build status](https://ci.appveyor.com/api/projects/status/kh73pbm9dsju7fgh)](https://ci.appveyor.com/project/RodVagg/nan)\n\nThanks to the crazy changes in V8 (and some in Node core), keeping native addons compiling happily across versions, particularly 0.10 to 0.11/0.12, is a minor nightmare. The goal of this project is to store all logic necessary to develop native Node.js addons without having to inspect `NODE_MODULE_VERSION` and get yourself into a macro-tangle.\n\nThis project also contains some helper utilities that make addon development a bit more pleasant.\n\n * **[News & Updates](#news)**\n * **[Usage](#usage)**\n * **[Example](#example)**\n * **[API](#api)**\n * **[Tests](#tests)**\n\n<a name="news"></a>\n## News & Updates\n\n### Jan-2015: 1.5.0 release\n\n* Support [io.js](https://github.com/iojs/io.js) thanks to [Ben Noordhuis](bnoordhuis)\n* Rewritten NanNew internals thanks to [David Siegel](agnat)\n* NanAsyncWorker now supports progress reporting thanks to [Brett Lawson](brett19)\n\n### Aug-2014: 1.3.0 release\n\n* `NanCString()` and `NanRawString()` have been deprecated in favour of new <a href="#api_nan_ascii_string"><b><code>NanAsciiString</code></b></a>, <a href="#api_nan_utf8_string"><b><code>NanUtf8String</code></b></a> and <a href="#api_nan_ucs2_string"><b><code>NanUcs2String</code></b></a>. These classes manage the underlying memory for you in a safer way than just handing off an allocated array. You should now `*NanAsciiString(handle)` to access the raw `char` data, you can also allocate on the heap if you need to keep a reference.\n* Two more <a href="#api_nan_make_callback"><b><code>NanMakeCallback</code></b></a> overloads have been added to for parity with Node core.\n* You can now `NanNew(std::string)` (use `NanNew<std::string&>(std::string&)` to pass by reference)\n* <a href="#api_nan_set_template"><b><code>NanSetTemplate</code></b></a>, <a href="#api_nan_set_prototype_template"><b><code>NanSetPrototypeTemplate</code></b></a> and <a href="#api_nan_set_instance_template"><b><code>NanSetInstanceTemplate</code></b></a> have been added.\n\n### May-2014: 1.1.0 release\n\n* We\'ve deprecated `NanSymbol()`, you should just use `NanNew<String>()` now.\n* `NanNull()`, `NanUndefined()`, `NanTrue()`, `NanFalse()` all return `Local`s now.\n* `nan_isolate` is gone, it was intended to be internal-only but if you were using it then you should switch to `v8::Isolate::GetCurrent()`.\n* `NanNew()` has received some additional overload-love so you should be able to give it many kinds of values without specifying the `<Type>`.\n* Lots of small fixes and additions to expand the V8 API coverage, *use the source, Luke*.\n\n\n### May-2014: Major changes for V8 3.25 / Node 0.11.13\n\nNode 0.11.11 and 0.11.12 were both broken releases for native add-ons, you simply can\'t properly compile against either of them for different reasons. But we now have a 0.11.13 release that jumps a couple of versions of V8 ahead and includes some more, major (traumatic) API changes.\n\nBecause we are now nearing Node 0.12 and estimate that the version of V8 we are using in Node 0.11.13 will be close to the API we get for 0.12, we have taken the opportunity to not only *fix* NAN for 0.11.13 but make some major changes to improve the NAN API.\n\nWe have **removed support for Node 0.11 versions prior to 0.11.13**. As usual, our tests are run against (and pass) the last 5 versions of Node 0.8 and Node 0.10. We also include Node 0.11.13 obviously.\n\nThe major change is something that [Benjamin Byholm](kkoopa) has put many hours in to. We now have a fantastic new `NanNew<T>(args)` interface for creating new `Local`s, this replaces `NanNewLocal()` and much more. If you look in [./nan.h](nan.h) you\'ll see a large number of overloaded versions of this method. In general you should be able to `NanNew<Type>(arguments)` for any type you want to make a `Local` from. This includes `Persistent` types, so we now have a `Local<T> NanNew(const Persistent<T> arg)` to replace `NanPersistentToLocal()`.\n\nWe also now have `NanUndefined()`, `NanNull()`, `NanTrue()` and `NanFalse()`. Mainly because of the new requirement for an `Isolate` argument for each of the native V8 versions of this.\n\nV8 has now introduced an `EscapableHandleScope` from which you `scope.Escape(Local<T> value)` to *return* a value from a one scope to another. This replaces the standard `HandleScope` and `scope.Close(Local<T> value)`, although `HandleScope` still exists for when you don\'t need to return a handle to the caller. For NAN we are exposing it as `NanEscapableScope()` and `NanEscapeScope()`, while `NanScope()` is still how you create a new scope that doesn\'t need to return handles. For older versions of Node/V8, it\'ll still map to the older `HandleScope` functionality.\n\n`NanFromV8String()` was deprecated and has now been removed. You should use `NanCString()` or `NanRawString()` instead.\n\nBecause `node::MakeCallback()` now takes an `Isolate`, and because it doesn\'t exist in older versions of Node, we\'ve introduced `NanMakeCallback()`. You should *always* use this when calling a JavaScript function from C++.\n\nThere\'s lots more, check out the Changelog in nan.h or look through [#86](https://github.com/rvagg/nan/pull/86) for all the gory details.\n\n### Dec-2013: NanCString and NanRawString\n\nTwo new functions have been introduced to replace the functionality that\'s been provided by `NanFromV8String` until now. NanCString has sensible defaults so it\'s super easy to fetch a null-terminated c-style string out of a `v8::String`. `NanFromV8String` is still around and has defaults that allow you to pass a single handle to fetch a `char*` while `NanRawString` requires a little more attention to arguments.\n\n### Nov-2013: Node 0.11.9+ breaking V8 change\n\nThe version of V8 that\'s shipping with Node 0.11.9+ has changed the signature for new `Local`s to: `v8::Local<T>::New(isolate, value)`, i.e. introducing the `isolate` argument and therefore breaking all new `Local` declarations for previous versions. NAN 0.6+ now includes a `NanNewLocal<T>(value)` that can be used in place to work around this incompatibility and maintain compatibility with 0.8->0.11.9+ (minus a few early 0.11 releases).\n\nFor example, if you wanted to return a `null` on a callback you will have to change the argument from `v8::Local<v8::Value>::New(v8::Null())` to `NanNewLocal<v8::Value>(v8::Null())`.\n\n### Nov-2013: Change to binding.gyp `"include_dirs"` for NAN\n\nInclusion of NAN in a project\'s binding.gyp is now greatly simplified. You can now just use `"<!(node -e \\"require(\'nan\')\\")"` in your `"include_dirs"`, see example below (note Windows needs the quoting around `require` to be just right: `"require(\'nan\')"` with appropriate `\\` escaping).\n\n<a name="usage"></a>\n## Usage\n\nSimply add **NAN** as a dependency in the *package.json* of your Node addon:\n\n``` bash\n$ npm install --save nan\n```\n\nPull in the path to **NAN** in your *binding.gyp* so that you can use `#include <nan.h>` in your *.cpp* files:\n\n``` python\n"include_dirs" : [\n    "<!(node -e \\"require(\'nan\')\\")"\n]\n```\n\nThis works like a `-I<path-to-NAN>` when compiling your addon.\n\n<a name="example"></a>\n## Example\n\nSee **[LevelDOWN](https://github.com/rvagg/node-leveldown/pull/48)** for a full example of **NAN** in use.\n\nFor a simpler example, see the **[async pi estimation example](https://github.com/rvagg/nan/tree/master/examples/async_pi_estimate)** in the examples directory for full code and an explanation of what this Monte Carlo Pi estimation example does. Below are just some parts of the full example that illustrate the use of **NAN**.\n\nFor another example, see **[nan-example-eol](https://github.com/CodeCharmLtd/nan-example-eol)**. It shows newline detection implemented as a native addon.\n\nCompare to the current 0.10 version of this example, found in the [node-addon-examples](https://github.com/rvagg/node-addon-examples/tree/master/9_async_work) repository and also a 0.11 version of the same found [here](https://github.com/kkoopa/node-addon-examples/tree/5c01f58fc993377a567812597e54a83af69686d7/9_async_work).\n\nNote that there is no embedded version sniffing going on here and also the async work is made much simpler, see below for details on the `NanAsyncWorker` class.\n\n```c++\n// addon.cc\n#include <node.h>\n#include <nan.h>\n// ...\n\nusing v8::FunctionTemplate;\nusing v8::Handle;\nusing v8::Object;\nusing v8::String;\n\nvoid InitAll(Handle<Object> exports) {\n  exports->Set(NanNew<String>("calculateSync"),\n    NanNew<FunctionTemplate>(CalculateSync)->GetFunction());\n\n  exports->Set(NanNew<String>("calculateAsync"),\n    NanNew<FunctionTemplate>(CalculateAsync)->GetFunction());\n}\n\nNODE_MODULE(addon, InitAll)\n```\n\n```c++\n// sync.h\n#include <node.h>\n#include <nan.h>\n\nNAN_METHOD(CalculateSync);\n```\n\n```c++\n// sync.cc\n#include <node.h>\n#include <nan.h>\n#include "./sync.h"\n// ...\n\nusing v8::Number;\n\n// Simple synchronous access to the `Estimate()` function\nNAN_METHOD(CalculateSync) {\n  NanScope();\n\n  // expect a number as the first argument\n  int points = args[0]->Uint32Value();\n  double est = Estimate(points);\n\n  NanReturnValue(NanNew<Number>(est));\n}\n```\n\n```c++\n// async.h\n#include <node.h>\n#include <nan.h>\n\nNAN_METHOD(CalculateAsync);\n```\n\n```c++\n// async.cc\n#include <node.h>\n#include <nan.h>\n#include "./async.h"\n\n// ...\n\nusing v8::Function;\nusing v8::Local;\nusing v8::Null;\nusing v8::Number;\nusing v8::Value;\n\nclass PiWorker : public NanAsyncWorker {\n public:\n  PiWorker(NanCallback *callback, int points)\n    : NanAsyncWorker(callback), points(points) {}\n  ~PiWorker() {}\n\n  // Executed inside the worker-thread.\n  // It is not safe to access V8, or V8 data structures\n  // here, so everything we need for input and output\n  // should go on `this`.\n  void Execute () {\n    estimate = Estimate(points);\n  }\n\n  // Executed when the async work is complete\n  // this function will be run inside the main event loop\n  // so it is safe to use V8 again\n  void HandleOKCallback () {\n    NanScope();\n\n    Local<Value> argv[] = {\n        NanNull()\n      , NanNew<Number>(estimate)\n    };\n\n    callback->Call(2, argv);\n  };\n\n private:\n  int points;\n  double estimate;\n};\n\n// Asynchronous access to the `Estimate()` function\nNAN_METHOD(CalculateAsync) {\n  NanScope();\n\n  int points = args[0]->Uint32Value();\n  NanCallback *callback = new NanCallback(args[1].As<Function>());\n\n  NanAsyncQueueWorker(new PiWorker(callback, points));\n  NanReturnUndefined();\n}\n```\n\n<a name="api"></a>\n## API\n\n * <a href="#api_nan_method"><b><code>NAN_METHOD</code></b></a>\n * <a href="#api_nan_getter"><b><code>NAN_GETTER</code></b></a>\n * <a href="#api_nan_setter"><b><code>NAN_SETTER</code></b></a>\n * <a href="#api_nan_property_getter"><b><code>NAN_PROPERTY_GETTER</code></b></a>\n * <a href="#api_nan_property_setter"><b><code>NAN_PROPERTY_SETTER</code></b></a>\n * <a href="#api_nan_property_enumerator"><b><code>NAN_PROPERTY_ENUMERATOR</code></b></a>\n * <a href="#api_nan_property_deleter"><b><code>NAN_PROPERTY_DELETER</code></b></a>\n * <a href="#api_nan_property_query"><b><code>NAN_PROPERTY_QUERY</code></b></a>\n * <a href="#api_nan_index_getter"><b><code>NAN_INDEX_GETTER</code></b></a>\n * <a href="#api_nan_index_setter"><b><code>NAN_INDEX_SETTER</code></b></a>\n * <a href="#api_nan_index_enumerator"><b><code>NAN_INDEX_ENUMERATOR</code></b></a>\n * <a href="#api_nan_index_deleter"><b><code>NAN_INDEX_DELETER</code></b></a>\n * <a href="#api_nan_index_query"><b><code>NAN_INDEX_QUERY</code></b></a>\n * <a href="#api_nan_gc_callback"><b><code>NAN_GC_CALLBACK</code></b></a>\n * <a href="#api_nan_weak_callback"><b><code>NAN_WEAK_CALLBACK</code></b></a>\n * <a href="#api_nan_deprecated"><b><code>NAN_DEPRECATED</code></b></a>\n * <a href="#api_nan_inline"><b><code>NAN_INLINE</code></b></a>\n * <a href="#api_nan_new"><b><code>NanNew</code></b></a>\n * <a href="#api_nan_undefined"><b><code>NanUndefined</code></b></a>\n * <a href="#api_nan_null"><b><code>NanNull</code></b></a>\n * <a href="#api_nan_true"><b><code>NanTrue</code></b></a>\n * <a href="#api_nan_false"><b><code>NanFalse</code></b></a>\n * <a href="#api_nan_return_value"><b><code>NanReturnValue</code></b></a>\n * <a href="#api_nan_return_undefined"><b><code>NanReturnUndefined</code></b></a>\n * <a href="#api_nan_return_null"><b><code>NanReturnNull</code></b></a>\n * <a href="#api_nan_return_empty_string"><b><code>NanReturnEmptyString</code></b></a>\n * <a href="#api_nan_return_this"><b><code>NanReturnThis</code></b></a>\n * <a href="#api_nan_return_holder"><b><code>NanReturnHolder</code></b></a>\n * <a href="#api_nan_scope"><b><code>NanScope</code></b></a>\n * <a href="#api_nan_escapable_scope"><b><code>NanEscapableScope</code></b></a>\n * <a href="#api_nan_escape_scope"><b><code>NanEscapeScope</code></b></a>\n * <a href="#api_nan_locker"><b><code>NanLocker</code></b></a>\n * <a href="#api_nan_unlocker"><b><code>NanUnlocker</code></b></a>\n * <a href="#api_nan_get_internal_field_pointer"><b><code>NanGetInternalFieldPointer</code></b></a>\n * <a href="#api_nan_set_internal_field_pointer"><b><code>NanSetInternalFieldPointer</code></b></a>\n * <a href="#api_nan_object_wrap_handle"><b><code>NanObjectWrapHandle</code></b></a>\n * <del><a href="#api_nan_symbol"><b><code>NanSymbol</code></b></a></del>\n * <a href="#api_nan_get_pointer_safe"><b><code>NanGetPointerSafe</code></b></a>\n * <a href="#api_nan_set_pointer_safe"><b><code>NanSetPointerSafe</code></b></a>\n * <del><a href="#api_nan_raw_string"><b><code>NanRawString</code></b></a></del>\n * <del><a href="#api_nan_c_string"><b><code>NanCString</code></b></a></del>\n * <a href="#api_nan_ascii_string"><b><code>NanAsciiString</code></b></a>\n * <a href="#api_nan_utf8_string"><b><code>NanUtf8String</code></b></a>\n * <a href="#api_nan_ucs2_string"><b><code>NanUcs2String</code></b></a>\n * <a href="#api_nan_boolean_option_value"><b><code>NanBooleanOptionValue</code></b></a>\n * <a href="#api_nan_uint32_option_value"><b><code>NanUInt32OptionValue</code></b></a>\n * <a href="#api_nan_error"><b><code>NanError</code></b>, <b><code>NanTypeError</code></b>, <b><code>NanRangeError</code></b></a>\n * <a href="#api_nan_throw_error"><b><code>NanThrowError</code></b>, <b><code>NanThrowTypeError</code></b>, <b><code>NanThrowRangeError</code></b>, <b><code>NanThrowError(Handle<Value>)</code></b>, <b><code>NanThrowError(Handle<Value>, int)</code></b></a>\n * <a href="#api_nan_new_buffer_handle"><b><code>NanNewBufferHandle(char *, size_t, FreeCallback, void *)</code></b>, <b><code>NanNewBufferHandle(char *, uint32_t)</code></b>, <b><code>NanNewBufferHandle(uint32_t)</code></b></a>\n * <a href="#api_nan_buffer_use"><b><code>NanBufferUse(char *, uint32_t)</code></b></a>\n * <a href="#api_nan_new_context_handle"><b><code>NanNewContextHandle</code></b></a>\n * <a href="#api_nan_get_current_context"><b><code>NanGetCurrentContext</code></b></a>\n * <a href="#api_nan_has_instance"><b><code>NanHasInstance</code></b></a>\n * <a href="#api_nan_dispose_persistent"><b><code>NanDisposePersistent</code></b></a>\n * <a href="#api_nan_assign_persistent"><b><code>NanAssignPersistent</code></b></a>\n * <a href="#api_nan_make_weak_persistent"><b><code>NanMakeWeakPersistent</code></b></a>\n * <a href="#api_nan_set_template"><b><code>NanSetTemplate</code></b></a>\n * <a href="#api_nan_set_prototype_template"><b><code>NanSetPrototypeTemplate</code></b></a>\n * <a href="#api_nan_set_instance_template"><b><code>NanSetInstanceTemplate</code></b></a>\n * <a href="#api_nan_make_callback"><b><code>NanMakeCallback</code></b></a>\n * <a href="#api_nan_compile_script"><b><code>NanCompileScript</code></b></a>\n * <a href="#api_nan_run_script"><b><code>NanRunScript</code></b></a>\n * <a href="#api_nan_adjust_external_memory"><b><code>NanAdjustExternalMemory</code></b></a>\n * <a href="#api_nan_add_gc_epilogue_callback"><b><code>NanAddGCEpilogueCallback</code></b></a>\n * <a href="#api_nan_add_gc_prologue_callback"><b><code>NanAddGCPrologueCallback</code></b></a>\n * <a href="#api_nan_remove_gc_epilogue_callback"><b><code>NanRemoveGCEpilogueCallback</code></b></a>\n * <a href="#api_nan_remove_gc_prologue_callback"><b><code>NanRemoveGCPrologueCallback</code></b></a>\n * <a href="#api_nan_get_heap_statistics"><b><code>NanGetHeapStatistics</code></b></a>\n * <a href="#api_nan_callback"><b><code>NanCallback</code></b></a>\n * <a href="#api_nan_async_worker"><b><code>NanAsyncWorker</code></b></a>\n * <a href="#api_nan_async_queue_worker"><b><code>NanAsyncQueueWorker</code></b></a>\n\n<a name="api_nan_method"></a>\n### NAN_METHOD(methodname)\n\nUse `NAN_METHOD` to define your V8 accessible methods:\n\n```c++\n// .h:\nclass Foo : public node::ObjectWrap {\n  ...\n\n  static NAN_METHOD(Bar);\n  static NAN_METHOD(Baz);\n}\n\n\n// .cc:\nNAN_METHOD(Foo::Bar) {\n  ...\n}\n\nNAN_METHOD(Foo::Baz) {\n  ...\n}\n```\n\nThe reason for this macro is because of the method signature change in 0.11:\n\n```c++\n// 0.10 and below:\nHandle<Value> name(const Arguments& args)\n\n// 0.11 and above\nvoid name(const FunctionCallbackInfo<Value>& args)\n```\n\nThe introduction of `FunctionCallbackInfo` brings additional complications:\n\n<a name="api_nan_getter"></a>\n### NAN_GETTER(methodname)\n\nUse `NAN_GETTER` to declare your V8 accessible getters. You get a `Local<String>` `property` and an appropriately typed `args` object that can act like the `args` argument to a `NAN_METHOD` call.\n\nYou can use `NanReturnNull()`, `NanReturnEmptyString()`, `NanReturnUndefined()` and `NanReturnValue()` in a `NAN_GETTER`.\n\n<a name="api_nan_setter"></a>\n### NAN_SETTER(methodname)\n\nUse `NAN_SETTER` to declare your V8 accessible setters. Same as `NAN_GETTER` but you also get a `Local<Value>` `value` object to work with.\n\n<a name="api_nan_property_getter"></a>\n### NAN_PROPERTY_GETTER(cbname)\nUse `NAN_PROPERTY_GETTER` to declare your V8 accessible property getters. You get a `Local<String>` `property` and an appropriately typed `args` object that can act similar to the `args` argument to a `NAN_METHOD` call.\n\nYou can use `NanReturnNull()`, `NanReturnEmptyString()`, `NanReturnUndefined()` and `NanReturnValue()` in a `NAN_PROPERTY_GETTER`.\n\n<a name="api_nan_property_setter"></a>\n### NAN_PROPERTY_SETTER(cbname)\nUse `NAN_PROPERTY_SETTER` to declare your V8 accessible property setters. Same as `NAN_PROPERTY_GETTER` but you also get a `Local<Value>` `value` object to work with.\n\n<a name="api_nan_property_enumerator"></a>\n### NAN_PROPERTY_ENUMERATOR(cbname)\nUse `NAN_PROPERTY_ENUMERATOR` to declare your V8 accessible property enumerators. You get an appropriately typed `args` object like the `args` argument to a `NAN_PROPERTY_GETTER` call.\n\nYou can use `NanReturnNull()`, `NanReturnEmptyString()`, `NanReturnUndefined()` and `NanReturnValue()` in a `NAN_PROPERTY_ENUMERATOR`.\n\n<a name="api_nan_property_deleter"></a>\n### NAN_PROPERTY_DELETER(cbname)\nUse `NAN_PROPERTY_DELETER` to declare your V8 accessible property deleters. Same as `NAN_PROPERTY_GETTER`.\n\nYou can use `NanReturnNull()`, `NanReturnEmptyString()`, `NanReturnUndefined()` and `NanReturnValue()` in a `NAN_PROPERTY_DELETER`.\n\n<a name="api_nan_property_query"></a>\n### NAN_PROPERTY_QUERY(cbname)\nUse `NAN_PROPERTY_QUERY` to declare your V8 accessible property queries. Same as `NAN_PROPERTY_GETTER`.\n\nYou can use `NanReturnNull()`, `NanReturnEmptyString()`, `NanReturnUndefined()` and `NanReturnValue()` in a `NAN_PROPERTY_QUERY`.\n\n<a name="api_nan_index_getter"></a>\n### NAN_INDEX_GETTER(cbname)\nUse `NAN_INDEX_GETTER` to declare your V8 accessible index getters. You get a `uint32_t` `index` and an appropriately typed `args` object that can act similar to the `args` argument to a `NAN_METHOD` call.\n\nYou can use `NanReturnNull()`, `NanReturnEmptyString()`, `NanReturnUndefined()` and `NanReturnValue()` in a `NAN_INDEX_GETTER`.\n\n<a name="api_nan_index_setter"></a>\n### NAN_INDEX_SETTER(cbname)\nUse `NAN_INDEX_SETTER` to declare your V8 accessible index setters. Same as `NAN_INDEX_GETTER` but you also get a `Local<Value>` `value` object to work with.\n\n<a name="api_nan_index_enumerator"></a>\n### NAN_INDEX_ENUMERATOR(cbname)\nUse `NAN_INDEX_ENUMERATOR` to declare your V8 accessible index enumerators. You get an appropriately typed `args` object like the `args` argument to a `NAN_INDEX_GETTER` call.\n\nYou can use `NanReturnNull()`, `NanReturnEmptyString()`, `NanReturnUndefined()` and `NanReturnValue()` in a `NAN_INDEX_ENUMERATOR`.\n\n<a name="api_nan_index_deleter"></a>\n### NAN_INDEX_DELETER(cbname)\nUse `NAN_INDEX_DELETER` to declare your V8 accessible index deleters. Same as `NAN_INDEX_GETTER`.\n\nYou can use `NanReturnNull()`, `NanReturnEmptyString()`, `NanReturnUndefined()` and `NanReturnValue()` in a `NAN_INDEX_DELETER`.\n\n<a name="api_nan_index_query"></a>\n### NAN_INDEX_QUERY(cbname)\nUse `NAN_INDEX_QUERY` to declare your V8 accessible index queries. Same as `NAN_INDEX_GETTER`.\n\nYou can use `NanReturnNull()`, `NanReturnEmptyString()`, `NanReturnUndefined()` and `NanReturnValue()` in a `NAN_INDEX_QUERY`.\n\n<a name="api_nan_gc_callback"></a>\n### NAN_GC_CALLBACK(cbname)\nUse `NAN_GC_CALLBACK` to declare your callbacks for `NanAddGCEpilogueCallback` and `NanAddGCPrologueCallback`. You get arguments `GCType type` and `GCCallbackFlags flags`.\n\n```c++\nstatic Persistent<Function> callback;\n\nNAN_GC_CALLBACK(gcPrologueCallback) {\n  Local<Value> argv[] = {NanNew("prologue")};\n  NanMakeCallback(NanGetCurrentContext()->Global(), NanNew(callback), 1, argv);\n}\n\nNAN_METHOD(Hook) {\n  NanScope();\n  NanAssignPersistent(callback, args[0].As<Function>());\n  NanAddGCPrologueCallback(gcPrologueCallback);\n  NanReturnValue(args.Holder());\n}\n```\n\n<a name="api_nan_weak_callback"></a>\n### NAN_WEAK_CALLBACK(cbname)\n\nUse `NAN_WEAK_CALLBACK` to define your V8 WeakReference callbacks. There is an argument object `const _NanWeakCallbackData<T, P> &data` allowing access to the weak object and the supplied parameter through its `GetValue` and `GetParameter` methods. You can even access the weak callback info object through the `GetCallbackInfo()`method, but you probably should not. `Revive()` keeps the weak object alive until the next GC round.\n\n```c++\nNAN_WEAK_CALLBACK(weakCallback) {\n  int *parameter = data.GetParameter();\n  NanMakeCallback(NanGetCurrentContext()->Global(), data.GetValue(), 0, NULL);\n  if ((*parameter)++ == 0) {\n    data.Revive();\n  } else {\n    delete parameter;\n  }\n}\n```\n\n<a name="api_nan_deprecated"></a>\n### NAN_DEPRECATED\nDeclares a function as deprecated.\n\n```c++\nstatic NAN_DEPRECATED NAN_METHOD(foo) {\n  ...\n}\n```\n\n<a name="api_nan_inline"></a>\n### NAN_INLINE\nInlines a function.\n\n```c++\nNAN_INLINE int foo(int bar) {\n  ...\n}\n```\n\n<a name="api_nan_new"></a>\n### Local&lt;T&gt; NanNew&lt;T&gt;( ... )\n\nUse `NanNew` to construct almost all v8 objects (bound `Script`s are constructed with <a href="#api_nan_compile_script">`NanCompileScript(Handle)`</a>) and make new local handles.\n\n```c++\nLocal<String> s = NanNew<String>("value");\n\n...\n\nPersistent<Object> o;\n\n...\n\nLocal<Object> lo = NanNew(o);\n\n```\n\n<a name="api_nan_undefined"></a>\n### Local&lt;Primitive&gt; NanUndefined()\n\nUse instead of `Undefined()`\n\n<a name="api_nan_null"></a>\n### Local&lt;Primitive&gt; NanNull()\n\nUse instead of `Null()`\n\n<a name="api_nan_true"></a>\n### Local&lt;Boolean&gt; NanTrue()\n\nUse instead of `True()`\n\n<a name="api_nan_false"></a>\n### Local&lt;Boolean&gt; NanFalse()\n\nUse instead of `False()`\n\n<a name="api_nan_return_value"></a>\n### NanReturnValue(Handle&lt;Value&gt;)\n\nUse `NanReturnValue` when you want to return a value from your V8 accessible method:\n\n```c++\nNAN_METHOD(Foo::Bar) {\n  ...\n\n  NanReturnValue(NanNew<String>("FooBar!"));\n}\n```\n\nNo `return` statement required.\n\n<a name="api_nan_return_undefined"></a>\n### NanReturnUndefined()\n\nUse `NanReturnUndefined` when you don\'t want to return anything from your V8 accessible method:\n\n```c++\nNAN_METHOD(Foo::Baz) {\n  ...\n\n  NanReturnUndefined();\n}\n```\n\n<a name="api_nan_return_null"></a>\n### NanReturnNull()\n\nUse `NanReturnNull` when you want to return `Null` from your V8 accessible method:\n\n```c++\nNAN_METHOD(Foo::Baz) {\n  ...\n\n  NanReturnNull();\n}\n```\n\n<a name="api_nan_return_empty_string"></a>\n### NanReturnEmptyString()\n\nUse `NanReturnEmptyString` when you want to return an empty `String` from your V8 accessible method:\n\n```c++\nNAN_METHOD(Foo::Baz) {\n  ...\n\n  NanReturnEmptyString();\n}\n```\n\n<a name="api_nan_return_this"></a>\n### NanReturnThis()\n\nUse `NanReturnThis` when you want to return `This` from your V8 accessible method:\n\n```c++\nNAN_METHOD(Foo::Baz) {\n  ...\n\n  NanReturnThis();\n}\n```\n\n<a name="api_nan_return_holder"></a>\n### NanReturnHolder()\n\nUse `NanReturnHolder` when you want to return `Holder` from your V8 accessible method:\n\n```c++\nNAN_METHOD(Foo::Baz) {\n  ...\n\n  NanReturnHolder();\n}\n```\n\n<a name="api_nan_scope"></a>\n### NanScope()\n\nThe introduction of `isolate` references for many V8 calls in Node 0.11 makes `NanScope()` necessary, use it in place of `HandleScope scope` when you do not wish to return handles (`Handle` or `Local`) to the surrounding scope (or in functions directly exposed to V8, as they do not return values in the normal sense):\n\n```c++\nNAN_METHOD(Foo::Bar) {\n  NanScope();\n\n  NanReturnValue(NanNew<String>("FooBar!"));\n}\n```\n\nThis method is not directly exposed to V8, nor does it return a handle, so it uses an unescapable scope:\n\n```c++\nbool Foo::Bar() {\n  NanScope();\n\n  Local<Boolean> val = NanFalse();\n  ...\n  return val->Value();\n}\n```\n\n<a name="api_nan_escapable_scope"></a>\n### NanEscapableScope()\n\nThe separation of handle scopes into escapable and inescapable scopes makes `NanEscapableScope()` necessary, use it in place of `HandleScope scope` when you later wish to return a handle (`Handle` or `Local`) from the scope, this is for internal functions not directly exposed to V8:\n\n```c++\nHandle<String> Foo::Bar() {\n  NanEscapableScope();\n\n  return NanEscapeScope(NanNew<String>("FooBar!"));\n}\n```\n\n<a name="api_nan_escape_scope"></a>\n### Local&lt;T&gt; NanEscapeScope(Handle&lt;T&gt; value);\nUse together with `NanEscapableScope` to escape the scope. Corresponds to `HandleScope::Close` or `EscapableHandleScope::Escape`.\n\n<a name="api_nan_locker"></a>\n### NanLocker()\n\nThe introduction of `isolate` references for many V8 calls in Node 0.11 makes `NanLocker()` necessary, use it in place of `Locker locker`:\n\n```c++\nNAN_METHOD(Foo::Bar) {\n  NanLocker();\n  ...\n  NanUnlocker();\n}\n```\n\n<a name="api_nan_unlocker"></a>\n### NanUnlocker()\n\nThe introduction of `isolate` references for many V8 calls in Node 0.11 makes `NanUnlocker()` necessary, use it in place of `Unlocker unlocker`:\n\n```c++\nNAN_METHOD(Foo::Bar) {\n  NanLocker();\n  ...\n  NanUnlocker();\n}\n```\n\n<a name="api_nan_get_internal_field_pointer"></a>\n### void * NanGetInternalFieldPointer(Handle&lt;Object&gt;, int)\n\nGets a pointer to the internal field with at `index` from a V8 `Object` handle.\n\n```c++\nLocal<Object> obj;\n...\nNanGetInternalFieldPointer(obj, 0);\n```\n<a name="api_nan_set_internal_field_pointer"></a>\n### void NanSetInternalFieldPointer(Handle&lt;Object&gt;, int, void *)\n\nSets the value of the internal field at `index` on a V8 `Object` handle.\n\n```c++\nstatic Persistent<Function> dataWrapperCtor;\n...\nLocal<Object> wrapper = NanNew(dataWrapperCtor)->NewInstance();\nNanSetInternalFieldPointer(wrapper, 0, this);\n```\n\n<a name="api_nan_object_wrap_handle"></a>\n### Local&lt;Object&gt; NanObjectWrapHandle(Object)\n\nWhen you want to fetch the V8 object handle from a native object you\'ve wrapped with Node\'s `ObjectWrap`, you should use `NanObjectWrapHandle`:\n\n```c++\nNanObjectWrapHandle(iterator)->Get(NanNew<String>("end"))\n```\n\n<a name="api_nan_symbol"></a>\n### ~~Local&lt;String&gt; NanSymbol(const char *)~~\n\nDeprecated. Use `NanNew<String>` instead.\n~~Use to create string symbol objects (i.e. `v8::String::NewSymbol(x)`), for getting and setting object properties, or names of objects.~~\n\n```c++\nbool foo = false;\nif (obj->Has(NanNew<String>("foo")))\n  foo = optionsObj->Get(NanNew<String>("foo"))->BooleanValue()\n```\n\n<a name="api_nan_get_pointer_safe"></a>\n### Type NanGetPointerSafe(Type *[, Type])\n\nA helper for getting values from optional pointers. If the pointer is `NULL`, the function returns the optional default value, which defaults to `0`.  Otherwise, the function returns the value the pointer points to.\n\n```c++\nchar *plugh(uint32_t *optional) {\n  char res[] = "xyzzy";\n  uint32_t param = NanGetPointerSafe<uint32_t>(optional, 0x1337);\n  switch (param) {\n    ...\n  }\n  NanSetPointerSafe<uint32_t>(optional, 0xDEADBEEF);\n}  \n```\n\n<a name="api_nan_set_pointer_safe"></a>\n### bool NanSetPointerSafe(Type *, Type)\n\nA helper for setting optional argument pointers. If the pointer is `NULL`, the function simply returns `false`.  Otherwise, the value is assigned to the variable the pointer points to.\n\n```c++\nconst char *plugh(size_t *outputsize) {\n  char res[] = "xyzzy";\n  if !(NanSetPointerSafe<size_t>(outputsize, strlen(res) + 1)) {\n    ...\n  }\n\n  ...\n}\n```\n\n<a name="api_nan_raw_string"></a>\n### ~~void* NanRawString(Handle&lt;Value&gt;, enum Nan::Encoding, size_t *, void *, size_t, int)~~\n\nDeprecated. Use something else.\n\n~~When you want to convert a V8 `String` to a `char*` buffer, use `NanRawString`. You have to supply an encoding as well as a pointer to a variable that will be assigned the number of bytes in the returned string. It is also possible to supply a buffer and its length to the function in order not to have a new buffer allocated. The final argument allows setting `String::WriteOptions`.\nJust remember that you\'ll end up with an object that you\'ll need to `delete[]` at some point unless you supply your own buffer:~~\n\n```c++\nsize_t count;\nvoid* decoded = NanRawString(args[1], Nan::BASE64, &count, NULL, 0, String::HINT_MANY_WRITES_EXPECTED);\n...\ndelete[] reinterpret_cast<char*>(decoded);\n```\n\n<a name="api_nan_c_string"></a>\n### ~~char* NanCString(Handle&lt;Value&gt;, size_t *[, char *, size_t, int])~~\n\nDeprecated. Use `String::Utf8Value` or `NanUtf8String` instead.\n\n~~When you want to convert a V8 `String` to a null-terminated C `char*` use `NanCString`. The resulting `char*` will be UTF-8-encoded, and you need to supply a pointer to a variable that will be assigned the number of bytes in the returned string. It is also possible to supply a buffer and its length to the function in order not to have a new buffer allocated. The final argument allows optionally setting `String::WriteOptions`, which default to `v8::String::NO_OPTIONS`.\nJust remember that you\'ll end up with an object that you\'ll need to `delete[]` at some point unless you supply your own buffer:~~\n\n```c++\nsize_t count;\nchar* name = NanCString(args[0], &count);\n...\ndelete[] name;\n```\n\n<a name="api_nan_ascii_string"></a>\n### NanAsciiString\n\nContrary to the name, this is not actually an ASCII string, it is a one-byte string with no particular encoding. Do not use unless you actually need this incorrect legacy behavior. Consider fixing your broken code instead. If you actually have a proper ASCII-string, use UTF-8, which is a proper superset of ASCII.\nConvert a `String` to zero-terminated, sort-of Ascii-encoded `char *`. The underlying buffer is freed when the owner object goes out of scope, so make a copy or heap allocation if you need it to stick around.\n\n```c++\nNAN_METHOD(foo) {\n  NanScope();\n  NanReturnValue(NanNew(*NanAsciiString(arg[0])));\n}\n```\n\n####*WRONG*:\nthe buffer `str` points to has been freed when `baz` was destroyed:\n```c++\nstatic char *str;\n\nNAN_METHOD(bar) {\n  NanScope();\n  NanAsciiString baz(arg[0]);\n\n  str = *baz;\n  NanReturnUndefined(); // baz goes out of scope, freeing str\n}\n\n...\n\nprintf(str); // use-after-free error\n```\n\n####*RIGHT*:\n```c++\nstatic NanAsciiString *str;\n\nNAN_METHOD(bar) {\n  NanScope();\n  str = new NanAsciiString(arg[0]);\n  NanReturnUndefined();\n}\n\n...\n\nprintf(**str);\n```\n\n<a name="api_nan_utf8_string"></a>\n### NanUtf8String\n\nEquivalent to `String::Utf8Value`, it only exists for the sake of completeness.\nConvert a `String` to zero-terminated, Utf8-encoded `char *`. The underlying buffer is freed when the owner object goes out of scope, so make a copy or heap allocation if you need it to stick around.\n\n```c++\nNAN_METHOD(foo) {\n  NanScope();\n  NanReturnValue(NanNew(*NanUtf8String(arg[0])));\n}\n```\n\n####*WRONG*:\nthe buffer `str` points to has been freed when `baz` was destroyed:\n```c++\nstatic char *str;\n\nNAN_METHOD(bar) {\n  NanScope();\n  NanUtf8String baz(arg[0]);\n\n  str = *baz;\n  NanReturnUndefined(); // baz goes out of scope, freeing str\n}\n\n...\n\nprintf(str); // use-after-free error\n```\n\n####*RIGHT*:\n```c++\nstatic NanUtf8String *str;\n\nNAN_METHOD(bar) {\n  NanScope();\n  str = new NanUtf8String(arg[0]);\n  NanReturnUndefined();\n}\n\n...\n\nprintf(**str);\n```\n\n\n<a name="api_nan_ucs2_string"></a>\n### NanUcs2String\n\nEquivalent to `String::Value`, it only exists for the sake of completeness.\nConvert a `String` to zero-terminated, Ucs2-encoded `uint16_t *`. The underlying buffer is freed when the owner object goes out of scope, so make a copy or heap allocation if you need it to stick around.\n\n```c++\nNAN_METHOD(foo) {\n  NanScope();\n  NanReturnValue(NanNew(*NanUcs2String(arg[0])));\n}\n```\n\n####*WRONG*:\nthe buffer `str` points to has been freed when `baz` was destroyed:\n```c++\nstatic char *str;\n\nNAN_METHOD(bar) {\n  NanScope();\n  NanUcs2String baz(arg[0]);\n\n  str = *baz;\n  NanReturnUndefined(); // baz goes out of scope, freeing str\n}\n\n...\n\nprintf(str); // use-after-free error\n```\n\n####*RIGHT*:\n```c++\nstatic NanUcs2String *str;\n\nNAN_METHOD(bar) {\n  NanScope();\n  str = new NanUcs2String(arg[0]);\n  NanReturnUndefined();\n}\n\n...\n\nprintf(**str);\n```\n\n<a name="api_nan_boolean_option_value"></a>\n### bool NanBooleanOptionValue(Handle&lt;Value&gt;, Handle&lt;String&gt;[, bool])\n\nWhen you have an "options" object that you need to fetch properties from, boolean options can be fetched with this pair. They check first if the object exists (`IsEmpty`), then if the object has the given property (`Has`) then they get and convert/coerce the property to a `bool`.\n\nThe optional last parameter is the *default* value, which is `false` if left off:\n\n```c++\n// `foo` is false unless the user supplies a truthy value for it\nbool foo = NanBooleanOptionValue(optionsObj, NanNew<String>("foo"));\n// `bar` is true unless the user supplies a falsy value for it\nbool bar = NanBooleanOptionValueDefTrue(optionsObj, NanNew<String>("bar"), true);\n```\n\n<a name="api_nan_uint32_option_value"></a>\n### uint32_t NanUInt32OptionValue(Handle&lt;Value&gt;, Handle&lt;String&gt;, uint32_t)\n\nSimilar to `NanBooleanOptionValue`, use `NanUInt32OptionValue` to fetch an integer option from your options object. Can be any kind of JavaScript `Number` and it will be coerced to an unsigned 32-bit integer.\n\nRequires all 3 arguments as a default is not optional:\n\n```c++\nuint32_t count = NanUInt32OptionValue(optionsObj, NanNew<String>("count"), 1024);\n```\n\n<a name="api_nan_error"></a>\n### NanError(message), NanTypeError(message), NanRangeError(message)\n\nFor making `Error`, `TypeError` and `RangeError` objects.\n\n```c++\nLocal<Value> res = NanError("you must supply a callback argument");\n```\n\n<a name="api_nan_throw_error"></a>\n### NanThrowError(message), NanThrowTypeError(message), NanThrowRangeError(message), NanThrowError(Local&lt;Value&gt;), NanThrowError(Local&lt;Value&gt;, int)\n\nFor throwing `Error`, `TypeError` and `RangeError` objects.\n\n```c++\nNanThrowError("you must supply a callback argument");\n```\n\nCan also handle any custom object you may want to throw. If used with the error code argument, it will add the supplied error code to the error object as a property called `code`.\n\n<a name="api_nan_new_buffer_handle"></a>\n### Local&lt;Object&gt; NanNewBufferHandle(char *, uint32_t), Local&lt;Object&gt; NanNewBufferHandle(uint32_t)\n\nThe `Buffer` API has changed a little in Node 0.11, this helper provides consistent access to `Buffer` creation:\n\n```c++\nNanNewBufferHandle((char*)value.data(), value.size());\n```\n\nCan also be used to initialize a `Buffer` with just a `size` argument.\n\nCan also be supplied with a `NanFreeCallback` and a hint for the garbage collector.\n\n<a name="api_nan_buffer_use"></a>\n### Local&lt;Object&gt; NanBufferUse(char*, uint32_t)\n\n`Buffer::New(char*, uint32_t)` prior to 0.11 would make a copy of the data.\nWhile it was possible to get around this, it required a shim by passing a\ncallback. So the new API `Buffer::Use(char*, uint32_t)` was introduced to remove\nneeding to use this shim.\n\n`NanBufferUse` uses the `char*` passed as the backing data, and will free the\nmemory automatically when the weak callback is called. Keep this in mind, as\ncareless use can lead to "double free or corruption" and other cryptic failures.\n\n<a name="api_nan_has_instance"></a>\n### bool NanHasInstance(Persistent&lt;FunctionTemplate&gt;&, Handle&lt;Value&gt;)\n\nCan be used to check the type of an object to determine it is of a particular class you have already defined and have a `Persistent<FunctionTemplate>` handle for.\n\n<a name="api_nan_new_context_handle"></a>\n### Local&lt;Context&gt; NanNewContextHandle([ExtensionConfiguration*, Handle&lt;ObjectTemplate&gt;, Handle&lt;Value&gt;])\nCreates a new `Local<Context>` handle.\n\n```c++\nLocal<FunctionTemplate> ftmpl = NanNew<FunctionTemplate>();\nLocal<ObjectTemplate> otmpl = ftmpl->InstanceTemplate();\nLocal<Context> ctx =  NanNewContextHandle(NULL, otmpl);\n```\n\n<a name="api_nan_get_current_context"></a>\n### Local&lt;Context&gt; NanGetCurrentContext()\n\nGets the current context.\n\n```c++\nLocal<Context> ctx = NanGetCurrentContext();\n```\n\n<a name="api_nan_dispose_persistent"></a>\n### void NanDisposePersistent(Persistent&lt;T&gt; &)\n\nUse `NanDisposePersistent` to dispose a `Persistent` handle.\n\n```c++\nNanDisposePersistent(persistentHandle);\n```\n\n<a name="api_nan_assign_persistent"></a>\n### NanAssignPersistent(handle, object)\n\nUse `NanAssignPersistent` to assign a non-`Persistent` handle to a `Persistent` one. You can no longer just declare a `Persistent` handle and assign directly to it later, you have to `Reset` it in Node 0.11, so this makes it easier.\n\nIn general it is now better to place anything you want to protect from V8\'s garbage collector as properties of a generic `Object` and then assign that to a `Persistent`. This works in older versions of Node also if you use `NanAssignPersistent`:\n\n```c++\nPersistent<Object> persistentHandle;\n\n...\n\nLocal<Object> obj = NanNew<Object>();\nobj->Set(NanNew<String>("key"), keyHandle); // where keyHandle might be a Local<String>\nNanAssignPersistent(persistentHandle, obj)\n```\n\n<a name="api_nan_make_weak_persistent"></a>\n### _NanWeakCallbackInfo&lt;T, P&gt;* NanMakeWeakPersistent(Handle&lt;T&gt;, P*, _NanWeakCallbackInfo&lt;T, P&gt;::Callback)\n\nCreates a weak persistent handle with the supplied parameter and `NAN_WEAK_CALLBACK`.\n\n```c++\nNAN_WEAK_CALLBACK(weakCallback) {\n\n...\n\n}\n\nLocal<Function> func;\n\n...\n\nint *parameter = new int(0);\nNanMakeWeakPersistent(func, parameter, &weakCallback);\n```\n\n<a name="api_nan_set_template"></a>\n### NanSetTemplate(templ, name, value [, attributes])\n\nUse to add properties on object and function templates.\n\n<a name="api_nan_set_prototype_template"></a>\n### NanSetPrototypeTemplate(templ, name, value [, attributes])\n\nUse to add prototype properties on function templates.\n\n<a name="api_nan_set_instance_template"></a>\n### NanSetInstanceTemplate(templ, name, value [, attributes])\n\nUse to add instance properties on function templates.\n\n<a name="api_nan_make_callback"></a>\n### NanMakeCallback(target, func, argc, argv)\n\nUse instead of `node::MakeCallback` to call javascript functions. This (or `NanCallback`) is the only proper way of calling functions. You must _*never, ever*_ directly use `Function::Call`, it will lead to run-time failures.\n\n<a name="api_nan_compile_script"></a>\n### NanCompileScript(Handle<String> s [, const ScriptOrigin&amp; origin])\n\nUse to create new scripts bound to the current context.\n\n<a name="api_nan_run_script"></a>\n### NanRunScript(script)\n\nUse to run both bound and unbound scripts.\n\n<a name="api_nan_adjust_external_memory"></a>\n### NanAdjustExternalMemory(int change_in_bytes)\n\nSimply does `AdjustAmountOfExternalAllocatedMemory`, note that the argument and returned value have type `int`.\n\n<a name="api_nan_add_gc_epilogue_callback"></a>\n### NanAddGCEpilogueCallback(GCEpilogueCallback callback, GCType gc_type_filter=kGCTypeAll)\n\nSimply does `AddGCEpilogueCallback`\n\n<a name="api_nan_add_gc_prologue_callback"></a>\n### NanAddGCPrologueCallback(GCPrologueCallback callback, GCType gc_type_filter=kGCTypeAll)\n\nSimply does `AddGCPrologueCallback`\n\n<a name="api_nan_remove_gc_epilogue_callback"></a>\n### NanRemoveGCEpilogueCallback(GCEpilogueCallback callback)\n\nSimply does `RemoveGCEpilogueCallback`\n\n<a name="api_nan_remove_gc_prologue_callback"></a>\n### NanRemoveGCPrologueCallback(GCPrologueCallback callback)\n\nSimply does `RemoveGCPrologueCallback`\n\n<a name="api_nan_get_heap_statistics"></a>\n### NanGetHeapStatistics(HeapStatistics *heap_statistics)\n\nSimply does `GetHeapStatistics`\n\n<a name="api_nan_callback"></a>\n### NanCallback\n\nBecause of the difficulties imposed by the changes to `Persistent` handles in V8 in Node 0.11, creating `Persistent` versions of your `Handle<Function>` is annoyingly tricky. `NanCallback` makes it easier by taking your handle, making it persistent until the `NanCallback` is deleted and even providing a handy `Call()` method to fetch and execute the callback `Function`.\n\n```c++\nLocal<Function> callbackHandle = args[0].As<Function>();\nNanCallback *callback = new NanCallback(callbackHandle);\n// pass `callback` around and it\'s safe from GC until you:\ndelete callback;\n```\n\nYou can execute the callback like so:\n\n```c++\n// no arguments:\ncallback->Call(0, NULL);\n\n// an error argument:\nHandle<Value> argv[] = {\n  NanError(NanNew<String>("fail!"))\n};\ncallback->Call(1, argv);\n\n// a success argument:\nHandle<Value> argv[] = {\n  NanNull(),\n  NanNew<String>("w00t!")\n};\ncallback->Call(2, argv);\n```\n\n`NanCallback` also has a `Local<Function> GetFunction()` method that you can use\nto fetch a local handle to the underlying callback function, as well  as a\n`void SetFunction(Handle<Function>)` for setting the callback on the\n`NanCallback`. You can check if a `NanCallback` is empty with the `bool IsEmpty()` method. Additionally a generic constructor is available for using\n`NanCallback` without performing heap allocations.\n\n<a name="api_nan_async_worker"></a>\n### NanAsyncWorker\n\n`NanAsyncWorker` is an abstract class that you can subclass to have much of the annoying async queuing and handling taken care of for you. It can even store arbitrary V8 objects for you and have them persist while the async work is in progress.\n\nSee a rough outline of the implementation:\n\n```c++\nclass NanAsyncWorker {\npublic:\n  NanAsyncWorker (NanCallback *callback);\n\n  // Clean up persistent handles and delete the *callback\n  virtual ~NanAsyncWorker ();\n\n  // Check the `ErrorMessage()` and call HandleOKCallback()\n  // or HandleErrorCallback depending on whether it has been set or not\n  virtual void WorkComplete ();\n\n  // You must implement this to do some async work. If there is an\n  // error then use `SetErrorMessage()` to set an error message and the callback will\n  // be passed that string in an Error object\n  virtual void Execute ();\n\n  // Save a V8 object in a Persistent handle to protect it from GC\n  void SaveToPersistent(const char *key, Local<Object> &obj);\n\n  // Fetch a stored V8 object (don\'t call from within `Execute()`)\n  Local<Object> GetFromPersistent(const char *key);\n\n  // Get the error message (or NULL)\n  const char *ErrorMessage();\n\n  // Set an error message\n  void SetErrorMessage(const char *msg);\n\nprotected:\n  // Default implementation calls the callback function with no arguments.\n  // Override this to return meaningful data\n  virtual void HandleOKCallback ();\n\n  // Default implementation calls the callback function with an Error object\n  // wrapping the `errmsg` string\n  virtual void HandleErrorCallback ();\n};\n```\n\n<a name="api_nan_async_queue_worker"></a>\n### NanAsyncQueueWorker(NanAsyncWorker *)\n\n`NanAsyncQueueWorker` will run a `NanAsyncWorker` asynchronously via libuv. Both the *execute* and *after_work* steps are taken care of for you&mdash;most of the logic for this is embedded in `NanAsyncWorker`.\n\n<a name="api"></a>\n### Tests\n\nTo run the NAN tests do:\n\n``` sh\nnpm install\nnpm run-script rebuild-tests\nnpm test\n```\n\nOr just:\n\n``` sh\nnpm install\nmake test\n```\n\n### Contributors\n\nNAN is only possible due to the excellent work of the following contributors:\n\n<table><tbody>\n<tr><th align="left">Rod Vagg</th><td><a href="https://github.com/rvagg">GitHub/rvagg</a></td><td><a href="http://twitter.com/rvagg">Twitter/@rvagg</a></td></tr>\n<tr><th align="left">Benjamin Byholm</th><td><a href="https://github.com/kkoopa/">GitHub/kkoopa</a></td><td>-</td></tr>\n<tr><th align="left">Trevor Norris</th><td><a href="https://github.com/trevnorris">GitHub/trevnorris</a></td><td><a href="http://twitter.com/trevnorris">Twitter/@trevnorris</a></td></tr>\n<tr><th align="left">Nathan Rajlich</th><td><a href="https://github.com/TooTallNate">GitHub/TooTallNate</a></td><td><a href="http://twitter.com/TooTallNate">Twitter/@TooTallNate</a></td></tr>\n<tr><th align="left">Brett Lawson</th><td><a href="https://github.com/brett19">GitHub/brett19</a></td><td><a href="http://twitter.com/brett19x">Twitter/@brett19x</a></td></tr>\n<tr><th align="left">Ben Noordhuis</th><td><a href="https://github.com/bnoordhuis">GitHub/bnoordhuis</a></td><td><a href="http://twitter.com/bnoordhuis">Twitter/@bnoordhuis</a></td></tr>\n<tr><th align="left">David Siegel</th><td><a href="https://github.com/agnat">GitHub/agnat</a></td><td>-</td></tr>\n</tbody></table>\n\nLicence &amp; copyright\n-----------------------\n\nCopyright (c) 2015 NAN contributors (listed above).\n\nNative Abstractions for Node.js is licensed under an MIT license. All rights not explicitly granted in the MIT license are reserved. See the included LICENSE file for more details.\n',
1266 silly resolved     readmeFilename: 'README.md',
1266 silly resolved     bugs: { url: 'https://github.com/rvagg/nan/issues' },
1266 silly resolved     homepage: 'https://github.com/rvagg/nan',
1266 silly resolved     _id: 'nan@1.5.3',
1266 silly resolved     _from: 'nan@~1.5.1' } ]
1267 info install nan@1.5.3 into /Users/craignishina/Workspace/IntelHackathon/server/node_modules/ffi/node_modules/ref
1268 info installOne nan@1.5.3
1269 silly resolved [ { name: 'nan',
1269 silly resolved     version: '1.5.3',
1269 silly resolved     description: 'Native Abstractions for Node.js: C++ header for Node 0.8->0.12 compatibility',
1269 silly resolved     main: 'include_dirs.js',
1269 silly resolved     repository: { type: 'git', url: 'git://github.com/rvagg/nan.git' },
1269 silly resolved     scripts:
1269 silly resolved      { test: 'tap --gc test/js/*-test.js',
1269 silly resolved        'rebuild-tests': 'node-gyp rebuild --directory test' },
1269 silly resolved     contributors:
1269 silly resolved      [ [Object],
1269 silly resolved        [Object],
1269 silly resolved        [Object],
1269 silly resolved        [Object],
1269 silly resolved        [Object],
1269 silly resolved        [Object],
1269 silly resolved        [Object] ],
1269 silly resolved     devDependencies:
1269 silly resolved      { bindings: '~1.2.1',
1269 silly resolved        'node-gyp': '~1.0.2',
1269 silly resolved        tap: '~0.5.0',
1269 silly resolved        xtend: '~4.0.0' },
1269 silly resolved     license: 'MIT',
1269 silly resolved     readme: 'Native Abstractions for Node.js\n===============================\n\n**A header file filled with macro and utility goodness for making add-on development for Node.js easier across versions 0.8, 0.10 and 0.11, and eventually 0.12.**\n\n***Current version: 1.5.2***\n\n*(See [CHANGELOG.md](https://github.com/rvagg/nan/blob/master/CHANGELOG.md) for complete ChangeLog)*\n\n[![NPM](https://nodei.co/npm/nan.png?downloads=true&downloadRank=true)](https://nodei.co/npm/nan/) [![NPM](https://nodei.co/npm-dl/nan.png?months=6&height=3)](https://nodei.co/npm/nan/)\n\n[![Build Status](https://secure.travis-ci.org/rvagg/nan.png)](http://travis-ci.org/rvagg/nan)\n[![Build status](https://ci.appveyor.com/api/projects/status/kh73pbm9dsju7fgh)](https://ci.appveyor.com/project/RodVagg/nan)\n\nThanks to the crazy changes in V8 (and some in Node core), keeping native addons compiling happily across versions, particularly 0.10 to 0.11/0.12, is a minor nightmare. The goal of this project is to store all logic necessary to develop native Node.js addons without having to inspect `NODE_MODULE_VERSION` and get yourself into a macro-tangle.\n\nThis project also contains some helper utilities that make addon development a bit more pleasant.\n\n * **[News & Updates](#news)**\n * **[Usage](#usage)**\n * **[Example](#example)**\n * **[API](#api)**\n * **[Tests](#tests)**\n\n<a name="news"></a>\n## News & Updates\n\n### Jan-2015: 1.5.0 release\n\n* Support [io.js](https://github.com/iojs/io.js) thanks to [Ben Noordhuis](bnoordhuis)\n* Rewritten NanNew internals thanks to [David Siegel](agnat)\n* NanAsyncWorker now supports progress reporting thanks to [Brett Lawson](brett19)\n\n### Aug-2014: 1.3.0 release\n\n* `NanCString()` and `NanRawString()` have been deprecated in favour of new <a href="#api_nan_ascii_string"><b><code>NanAsciiString</code></b></a>, <a href="#api_nan_utf8_string"><b><code>NanUtf8String</code></b></a> and <a href="#api_nan_ucs2_string"><b><code>NanUcs2String</code></b></a>. These classes manage the underlying memory for you in a safer way than just handing off an allocated array. You should now `*NanAsciiString(handle)` to access the raw `char` data, you can also allocate on the heap if you need to keep a reference.\n* Two more <a href="#api_nan_make_callback"><b><code>NanMakeCallback</code></b></a> overloads have been added to for parity with Node core.\n* You can now `NanNew(std::string)` (use `NanNew<std::string&>(std::string&)` to pass by reference)\n* <a href="#api_nan_set_template"><b><code>NanSetTemplate</code></b></a>, <a href="#api_nan_set_prototype_template"><b><code>NanSetPrototypeTemplate</code></b></a> and <a href="#api_nan_set_instance_template"><b><code>NanSetInstanceTemplate</code></b></a> have been added.\n\n### May-2014: 1.1.0 release\n\n* We\'ve deprecated `NanSymbol()`, you should just use `NanNew<String>()` now.\n* `NanNull()`, `NanUndefined()`, `NanTrue()`, `NanFalse()` all return `Local`s now.\n* `nan_isolate` is gone, it was intended to be internal-only but if you were using it then you should switch to `v8::Isolate::GetCurrent()`.\n* `NanNew()` has received some additional overload-love so you should be able to give it many kinds of values without specifying the `<Type>`.\n* Lots of small fixes and additions to expand the V8 API coverage, *use the source, Luke*.\n\n\n### May-2014: Major changes for V8 3.25 / Node 0.11.13\n\nNode 0.11.11 and 0.11.12 were both broken releases for native add-ons, you simply can\'t properly compile against either of them for different reasons. But we now have a 0.11.13 release that jumps a couple of versions of V8 ahead and includes some more, major (traumatic) API changes.\n\nBecause we are now nearing Node 0.12 and estimate that the version of V8 we are using in Node 0.11.13 will be close to the API we get for 0.12, we have taken the opportunity to not only *fix* NAN for 0.11.13 but make some major changes to improve the NAN API.\n\nWe have **removed support for Node 0.11 versions prior to 0.11.13**. As usual, our tests are run against (and pass) the last 5 versions of Node 0.8 and Node 0.10. We also include Node 0.11.13 obviously.\n\nThe major change is something that [Benjamin Byholm](kkoopa) has put many hours in to. We now have a fantastic new `NanNew<T>(args)` interface for creating new `Local`s, this replaces `NanNewLocal()` and much more. If you look in [./nan.h](nan.h) you\'ll see a large number of overloaded versions of this method. In general you should be able to `NanNew<Type>(arguments)` for any type you want to make a `Local` from. This includes `Persistent` types, so we now have a `Local<T> NanNew(const Persistent<T> arg)` to replace `NanPersistentToLocal()`.\n\nWe also now have `NanUndefined()`, `NanNull()`, `NanTrue()` and `NanFalse()`. Mainly because of the new requirement for an `Isolate` argument for each of the native V8 versions of this.\n\nV8 has now introduced an `EscapableHandleScope` from which you `scope.Escape(Local<T> value)` to *return* a value from a one scope to another. This replaces the standard `HandleScope` and `scope.Close(Local<T> value)`, although `HandleScope` still exists for when you don\'t need to return a handle to the caller. For NAN we are exposing it as `NanEscapableScope()` and `NanEscapeScope()`, while `NanScope()` is still how you create a new scope that doesn\'t need to return handles. For older versions of Node/V8, it\'ll still map to the older `HandleScope` functionality.\n\n`NanFromV8String()` was deprecated and has now been removed. You should use `NanCString()` or `NanRawString()` instead.\n\nBecause `node::MakeCallback()` now takes an `Isolate`, and because it doesn\'t exist in older versions of Node, we\'ve introduced `NanMakeCallback()`. You should *always* use this when calling a JavaScript function from C++.\n\nThere\'s lots more, check out the Changelog in nan.h or look through [#86](https://github.com/rvagg/nan/pull/86) for all the gory details.\n\n### Dec-2013: NanCString and NanRawString\n\nTwo new functions have been introduced to replace the functionality that\'s been provided by `NanFromV8String` until now. NanCString has sensible defaults so it\'s super easy to fetch a null-terminated c-style string out of a `v8::String`. `NanFromV8String` is still around and has defaults that allow you to pass a single handle to fetch a `char*` while `NanRawString` requires a little more attention to arguments.\n\n### Nov-2013: Node 0.11.9+ breaking V8 change\n\nThe version of V8 that\'s shipping with Node 0.11.9+ has changed the signature for new `Local`s to: `v8::Local<T>::New(isolate, value)`, i.e. introducing the `isolate` argument and therefore breaking all new `Local` declarations for previous versions. NAN 0.6+ now includes a `NanNewLocal<T>(value)` that can be used in place to work around this incompatibility and maintain compatibility with 0.8->0.11.9+ (minus a few early 0.11 releases).\n\nFor example, if you wanted to return a `null` on a callback you will have to change the argument from `v8::Local<v8::Value>::New(v8::Null())` to `NanNewLocal<v8::Value>(v8::Null())`.\n\n### Nov-2013: Change to binding.gyp `"include_dirs"` for NAN\n\nInclusion of NAN in a project\'s binding.gyp is now greatly simplified. You can now just use `"<!(node -e \\"require(\'nan\')\\")"` in your `"include_dirs"`, see example below (note Windows needs the quoting around `require` to be just right: `"require(\'nan\')"` with appropriate `\\` escaping).\n\n<a name="usage"></a>\n## Usage\n\nSimply add **NAN** as a dependency in the *package.json* of your Node addon:\n\n``` bash\n$ npm install --save nan\n```\n\nPull in the path to **NAN** in your *binding.gyp* so that you can use `#include <nan.h>` in your *.cpp* files:\n\n``` python\n"include_dirs" : [\n    "<!(node -e \\"require(\'nan\')\\")"\n]\n```\n\nThis works like a `-I<path-to-NAN>` when compiling your addon.\n\n<a name="example"></a>\n## Example\n\nSee **[LevelDOWN](https://github.com/rvagg/node-leveldown/pull/48)** for a full example of **NAN** in use.\n\nFor a simpler example, see the **[async pi estimation example](https://github.com/rvagg/nan/tree/master/examples/async_pi_estimate)** in the examples directory for full code and an explanation of what this Monte Carlo Pi estimation example does. Below are just some parts of the full example that illustrate the use of **NAN**.\n\nFor another example, see **[nan-example-eol](https://github.com/CodeCharmLtd/nan-example-eol)**. It shows newline detection implemented as a native addon.\n\nCompare to the current 0.10 version of this example, found in the [node-addon-examples](https://github.com/rvagg/node-addon-examples/tree/master/9_async_work) repository and also a 0.11 version of the same found [here](https://github.com/kkoopa/node-addon-examples/tree/5c01f58fc993377a567812597e54a83af69686d7/9_async_work).\n\nNote that there is no embedded version sniffing going on here and also the async work is made much simpler, see below for details on the `NanAsyncWorker` class.\n\n```c++\n// addon.cc\n#include <node.h>\n#include <nan.h>\n// ...\n\nusing v8::FunctionTemplate;\nusing v8::Handle;\nusing v8::Object;\nusing v8::String;\n\nvoid InitAll(Handle<Object> exports) {\n  exports->Set(NanNew<String>("calculateSync"),\n    NanNew<FunctionTemplate>(CalculateSync)->GetFunction());\n\n  exports->Set(NanNew<String>("calculateAsync"),\n    NanNew<FunctionTemplate>(CalculateAsync)->GetFunction());\n}\n\nNODE_MODULE(addon, InitAll)\n```\n\n```c++\n// sync.h\n#include <node.h>\n#include <nan.h>\n\nNAN_METHOD(CalculateSync);\n```\n\n```c++\n// sync.cc\n#include <node.h>\n#include <nan.h>\n#include "./sync.h"\n// ...\n\nusing v8::Number;\n\n// Simple synchronous access to the `Estimate()` function\nNAN_METHOD(CalculateSync) {\n  NanScope();\n\n  // expect a number as the first argument\n  int points = args[0]->Uint32Value();\n  double est = Estimate(points);\n\n  NanReturnValue(NanNew<Number>(est));\n}\n```\n\n```c++\n// async.h\n#include <node.h>\n#include <nan.h>\n\nNAN_METHOD(CalculateAsync);\n```\n\n```c++\n// async.cc\n#include <node.h>\n#include <nan.h>\n#include "./async.h"\n\n// ...\n\nusing v8::Function;\nusing v8::Local;\nusing v8::Null;\nusing v8::Number;\nusing v8::Value;\n\nclass PiWorker : public NanAsyncWorker {\n public:\n  PiWorker(NanCallback *callback, int points)\n    : NanAsyncWorker(callback), points(points) {}\n  ~PiWorker() {}\n\n  // Executed inside the worker-thread.\n  // It is not safe to access V8, or V8 data structures\n  // here, so everything we need for input and output\n  // should go on `this`.\n  void Execute () {\n    estimate = Estimate(points);\n  }\n\n  // Executed when the async work is complete\n  // this function will be run inside the main event loop\n  // so it is safe to use V8 again\n  void HandleOKCallback () {\n    NanScope();\n\n    Local<Value> argv[] = {\n        NanNull()\n      , NanNew<Number>(estimate)\n    };\n\n    callback->Call(2, argv);\n  };\n\n private:\n  int points;\n  double estimate;\n};\n\n// Asynchronous access to the `Estimate()` function\nNAN_METHOD(CalculateAsync) {\n  NanScope();\n\n  int points = args[0]->Uint32Value();\n  NanCallback *callback = new NanCallback(args[1].As<Function>());\n\n  NanAsyncQueueWorker(new PiWorker(callback, points));\n  NanReturnUndefined();\n}\n```\n\n<a name="api"></a>\n## API\n\n * <a href="#api_nan_method"><b><code>NAN_METHOD</code></b></a>\n * <a href="#api_nan_getter"><b><code>NAN_GETTER</code></b></a>\n * <a href="#api_nan_setter"><b><code>NAN_SETTER</code></b></a>\n * <a href="#api_nan_property_getter"><b><code>NAN_PROPERTY_GETTER</code></b></a>\n * <a href="#api_nan_property_setter"><b><code>NAN_PROPERTY_SETTER</code></b></a>\n * <a href="#api_nan_property_enumerator"><b><code>NAN_PROPERTY_ENUMERATOR</code></b></a>\n * <a href="#api_nan_property_deleter"><b><code>NAN_PROPERTY_DELETER</code></b></a>\n * <a href="#api_nan_property_query"><b><code>NAN_PROPERTY_QUERY</code></b></a>\n * <a href="#api_nan_index_getter"><b><code>NAN_INDEX_GETTER</code></b></a>\n * <a href="#api_nan_index_setter"><b><code>NAN_INDEX_SETTER</code></b></a>\n * <a href="#api_nan_index_enumerator"><b><code>NAN_INDEX_ENUMERATOR</code></b></a>\n * <a href="#api_nan_index_deleter"><b><code>NAN_INDEX_DELETER</code></b></a>\n * <a href="#api_nan_index_query"><b><code>NAN_INDEX_QUERY</code></b></a>\n * <a href="#api_nan_gc_callback"><b><code>NAN_GC_CALLBACK</code></b></a>\n * <a href="#api_nan_weak_callback"><b><code>NAN_WEAK_CALLBACK</code></b></a>\n * <a href="#api_nan_deprecated"><b><code>NAN_DEPRECATED</code></b></a>\n * <a href="#api_nan_inline"><b><code>NAN_INLINE</code></b></a>\n * <a href="#api_nan_new"><b><code>NanNew</code></b></a>\n * <a href="#api_nan_undefined"><b><code>NanUndefined</code></b></a>\n * <a href="#api_nan_null"><b><code>NanNull</code></b></a>\n * <a href="#api_nan_true"><b><code>NanTrue</code></b></a>\n * <a href="#api_nan_false"><b><code>NanFalse</code></b></a>\n * <a href="#api_nan_return_value"><b><code>NanReturnValue</code></b></a>\n * <a href="#api_nan_return_undefined"><b><code>NanReturnUndefined</code></b></a>\n * <a href="#api_nan_return_null"><b><code>NanReturnNull</code></b></a>\n * <a href="#api_nan_return_empty_string"><b><code>NanReturnEmptyString</code></b></a>\n * <a href="#api_nan_return_this"><b><code>NanReturnThis</code></b></a>\n * <a href="#api_nan_return_holder"><b><code>NanReturnHolder</code></b></a>\n * <a href="#api_nan_scope"><b><code>NanScope</code></b></a>\n * <a href="#api_nan_escapable_scope"><b><code>NanEscapableScope</code></b></a>\n * <a href="#api_nan_escape_scope"><b><code>NanEscapeScope</code></b></a>\n * <a href="#api_nan_locker"><b><code>NanLocker</code></b></a>\n * <a href="#api_nan_unlocker"><b><code>NanUnlocker</code></b></a>\n * <a href="#api_nan_get_internal_field_pointer"><b><code>NanGetInternalFieldPointer</code></b></a>\n * <a href="#api_nan_set_internal_field_pointer"><b><code>NanSetInternalFieldPointer</code></b></a>\n * <a href="#api_nan_object_wrap_handle"><b><code>NanObjectWrapHandle</code></b></a>\n * <del><a href="#api_nan_symbol"><b><code>NanSymbol</code></b></a></del>\n * <a href="#api_nan_get_pointer_safe"><b><code>NanGetPointerSafe</code></b></a>\n * <a href="#api_nan_set_pointer_safe"><b><code>NanSetPointerSafe</code></b></a>\n * <del><a href="#api_nan_raw_string"><b><code>NanRawString</code></b></a></del>\n * <del><a href="#api_nan_c_string"><b><code>NanCString</code></b></a></del>\n * <a href="#api_nan_ascii_string"><b><code>NanAsciiString</code></b></a>\n * <a href="#api_nan_utf8_string"><b><code>NanUtf8String</code></b></a>\n * <a href="#api_nan_ucs2_string"><b><code>NanUcs2String</code></b></a>\n * <a href="#api_nan_boolean_option_value"><b><code>NanBooleanOptionValue</code></b></a>\n * <a href="#api_nan_uint32_option_value"><b><code>NanUInt32OptionValue</code></b></a>\n * <a href="#api_nan_error"><b><code>NanError</code></b>, <b><code>NanTypeError</code></b>, <b><code>NanRangeError</code></b></a>\n * <a href="#api_nan_throw_error"><b><code>NanThrowError</code></b>, <b><code>NanThrowTypeError</code></b>, <b><code>NanThrowRangeError</code></b>, <b><code>NanThrowError(Handle<Value>)</code></b>, <b><code>NanThrowError(Handle<Value>, int)</code></b></a>\n * <a href="#api_nan_new_buffer_handle"><b><code>NanNewBufferHandle(char *, size_t, FreeCallback, void *)</code></b>, <b><code>NanNewBufferHandle(char *, uint32_t)</code></b>, <b><code>NanNewBufferHandle(uint32_t)</code></b></a>\n * <a href="#api_nan_buffer_use"><b><code>NanBufferUse(char *, uint32_t)</code></b></a>\n * <a href="#api_nan_new_context_handle"><b><code>NanNewContextHandle</code></b></a>\n * <a href="#api_nan_get_current_context"><b><code>NanGetCurrentContext</code></b></a>\n * <a href="#api_nan_has_instance"><b><code>NanHasInstance</code></b></a>\n * <a href="#api_nan_dispose_persistent"><b><code>NanDisposePersistent</code></b></a>\n * <a href="#api_nan_assign_persistent"><b><code>NanAssignPersistent</code></b></a>\n * <a href="#api_nan_make_weak_persistent"><b><code>NanMakeWeakPersistent</code></b></a>\n * <a href="#api_nan_set_template"><b><code>NanSetTemplate</code></b></a>\n * <a href="#api_nan_set_prototype_template"><b><code>NanSetPrototypeTemplate</code></b></a>\n * <a href="#api_nan_set_instance_template"><b><code>NanSetInstanceTemplate</code></b></a>\n * <a href="#api_nan_make_callback"><b><code>NanMakeCallback</code></b></a>\n * <a href="#api_nan_compile_script"><b><code>NanCompileScript</code></b></a>\n * <a href="#api_nan_run_script"><b><code>NanRunScript</code></b></a>\n * <a href="#api_nan_adjust_external_memory"><b><code>NanAdjustExternalMemory</code></b></a>\n * <a href="#api_nan_add_gc_epilogue_callback"><b><code>NanAddGCEpilogueCallback</code></b></a>\n * <a href="#api_nan_add_gc_prologue_callback"><b><code>NanAddGCPrologueCallback</code></b></a>\n * <a href="#api_nan_remove_gc_epilogue_callback"><b><code>NanRemoveGCEpilogueCallback</code></b></a>\n * <a href="#api_nan_remove_gc_prologue_callback"><b><code>NanRemoveGCPrologueCallback</code></b></a>\n * <a href="#api_nan_get_heap_statistics"><b><code>NanGetHeapStatistics</code></b></a>\n * <a href="#api_nan_callback"><b><code>NanCallback</code></b></a>\n * <a href="#api_nan_async_worker"><b><code>NanAsyncWorker</code></b></a>\n * <a href="#api_nan_async_queue_worker"><b><code>NanAsyncQueueWorker</code></b></a>\n\n<a name="api_nan_method"></a>\n### NAN_METHOD(methodname)\n\nUse `NAN_METHOD` to define your V8 accessible methods:\n\n```c++\n// .h:\nclass Foo : public node::ObjectWrap {\n  ...\n\n  static NAN_METHOD(Bar);\n  static NAN_METHOD(Baz);\n}\n\n\n// .cc:\nNAN_METHOD(Foo::Bar) {\n  ...\n}\n\nNAN_METHOD(Foo::Baz) {\n  ...\n}\n```\n\nThe reason for this macro is because of the method signature change in 0.11:\n\n```c++\n// 0.10 and below:\nHandle<Value> name(const Arguments& args)\n\n// 0.11 and above\nvoid name(const FunctionCallbackInfo<Value>& args)\n```\n\nThe introduction of `FunctionCallbackInfo` brings additional complications:\n\n<a name="api_nan_getter"></a>\n### NAN_GETTER(methodname)\n\nUse `NAN_GETTER` to declare your V8 accessible getters. You get a `Local<String>` `property` and an appropriately typed `args` object that can act like the `args` argument to a `NAN_METHOD` call.\n\nYou can use `NanReturnNull()`, `NanReturnEmptyString()`, `NanReturnUndefined()` and `NanReturnValue()` in a `NAN_GETTER`.\n\n<a name="api_nan_setter"></a>\n### NAN_SETTER(methodname)\n\nUse `NAN_SETTER` to declare your V8 accessible setters. Same as `NAN_GETTER` but you also get a `Local<Value>` `value` object to work with.\n\n<a name="api_nan_property_getter"></a>\n### NAN_PROPERTY_GETTER(cbname)\nUse `NAN_PROPERTY_GETTER` to declare your V8 accessible property getters. You get a `Local<String>` `property` and an appropriately typed `args` object that can act similar to the `args` argument to a `NAN_METHOD` call.\n\nYou can use `NanReturnNull()`, `NanReturnEmptyString()`, `NanReturnUndefined()` and `NanReturnValue()` in a `NAN_PROPERTY_GETTER`.\n\n<a name="api_nan_property_setter"></a>\n### NAN_PROPERTY_SETTER(cbname)\nUse `NAN_PROPERTY_SETTER` to declare your V8 accessible property setters. Same as `NAN_PROPERTY_GETTER` but you also get a `Local<Value>` `value` object to work with.\n\n<a name="api_nan_property_enumerator"></a>\n### NAN_PROPERTY_ENUMERATOR(cbname)\nUse `NAN_PROPERTY_ENUMERATOR` to declare your V8 accessible property enumerators. You get an appropriately typed `args` object like the `args` argument to a `NAN_PROPERTY_GETTER` call.\n\nYou can use `NanReturnNull()`, `NanReturnEmptyString()`, `NanReturnUndefined()` and `NanReturnValue()` in a `NAN_PROPERTY_ENUMERATOR`.\n\n<a name="api_nan_property_deleter"></a>\n### NAN_PROPERTY_DELETER(cbname)\nUse `NAN_PROPERTY_DELETER` to declare your V8 accessible property deleters. Same as `NAN_PROPERTY_GETTER`.\n\nYou can use `NanReturnNull()`, `NanReturnEmptyString()`, `NanReturnUndefined()` and `NanReturnValue()` in a `NAN_PROPERTY_DELETER`.\n\n<a name="api_nan_property_query"></a>\n### NAN_PROPERTY_QUERY(cbname)\nUse `NAN_PROPERTY_QUERY` to declare your V8 accessible property queries. Same as `NAN_PROPERTY_GETTER`.\n\nYou can use `NanReturnNull()`, `NanReturnEmptyString()`, `NanReturnUndefined()` and `NanReturnValue()` in a `NAN_PROPERTY_QUERY`.\n\n<a name="api_nan_index_getter"></a>\n### NAN_INDEX_GETTER(cbname)\nUse `NAN_INDEX_GETTER` to declare your V8 accessible index getters. You get a `uint32_t` `index` and an appropriately typed `args` object that can act similar to the `args` argument to a `NAN_METHOD` call.\n\nYou can use `NanReturnNull()`, `NanReturnEmptyString()`, `NanReturnUndefined()` and `NanReturnValue()` in a `NAN_INDEX_GETTER`.\n\n<a name="api_nan_index_setter"></a>\n### NAN_INDEX_SETTER(cbname)\nUse `NAN_INDEX_SETTER` to declare your V8 accessible index setters. Same as `NAN_INDEX_GETTER` but you also get a `Local<Value>` `value` object to work with.\n\n<a name="api_nan_index_enumerator"></a>\n### NAN_INDEX_ENUMERATOR(cbname)\nUse `NAN_INDEX_ENUMERATOR` to declare your V8 accessible index enumerators. You get an appropriately typed `args` object like the `args` argument to a `NAN_INDEX_GETTER` call.\n\nYou can use `NanReturnNull()`, `NanReturnEmptyString()`, `NanReturnUndefined()` and `NanReturnValue()` in a `NAN_INDEX_ENUMERATOR`.\n\n<a name="api_nan_index_deleter"></a>\n### NAN_INDEX_DELETER(cbname)\nUse `NAN_INDEX_DELETER` to declare your V8 accessible index deleters. Same as `NAN_INDEX_GETTER`.\n\nYou can use `NanReturnNull()`, `NanReturnEmptyString()`, `NanReturnUndefined()` and `NanReturnValue()` in a `NAN_INDEX_DELETER`.\n\n<a name="api_nan_index_query"></a>\n### NAN_INDEX_QUERY(cbname)\nUse `NAN_INDEX_QUERY` to declare your V8 accessible index queries. Same as `NAN_INDEX_GETTER`.\n\nYou can use `NanReturnNull()`, `NanReturnEmptyString()`, `NanReturnUndefined()` and `NanReturnValue()` in a `NAN_INDEX_QUERY`.\n\n<a name="api_nan_gc_callback"></a>\n### NAN_GC_CALLBACK(cbname)\nUse `NAN_GC_CALLBACK` to declare your callbacks for `NanAddGCEpilogueCallback` and `NanAddGCPrologueCallback`. You get arguments `GCType type` and `GCCallbackFlags flags`.\n\n```c++\nstatic Persistent<Function> callback;\n\nNAN_GC_CALLBACK(gcPrologueCallback) {\n  Local<Value> argv[] = {NanNew("prologue")};\n  NanMakeCallback(NanGetCurrentContext()->Global(), NanNew(callback), 1, argv);\n}\n\nNAN_METHOD(Hook) {\n  NanScope();\n  NanAssignPersistent(callback, args[0].As<Function>());\n  NanAddGCPrologueCallback(gcPrologueCallback);\n  NanReturnValue(args.Holder());\n}\n```\n\n<a name="api_nan_weak_callback"></a>\n### NAN_WEAK_CALLBACK(cbname)\n\nUse `NAN_WEAK_CALLBACK` to define your V8 WeakReference callbacks. There is an argument object `const _NanWeakCallbackData<T, P> &data` allowing access to the weak object and the supplied parameter through its `GetValue` and `GetParameter` methods. You can even access the weak callback info object through the `GetCallbackInfo()`method, but you probably should not. `Revive()` keeps the weak object alive until the next GC round.\n\n```c++\nNAN_WEAK_CALLBACK(weakCallback) {\n  int *parameter = data.GetParameter();\n  NanMakeCallback(NanGetCurrentContext()->Global(), data.GetValue(), 0, NULL);\n  if ((*parameter)++ == 0) {\n    data.Revive();\n  } else {\n    delete parameter;\n  }\n}\n```\n\n<a name="api_nan_deprecated"></a>\n### NAN_DEPRECATED\nDeclares a function as deprecated.\n\n```c++\nstatic NAN_DEPRECATED NAN_METHOD(foo) {\n  ...\n}\n```\n\n<a name="api_nan_inline"></a>\n### NAN_INLINE\nInlines a function.\n\n```c++\nNAN_INLINE int foo(int bar) {\n  ...\n}\n```\n\n<a name="api_nan_new"></a>\n### Local&lt;T&gt; NanNew&lt;T&gt;( ... )\n\nUse `NanNew` to construct almost all v8 objects (bound `Script`s are constructed with <a href="#api_nan_compile_script">`NanCompileScript(Handle)`</a>) and make new local handles.\n\n```c++\nLocal<String> s = NanNew<String>("value");\n\n...\n\nPersistent<Object> o;\n\n...\n\nLocal<Object> lo = NanNew(o);\n\n```\n\n<a name="api_nan_undefined"></a>\n### Local&lt;Primitive&gt; NanUndefined()\n\nUse instead of `Undefined()`\n\n<a name="api_nan_null"></a>\n### Local&lt;Primitive&gt; NanNull()\n\nUse instead of `Null()`\n\n<a name="api_nan_true"></a>\n### Local&lt;Boolean&gt; NanTrue()\n\nUse instead of `True()`\n\n<a name="api_nan_false"></a>\n### Local&lt;Boolean&gt; NanFalse()\n\nUse instead of `False()`\n\n<a name="api_nan_return_value"></a>\n### NanReturnValue(Handle&lt;Value&gt;)\n\nUse `NanReturnValue` when you want to return a value from your V8 accessible method:\n\n```c++\nNAN_METHOD(Foo::Bar) {\n  ...\n\n  NanReturnValue(NanNew<String>("FooBar!"));\n}\n```\n\nNo `return` statement required.\n\n<a name="api_nan_return_undefined"></a>\n### NanReturnUndefined()\n\nUse `NanReturnUndefined` when you don\'t want to return anything from your V8 accessible method:\n\n```c++\nNAN_METHOD(Foo::Baz) {\n  ...\n\n  NanReturnUndefined();\n}\n```\n\n<a name="api_nan_return_null"></a>\n### NanReturnNull()\n\nUse `NanReturnNull` when you want to return `Null` from your V8 accessible method:\n\n```c++\nNAN_METHOD(Foo::Baz) {\n  ...\n\n  NanReturnNull();\n}\n```\n\n<a name="api_nan_return_empty_string"></a>\n### NanReturnEmptyString()\n\nUse `NanReturnEmptyString` when you want to return an empty `String` from your V8 accessible method:\n\n```c++\nNAN_METHOD(Foo::Baz) {\n  ...\n\n  NanReturnEmptyString();\n}\n```\n\n<a name="api_nan_return_this"></a>\n### NanReturnThis()\n\nUse `NanReturnThis` when you want to return `This` from your V8 accessible method:\n\n```c++\nNAN_METHOD(Foo::Baz) {\n  ...\n\n  NanReturnThis();\n}\n```\n\n<a name="api_nan_return_holder"></a>\n### NanReturnHolder()\n\nUse `NanReturnHolder` when you want to return `Holder` from your V8 accessible method:\n\n```c++\nNAN_METHOD(Foo::Baz) {\n  ...\n\n  NanReturnHolder();\n}\n```\n\n<a name="api_nan_scope"></a>\n### NanScope()\n\nThe introduction of `isolate` references for many V8 calls in Node 0.11 makes `NanScope()` necessary, use it in place of `HandleScope scope` when you do not wish to return handles (`Handle` or `Local`) to the surrounding scope (or in functions directly exposed to V8, as they do not return values in the normal sense):\n\n```c++\nNAN_METHOD(Foo::Bar) {\n  NanScope();\n\n  NanReturnValue(NanNew<String>("FooBar!"));\n}\n```\n\nThis method is not directly exposed to V8, nor does it return a handle, so it uses an unescapable scope:\n\n```c++\nbool Foo::Bar() {\n  NanScope();\n\n  Local<Boolean> val = NanFalse();\n  ...\n  return val->Value();\n}\n```\n\n<a name="api_nan_escapable_scope"></a>\n### NanEscapableScope()\n\nThe separation of handle scopes into escapable and inescapable scopes makes `NanEscapableScope()` necessary, use it in place of `HandleScope scope` when you later wish to return a handle (`Handle` or `Local`) from the scope, this is for internal functions not directly exposed to V8:\n\n```c++\nHandle<String> Foo::Bar() {\n  NanEscapableScope();\n\n  return NanEscapeScope(NanNew<String>("FooBar!"));\n}\n```\n\n<a name="api_nan_escape_scope"></a>\n### Local&lt;T&gt; NanEscapeScope(Handle&lt;T&gt; value);\nUse together with `NanEscapableScope` to escape the scope. Corresponds to `HandleScope::Close` or `EscapableHandleScope::Escape`.\n\n<a name="api_nan_locker"></a>\n### NanLocker()\n\nThe introduction of `isolate` references for many V8 calls in Node 0.11 makes `NanLocker()` necessary, use it in place of `Locker locker`:\n\n```c++\nNAN_METHOD(Foo::Bar) {\n  NanLocker();\n  ...\n  NanUnlocker();\n}\n```\n\n<a name="api_nan_unlocker"></a>\n### NanUnlocker()\n\nThe introduction of `isolate` references for many V8 calls in Node 0.11 makes `NanUnlocker()` necessary, use it in place of `Unlocker unlocker`:\n\n```c++\nNAN_METHOD(Foo::Bar) {\n  NanLocker();\n  ...\n  NanUnlocker();\n}\n```\n\n<a name="api_nan_get_internal_field_pointer"></a>\n### void * NanGetInternalFieldPointer(Handle&lt;Object&gt;, int)\n\nGets a pointer to the internal field with at `index` from a V8 `Object` handle.\n\n```c++\nLocal<Object> obj;\n...\nNanGetInternalFieldPointer(obj, 0);\n```\n<a name="api_nan_set_internal_field_pointer"></a>\n### void NanSetInternalFieldPointer(Handle&lt;Object&gt;, int, void *)\n\nSets the value of the internal field at `index` on a V8 `Object` handle.\n\n```c++\nstatic Persistent<Function> dataWrapperCtor;\n...\nLocal<Object> wrapper = NanNew(dataWrapperCtor)->NewInstance();\nNanSetInternalFieldPointer(wrapper, 0, this);\n```\n\n<a name="api_nan_object_wrap_handle"></a>\n### Local&lt;Object&gt; NanObjectWrapHandle(Object)\n\nWhen you want to fetch the V8 object handle from a native object you\'ve wrapped with Node\'s `ObjectWrap`, you should use `NanObjectWrapHandle`:\n\n```c++\nNanObjectWrapHandle(iterator)->Get(NanNew<String>("end"))\n```\n\n<a name="api_nan_symbol"></a>\n### ~~Local&lt;String&gt; NanSymbol(const char *)~~\n\nDeprecated. Use `NanNew<String>` instead.\n~~Use to create string symbol objects (i.e. `v8::String::NewSymbol(x)`), for getting and setting object properties, or names of objects.~~\n\n```c++\nbool foo = false;\nif (obj->Has(NanNew<String>("foo")))\n  foo = optionsObj->Get(NanNew<String>("foo"))->BooleanValue()\n```\n\n<a name="api_nan_get_pointer_safe"></a>\n### Type NanGetPointerSafe(Type *[, Type])\n\nA helper for getting values from optional pointers. If the pointer is `NULL`, the function returns the optional default value, which defaults to `0`.  Otherwise, the function returns the value the pointer points to.\n\n```c++\nchar *plugh(uint32_t *optional) {\n  char res[] = "xyzzy";\n  uint32_t param = NanGetPointerSafe<uint32_t>(optional, 0x1337);\n  switch (param) {\n    ...\n  }\n  NanSetPointerSafe<uint32_t>(optional, 0xDEADBEEF);\n}  \n```\n\n<a name="api_nan_set_pointer_safe"></a>\n### bool NanSetPointerSafe(Type *, Type)\n\nA helper for setting optional argument pointers. If the pointer is `NULL`, the function simply returns `false`.  Otherwise, the value is assigned to the variable the pointer points to.\n\n```c++\nconst char *plugh(size_t *outputsize) {\n  char res[] = "xyzzy";\n  if !(NanSetPointerSafe<size_t>(outputsize, strlen(res) + 1)) {\n    ...\n  }\n\n  ...\n}\n```\n\n<a name="api_nan_raw_string"></a>\n### ~~void* NanRawString(Handle&lt;Value&gt;, enum Nan::Encoding, size_t *, void *, size_t, int)~~\n\nDeprecated. Use something else.\n\n~~When you want to convert a V8 `String` to a `char*` buffer, use `NanRawString`. You have to supply an encoding as well as a pointer to a variable that will be assigned the number of bytes in the returned string. It is also possible to supply a buffer and its length to the function in order not to have a new buffer allocated. The final argument allows setting `String::WriteOptions`.\nJust remember that you\'ll end up with an object that you\'ll need to `delete[]` at some point unless you supply your own buffer:~~\n\n```c++\nsize_t count;\nvoid* decoded = NanRawString(args[1], Nan::BASE64, &count, NULL, 0, String::HINT_MANY_WRITES_EXPECTED);\n...\ndelete[] reinterpret_cast<char*>(decoded);\n```\n\n<a name="api_nan_c_string"></a>\n### ~~char* NanCString(Handle&lt;Value&gt;, size_t *[, char *, size_t, int])~~\n\nDeprecated. Use `String::Utf8Value` or `NanUtf8String` instead.\n\n~~When you want to convert a V8 `String` to a null-terminated C `char*` use `NanCString`. The resulting `char*` will be UTF-8-encoded, and you need to supply a pointer to a variable that will be assigned the number of bytes in the returned string. It is also possible to supply a buffer and its length to the function in order not to have a new buffer allocated. The final argument allows optionally setting `String::WriteOptions`, which default to `v8::String::NO_OPTIONS`.\nJust remember that you\'ll end up with an object that you\'ll need to `delete[]` at some point unless you supply your own buffer:~~\n\n```c++\nsize_t count;\nchar* name = NanCString(args[0], &count);\n...\ndelete[] name;\n```\n\n<a name="api_nan_ascii_string"></a>\n### NanAsciiString\n\nContrary to the name, this is not actually an ASCII string, it is a one-byte string with no particular encoding. Do not use unless you actually need this incorrect legacy behavior. Consider fixing your broken code instead. If you actually have a proper ASCII-string, use UTF-8, which is a proper superset of ASCII.\nConvert a `String` to zero-terminated, sort-of Ascii-encoded `char *`. The underlying buffer is freed when the owner object goes out of scope, so make a copy or heap allocation if you need it to stick around.\n\n```c++\nNAN_METHOD(foo) {\n  NanScope();\n  NanReturnValue(NanNew(*NanAsciiString(arg[0])));\n}\n```\n\n####*WRONG*:\nthe buffer `str` points to has been freed when `baz` was destroyed:\n```c++\nstatic char *str;\n\nNAN_METHOD(bar) {\n  NanScope();\n  NanAsciiString baz(arg[0]);\n\n  str = *baz;\n  NanReturnUndefined(); // baz goes out of scope, freeing str\n}\n\n...\n\nprintf(str); // use-after-free error\n```\n\n####*RIGHT*:\n```c++\nstatic NanAsciiString *str;\n\nNAN_METHOD(bar) {\n  NanScope();\n  str = new NanAsciiString(arg[0]);\n  NanReturnUndefined();\n}\n\n...\n\nprintf(**str);\n```\n\n<a name="api_nan_utf8_string"></a>\n### NanUtf8String\n\nEquivalent to `String::Utf8Value`, it only exists for the sake of completeness.\nConvert a `String` to zero-terminated, Utf8-encoded `char *`. The underlying buffer is freed when the owner object goes out of scope, so make a copy or heap allocation if you need it to stick around.\n\n```c++\nNAN_METHOD(foo) {\n  NanScope();\n  NanReturnValue(NanNew(*NanUtf8String(arg[0])));\n}\n```\n\n####*WRONG*:\nthe buffer `str` points to has been freed when `baz` was destroyed:\n```c++\nstatic char *str;\n\nNAN_METHOD(bar) {\n  NanScope();\n  NanUtf8String baz(arg[0]);\n\n  str = *baz;\n  NanReturnUndefined(); // baz goes out of scope, freeing str\n}\n\n...\n\nprintf(str); // use-after-free error\n```\n\n####*RIGHT*:\n```c++\nstatic NanUtf8String *str;\n\nNAN_METHOD(bar) {\n  NanScope();\n  str = new NanUtf8String(arg[0]);\n  NanReturnUndefined();\n}\n\n...\n\nprintf(**str);\n```\n\n\n<a name="api_nan_ucs2_string"></a>\n### NanUcs2String\n\nEquivalent to `String::Value`, it only exists for the sake of completeness.\nConvert a `String` to zero-terminated, Ucs2-encoded `uint16_t *`. The underlying buffer is freed when the owner object goes out of scope, so make a copy or heap allocation if you need it to stick around.\n\n```c++\nNAN_METHOD(foo) {\n  NanScope();\n  NanReturnValue(NanNew(*NanUcs2String(arg[0])));\n}\n```\n\n####*WRONG*:\nthe buffer `str` points to has been freed when `baz` was destroyed:\n```c++\nstatic char *str;\n\nNAN_METHOD(bar) {\n  NanScope();\n  NanUcs2String baz(arg[0]);\n\n  str = *baz;\n  NanReturnUndefined(); // baz goes out of scope, freeing str\n}\n\n...\n\nprintf(str); // use-after-free error\n```\n\n####*RIGHT*:\n```c++\nstatic NanUcs2String *str;\n\nNAN_METHOD(bar) {\n  NanScope();\n  str = new NanUcs2String(arg[0]);\n  NanReturnUndefined();\n}\n\n...\n\nprintf(**str);\n```\n\n<a name="api_nan_boolean_option_value"></a>\n### bool NanBooleanOptionValue(Handle&lt;Value&gt;, Handle&lt;String&gt;[, bool])\n\nWhen you have an "options" object that you need to fetch properties from, boolean options can be fetched with this pair. They check first if the object exists (`IsEmpty`), then if the object has the given property (`Has`) then they get and convert/coerce the property to a `bool`.\n\nThe optional last parameter is the *default* value, which is `false` if left off:\n\n```c++\n// `foo` is false unless the user supplies a truthy value for it\nbool foo = NanBooleanOptionValue(optionsObj, NanNew<String>("foo"));\n// `bar` is true unless the user supplies a falsy value for it\nbool bar = NanBooleanOptionValueDefTrue(optionsObj, NanNew<String>("bar"), true);\n```\n\n<a name="api_nan_uint32_option_value"></a>\n### uint32_t NanUInt32OptionValue(Handle&lt;Value&gt;, Handle&lt;String&gt;, uint32_t)\n\nSimilar to `NanBooleanOptionValue`, use `NanUInt32OptionValue` to fetch an integer option from your options object. Can be any kind of JavaScript `Number` and it will be coerced to an unsigned 32-bit integer.\n\nRequires all 3 arguments as a default is not optional:\n\n```c++\nuint32_t count = NanUInt32OptionValue(optionsObj, NanNew<String>("count"), 1024);\n```\n\n<a name="api_nan_error"></a>\n### NanError(message), NanTypeError(message), NanRangeError(message)\n\nFor making `Error`, `TypeError` and `RangeError` objects.\n\n```c++\nLocal<Value> res = NanError("you must supply a callback argument");\n```\n\n<a name="api_nan_throw_error"></a>\n### NanThrowError(message), NanThrowTypeError(message), NanThrowRangeError(message), NanThrowError(Local&lt;Value&gt;), NanThrowError(Local&lt;Value&gt;, int)\n\nFor throwing `Error`, `TypeError` and `RangeError` objects.\n\n```c++\nNanThrowError("you must supply a callback argument");\n```\n\nCan also handle any custom object you may want to throw. If used with the error code argument, it will add the supplied error code to the error object as a property called `code`.\n\n<a name="api_nan_new_buffer_handle"></a>\n### Local&lt;Object&gt; NanNewBufferHandle(char *, uint32_t), Local&lt;Object&gt; NanNewBufferHandle(uint32_t)\n\nThe `Buffer` API has changed a little in Node 0.11, this helper provides consistent access to `Buffer` creation:\n\n```c++\nNanNewBufferHandle((char*)value.data(), value.size());\n```\n\nCan also be used to initialize a `Buffer` with just a `size` argument.\n\nCan also be supplied with a `NanFreeCallback` and a hint for the garbage collector.\n\n<a name="api_nan_buffer_use"></a>\n### Local&lt;Object&gt; NanBufferUse(char*, uint32_t)\n\n`Buffer::New(char*, uint32_t)` prior to 0.11 would make a copy of the data.\nWhile it was possible to get around this, it required a shim by passing a\ncallback. So the new API `Buffer::Use(char*, uint32_t)` was introduced to remove\nneeding to use this shim.\n\n`NanBufferUse` uses the `char*` passed as the backing data, and will free the\nmemory automatically when the weak callback is called. Keep this in mind, as\ncareless use can lead to "double free or corruption" and other cryptic failures.\n\n<a name="api_nan_has_instance"></a>\n### bool NanHasInstance(Persistent&lt;FunctionTemplate&gt;&, Handle&lt;Value&gt;)\n\nCan be used to check the type of an object to determine it is of a particular class you have already defined and have a `Persistent<FunctionTemplate>` handle for.\n\n<a name="api_nan_new_context_handle"></a>\n### Local&lt;Context&gt; NanNewContextHandle([ExtensionConfiguration*, Handle&lt;ObjectTemplate&gt;, Handle&lt;Value&gt;])\nCreates a new `Local<Context>` handle.\n\n```c++\nLocal<FunctionTemplate> ftmpl = NanNew<FunctionTemplate>();\nLocal<ObjectTemplate> otmpl = ftmpl->InstanceTemplate();\nLocal<Context> ctx =  NanNewContextHandle(NULL, otmpl);\n```\n\n<a name="api_nan_get_current_context"></a>\n### Local&lt;Context&gt; NanGetCurrentContext()\n\nGets the current context.\n\n```c++\nLocal<Context> ctx = NanGetCurrentContext();\n```\n\n<a name="api_nan_dispose_persistent"></a>\n### void NanDisposePersistent(Persistent&lt;T&gt; &)\n\nUse `NanDisposePersistent` to dispose a `Persistent` handle.\n\n```c++\nNanDisposePersistent(persistentHandle);\n```\n\n<a name="api_nan_assign_persistent"></a>\n### NanAssignPersistent(handle, object)\n\nUse `NanAssignPersistent` to assign a non-`Persistent` handle to a `Persistent` one. You can no longer just declare a `Persistent` handle and assign directly to it later, you have to `Reset` it in Node 0.11, so this makes it easier.\n\nIn general it is now better to place anything you want to protect from V8\'s garbage collector as properties of a generic `Object` and then assign that to a `Persistent`. This works in older versions of Node also if you use `NanAssignPersistent`:\n\n```c++\nPersistent<Object> persistentHandle;\n\n...\n\nLocal<Object> obj = NanNew<Object>();\nobj->Set(NanNew<String>("key"), keyHandle); // where keyHandle might be a Local<String>\nNanAssignPersistent(persistentHandle, obj)\n```\n\n<a name="api_nan_make_weak_persistent"></a>\n### _NanWeakCallbackInfo&lt;T, P&gt;* NanMakeWeakPersistent(Handle&lt;T&gt;, P*, _NanWeakCallbackInfo&lt;T, P&gt;::Callback)\n\nCreates a weak persistent handle with the supplied parameter and `NAN_WEAK_CALLBACK`.\n\n```c++\nNAN_WEAK_CALLBACK(weakCallback) {\n\n...\n\n}\n\nLocal<Function> func;\n\n...\n\nint *parameter = new int(0);\nNanMakeWeakPersistent(func, parameter, &weakCallback);\n```\n\n<a name="api_nan_set_template"></a>\n### NanSetTemplate(templ, name, value [, attributes])\n\nUse to add properties on object and function templates.\n\n<a name="api_nan_set_prototype_template"></a>\n### NanSetPrototypeTemplate(templ, name, value [, attributes])\n\nUse to add prototype properties on function templates.\n\n<a name="api_nan_set_instance_template"></a>\n### NanSetInstanceTemplate(templ, name, value [, attributes])\n\nUse to add instance properties on function templates.\n\n<a name="api_nan_make_callback"></a>\n### NanMakeCallback(target, func, argc, argv)\n\nUse instead of `node::MakeCallback` to call javascript functions. This (or `NanCallback`) is the only proper way of calling functions. You must _*never, ever*_ directly use `Function::Call`, it will lead to run-time failures.\n\n<a name="api_nan_compile_script"></a>\n### NanCompileScript(Handle<String> s [, const ScriptOrigin&amp; origin])\n\nUse to create new scripts bound to the current context.\n\n<a name="api_nan_run_script"></a>\n### NanRunScript(script)\n\nUse to run both bound and unbound scripts.\n\n<a name="api_nan_adjust_external_memory"></a>\n### NanAdjustExternalMemory(int change_in_bytes)\n\nSimply does `AdjustAmountOfExternalAllocatedMemory`, note that the argument and returned value have type `int`.\n\n<a name="api_nan_add_gc_epilogue_callback"></a>\n### NanAddGCEpilogueCallback(GCEpilogueCallback callback, GCType gc_type_filter=kGCTypeAll)\n\nSimply does `AddGCEpilogueCallback`\n\n<a name="api_nan_add_gc_prologue_callback"></a>\n### NanAddGCPrologueCallback(GCPrologueCallback callback, GCType gc_type_filter=kGCTypeAll)\n\nSimply does `AddGCPrologueCallback`\n\n<a name="api_nan_remove_gc_epilogue_callback"></a>\n### NanRemoveGCEpilogueCallback(GCEpilogueCallback callback)\n\nSimply does `RemoveGCEpilogueCallback`\n\n<a name="api_nan_remove_gc_prologue_callback"></a>\n### NanRemoveGCPrologueCallback(GCPrologueCallback callback)\n\nSimply does `RemoveGCPrologueCallback`\n\n<a name="api_nan_get_heap_statistics"></a>\n### NanGetHeapStatistics(HeapStatistics *heap_statistics)\n\nSimply does `GetHeapStatistics`\n\n<a name="api_nan_callback"></a>\n### NanCallback\n\nBecause of the difficulties imposed by the changes to `Persistent` handles in V8 in Node 0.11, creating `Persistent` versions of your `Handle<Function>` is annoyingly tricky. `NanCallback` makes it easier by taking your handle, making it persistent until the `NanCallback` is deleted and even providing a handy `Call()` method to fetch and execute the callback `Function`.\n\n```c++\nLocal<Function> callbackHandle = args[0].As<Function>();\nNanCallback *callback = new NanCallback(callbackHandle);\n// pass `callback` around and it\'s safe from GC until you:\ndelete callback;\n```\n\nYou can execute the callback like so:\n\n```c++\n// no arguments:\ncallback->Call(0, NULL);\n\n// an error argument:\nHandle<Value> argv[] = {\n  NanError(NanNew<String>("fail!"))\n};\ncallback->Call(1, argv);\n\n// a success argument:\nHandle<Value> argv[] = {\n  NanNull(),\n  NanNew<String>("w00t!")\n};\ncallback->Call(2, argv);\n```\n\n`NanCallback` also has a `Local<Function> GetFunction()` method that you can use\nto fetch a local handle to the underlying callback function, as well  as a\n`void SetFunction(Handle<Function>)` for setting the callback on the\n`NanCallback`. You can check if a `NanCallback` is empty with the `bool IsEmpty()` method. Additionally a generic constructor is available for using\n`NanCallback` without performing heap allocations.\n\n<a name="api_nan_async_worker"></a>\n### NanAsyncWorker\n\n`NanAsyncWorker` is an abstract class that you can subclass to have much of the annoying async queuing and handling taken care of for you. It can even store arbitrary V8 objects for you and have them persist while the async work is in progress.\n\nSee a rough outline of the implementation:\n\n```c++\nclass NanAsyncWorker {\npublic:\n  NanAsyncWorker (NanCallback *callback);\n\n  // Clean up persistent handles and delete the *callback\n  virtual ~NanAsyncWorker ();\n\n  // Check the `ErrorMessage()` and call HandleOKCallback()\n  // or HandleErrorCallback depending on whether it has been set or not\n  virtual void WorkComplete ();\n\n  // You must implement this to do some async work. If there is an\n  // error then use `SetErrorMessage()` to set an error message and the callback will\n  // be passed that string in an Error object\n  virtual void Execute ();\n\n  // Save a V8 object in a Persistent handle to protect it from GC\n  void SaveToPersistent(const char *key, Local<Object> &obj);\n\n  // Fetch a stored V8 object (don\'t call from within `Execute()`)\n  Local<Object> GetFromPersistent(const char *key);\n\n  // Get the error message (or NULL)\n  const char *ErrorMessage();\n\n  // Set an error message\n  void SetErrorMessage(const char *msg);\n\nprotected:\n  // Default implementation calls the callback function with no arguments.\n  // Override this to return meaningful data\n  virtual void HandleOKCallback ();\n\n  // Default implementation calls the callback function with an Error object\n  // wrapping the `errmsg` string\n  virtual void HandleErrorCallback ();\n};\n```\n\n<a name="api_nan_async_queue_worker"></a>\n### NanAsyncQueueWorker(NanAsyncWorker *)\n\n`NanAsyncQueueWorker` will run a `NanAsyncWorker` asynchronously via libuv. Both the *execute* and *after_work* steps are taken care of for you&mdash;most of the logic for this is embedded in `NanAsyncWorker`.\n\n<a name="api"></a>\n### Tests\n\nTo run the NAN tests do:\n\n``` sh\nnpm install\nnpm run-script rebuild-tests\nnpm test\n```\n\nOr just:\n\n``` sh\nnpm install\nmake test\n```\n\n### Contributors\n\nNAN is only possible due to the excellent work of the following contributors:\n\n<table><tbody>\n<tr><th align="left">Rod Vagg</th><td><a href="https://github.com/rvagg">GitHub/rvagg</a></td><td><a href="http://twitter.com/rvagg">Twitter/@rvagg</a></td></tr>\n<tr><th align="left">Benjamin Byholm</th><td><a href="https://github.com/kkoopa/">GitHub/kkoopa</a></td><td>-</td></tr>\n<tr><th align="left">Trevor Norris</th><td><a href="https://github.com/trevnorris">GitHub/trevnorris</a></td><td><a href="http://twitter.com/trevnorris">Twitter/@trevnorris</a></td></tr>\n<tr><th align="left">Nathan Rajlich</th><td><a href="https://github.com/TooTallNate">GitHub/TooTallNate</a></td><td><a href="http://twitter.com/TooTallNate">Twitter/@TooTallNate</a></td></tr>\n<tr><th align="left">Brett Lawson</th><td><a href="https://github.com/brett19">GitHub/brett19</a></td><td><a href="http://twitter.com/brett19x">Twitter/@brett19x</a></td></tr>\n<tr><th align="left">Ben Noordhuis</th><td><a href="https://github.com/bnoordhuis">GitHub/bnoordhuis</a></td><td><a href="http://twitter.com/bnoordhuis">Twitter/@bnoordhuis</a></td></tr>\n<tr><th align="left">David Siegel</th><td><a href="https://github.com/agnat">GitHub/agnat</a></td><td>-</td></tr>\n</tbody></table>\n\nLicence &amp; copyright\n-----------------------\n\nCopyright (c) 2015 NAN contributors (listed above).\n\nNative Abstractions for Node.js is licensed under an MIT license. All rights not explicitly granted in the MIT license are reserved. See the included LICENSE file for more details.\n',
1269 silly resolved     readmeFilename: 'README.md',
1269 silly resolved     bugs: { url: 'https://github.com/rvagg/nan/issues' },
1269 silly resolved     homepage: 'https://github.com/rvagg/nan',
1269 silly resolved     _id: 'nan@1.5.3',
1269 silly resolved     _from: 'nan@~1.5.1' } ]
1270 info install nan@1.5.3 into /Users/craignishina/Workspace/IntelHackathon/server/node_modules/ffi/node_modules/ref-struct/node_modules/ref
1271 info installOne nan@1.5.3
1272 info /Users/craignishina/Workspace/IntelHackathon/server/node_modules/ffi/node_modules/ref/node_modules/nan unbuild
1273 info /Users/craignishina/Workspace/IntelHackathon/server/node_modules/ffi/node_modules/ref-struct/node_modules/ref/node_modules/nan unbuild
1274 verbose tar unpack /Users/craignishina/.npm/nan/1.5.3/package.tgz
1275 silly lockFile 163893fa-ode-modules-ref-node-modules-nan tar:///Users/craignishina/Workspace/IntelHackathon/server/node_modules/ffi/node_modules/ref/node_modules/nan
1276 verbose lock tar:///Users/craignishina/Workspace/IntelHackathon/server/node_modules/ffi/node_modules/ref/node_modules/nan /Users/craignishina/.npm/163893fa-ode-modules-ref-node-modules-nan.lock
1277 silly lockFile cf8abff4-ishina-npm-nan-1-5-3-package-tgz tar:///Users/craignishina/.npm/nan/1.5.3/package.tgz
1278 verbose lock tar:///Users/craignishina/.npm/nan/1.5.3/package.tgz /Users/craignishina/.npm/cf8abff4-ishina-npm-nan-1-5-3-package-tgz.lock
1279 verbose tar unpack /Users/craignishina/.npm/nan/1.5.3/package.tgz
1280 silly lockFile d74b6e42-ode-modules-ref-node-modules-nan tar:///Users/craignishina/Workspace/IntelHackathon/server/node_modules/ffi/node_modules/ref-struct/node_modules/ref/node_modules/nan
1281 verbose lock tar:///Users/craignishina/Workspace/IntelHackathon/server/node_modules/ffi/node_modules/ref-struct/node_modules/ref/node_modules/nan /Users/craignishina/.npm/d74b6e42-ode-modules-ref-node-modules-nan.lock
1282 silly lockFile cf8abff4-ishina-npm-nan-1-5-3-package-tgz tar:///Users/craignishina/.npm/nan/1.5.3/package.tgz
1283 verbose lock tar:///Users/craignishina/.npm/nan/1.5.3/package.tgz /Users/craignishina/.npm/cf8abff4-ishina-npm-nan-1-5-3-package-tgz.lock
1284 silly gunzTarPerm modes [ '755', '644' ]
1285 silly gunzTarPerm extractEntry package.json
1286 silly gunzTarPerm extractEntry README.md
1287 silly gunzTarPerm extractEntry include_dirs.js
1288 silly gunzTarPerm extractEntry LICENSE.md
1289 silly gunzTarPerm extractEntry appveyor.yml
1290 silly gunzTarPerm extractEntry CHANGELOG.md
1291 silly gunzTarPerm extractEntry nan.h
1292 silly gunzTarPerm extractEntry nan_implementation_12_inl.h
1293 silly gunzTarPerm extractEntry nan_implementation_pre_12_inl.h
1294 silly gunzTarPerm extractEntry nan_new.h
1295 silly gunzTarPerm extractEntry .dntrc
1296 silly lockFile 163893fa-ode-modules-ref-node-modules-nan tar:///Users/craignishina/Workspace/IntelHackathon/server/node_modules/ffi/node_modules/ref/node_modules/nan
1297 silly lockFile 163893fa-ode-modules-ref-node-modules-nan tar:///Users/craignishina/Workspace/IntelHackathon/server/node_modules/ffi/node_modules/ref/node_modules/nan
1298 silly lockFile cf8abff4-ishina-npm-nan-1-5-3-package-tgz tar:///Users/craignishina/.npm/nan/1.5.3/package.tgz
1299 silly lockFile cf8abff4-ishina-npm-nan-1-5-3-package-tgz tar:///Users/craignishina/.npm/nan/1.5.3/package.tgz
1300 info preinstall nan@1.5.3
1301 verbose readDependencies using package.json deps
1302 verbose readDependencies using package.json deps
1303 silly resolved []
1304 verbose about to build /Users/craignishina/Workspace/IntelHackathon/server/node_modules/ffi/node_modules/ref/node_modules/nan
1305 info build /Users/craignishina/Workspace/IntelHackathon/server/node_modules/ffi/node_modules/ref/node_modules/nan
1306 verbose linkStuff [ false,
1306 verbose linkStuff   false,
1306 verbose linkStuff   false,
1306 verbose linkStuff   '/Users/craignishina/Workspace/IntelHackathon/server/node_modules/ffi/node_modules/ref/node_modules' ]
1307 info linkStuff nan@1.5.3
1308 verbose linkBins nan@1.5.3
1309 verbose linkMans nan@1.5.3
1310 verbose rebuildBundles nan@1.5.3
1311 info install nan@1.5.3
1312 info postinstall nan@1.5.3
1313 verbose about to build /Users/craignishina/Workspace/IntelHackathon/server/node_modules/ffi/node_modules/ref
1314 info build /Users/craignishina/Workspace/IntelHackathon/server/node_modules/ffi/node_modules/ref
1315 verbose linkStuff [ false,
1315 verbose linkStuff   false,
1315 verbose linkStuff   false,
1315 verbose linkStuff   '/Users/craignishina/Workspace/IntelHackathon/server/node_modules/ffi/node_modules' ]
1316 info linkStuff ref@1.0.0
1317 verbose linkBins ref@1.0.0
1318 verbose linkMans ref@1.0.0
1319 verbose rebuildBundles ref@1.0.0
1320 verbose rebuildBundles [ 'nan' ]
1321 info install ref@1.0.0
1322 verbose unsafe-perm in lifecycle true
1323 silly gunzTarPerm modes [ '755', '644' ]
1324 silly gunzTarPerm extractEntry package.json
1325 silly gunzTarPerm extractEntry README.md
1326 silly gunzTarPerm extractEntry include_dirs.js
1327 silly gunzTarPerm extractEntry LICENSE.md
1328 silly gunzTarPerm extractEntry appveyor.yml
1329 silly gunzTarPerm extractEntry CHANGELOG.md
1330 silly gunzTarPerm extractEntry nan.h
1331 silly gunzTarPerm extractEntry nan_implementation_12_inl.h
1332 silly gunzTarPerm extractEntry nan_implementation_pre_12_inl.h
1333 silly gunzTarPerm extractEntry nan_new.h
1334 silly gunzTarPerm extractEntry .dntrc
1335 silly lockFile d74b6e42-ode-modules-ref-node-modules-nan tar:///Users/craignishina/Workspace/IntelHackathon/server/node_modules/ffi/node_modules/ref-struct/node_modules/ref/node_modules/nan
1336 silly lockFile d74b6e42-ode-modules-ref-node-modules-nan tar:///Users/craignishina/Workspace/IntelHackathon/server/node_modules/ffi/node_modules/ref-struct/node_modules/ref/node_modules/nan
1337 silly lockFile cf8abff4-ishina-npm-nan-1-5-3-package-tgz tar:///Users/craignishina/.npm/nan/1.5.3/package.tgz
1338 silly lockFile cf8abff4-ishina-npm-nan-1-5-3-package-tgz tar:///Users/craignishina/.npm/nan/1.5.3/package.tgz
1339 info preinstall nan@1.5.3
1340 verbose readDependencies using package.json deps
1341 verbose readDependencies using package.json deps
1342 silly resolved []
1343 verbose about to build /Users/craignishina/Workspace/IntelHackathon/server/node_modules/ffi/node_modules/ref-struct/node_modules/ref/node_modules/nan
1344 info build /Users/craignishina/Workspace/IntelHackathon/server/node_modules/ffi/node_modules/ref-struct/node_modules/ref/node_modules/nan
1345 verbose linkStuff [ false,
1345 verbose linkStuff   false,
1345 verbose linkStuff   false,
1345 verbose linkStuff   '/Users/craignishina/Workspace/IntelHackathon/server/node_modules/ffi/node_modules/ref-struct/node_modules/ref/node_modules' ]
1346 info linkStuff nan@1.5.3
1347 verbose linkBins nan@1.5.3
1348 verbose linkMans nan@1.5.3
1349 verbose rebuildBundles nan@1.5.3
1350 info install nan@1.5.3
1351 info postinstall nan@1.5.3
1352 verbose about to build /Users/craignishina/Workspace/IntelHackathon/server/node_modules/ffi/node_modules/ref-struct/node_modules/ref
1353 info build /Users/craignishina/Workspace/IntelHackathon/server/node_modules/ffi/node_modules/ref-struct/node_modules/ref
1354 verbose linkStuff [ false,
1354 verbose linkStuff   false,
1354 verbose linkStuff   false,
1354 verbose linkStuff   '/Users/craignishina/Workspace/IntelHackathon/server/node_modules/ffi/node_modules/ref-struct/node_modules' ]
1355 info linkStuff ref@0.3.5
1356 verbose linkBins ref@0.3.5
1357 verbose linkMans ref@0.3.5
1358 verbose rebuildBundles ref@0.3.5
1359 verbose rebuildBundles [ 'nan' ]
1360 info install ref@0.3.5
1361 verbose unsafe-perm in lifecycle true
1362 info postinstall ref@1.0.0
1363 info postinstall ref@0.3.5
1364 verbose about to build /Users/craignishina/Workspace/IntelHackathon/server/node_modules/ffi/node_modules/ref-struct
1365 info build /Users/craignishina/Workspace/IntelHackathon/server/node_modules/ffi/node_modules/ref-struct
1366 verbose linkStuff [ false,
1366 verbose linkStuff   false,
1366 verbose linkStuff   false,
1366 verbose linkStuff   '/Users/craignishina/Workspace/IntelHackathon/server/node_modules/ffi/node_modules' ]
1367 info linkStuff ref-struct@1.0.0
1368 verbose linkBins ref-struct@1.0.0
1369 verbose linkMans ref-struct@1.0.0
1370 verbose rebuildBundles ref-struct@1.0.0
1371 verbose rebuildBundles [ 'ref' ]
1372 info install ref-struct@1.0.0
1373 info postinstall ref-struct@1.0.0
1374 verbose about to build /Users/craignishina/Workspace/IntelHackathon/server/node_modules/ffi
1375 info build /Users/craignishina/Workspace/IntelHackathon/server/node_modules/ffi
1376 verbose linkStuff [ false,
1376 verbose linkStuff   false,
1376 verbose linkStuff   false,
1376 verbose linkStuff   '/Users/craignishina/Workspace/IntelHackathon/server/node_modules' ]
1377 info linkStuff ffi@1.2.7
1378 verbose linkBins ffi@1.2.7
1379 verbose linkMans ffi@1.2.7
1380 verbose rebuildBundles ffi@1.2.7
1381 verbose rebuildBundles [ 'bindings', 'debug', 'ref', 'ref-struct' ]
1382 info install ffi@1.2.7
1383 verbose unsafe-perm in lifecycle true
1384 info ffi@1.2.7 Failed to exec install script
1385 info /Users/craignishina/Workspace/IntelHackathon/server/node_modules/ffi unbuild
1386 info preuninstall ffi@1.2.7
1387 info uninstall ffi@1.2.7
1388 verbose true,/Users/craignishina/Workspace/IntelHackathon/server/node_modules,/Users/craignishina/Workspace/IntelHackathon/server/node_modules unbuild ffi@1.2.7
1389 info postuninstall ffi@1.2.7
1390 error ffi@1.2.7 install: `node-gyp rebuild`
1390 error Exit status 1
1391 error Failed at the ffi@1.2.7 install script.
1391 error This is most likely a problem with the ffi package,
1391 error not with npm itself.
1391 error Tell the author that this fails on your system:
1391 error     node-gyp rebuild
1391 error You can get their info via:
1391 error     npm owner ls ffi
1391 error There is likely additional logging output above.
1392 error System Darwin 14.1.0
1393 error command "/Users/craignishina/Applications/node/bin/node" "/Users/craignishina/Applications/node/bin/npm" "install"
1394 error cwd /Users/craignishina/Workspace/IntelHackathon/server
1395 error node -v v0.10.25
1396 error npm -v 1.3.24
1397 error code ELIFECYCLE
1398 verbose exit [ 1, true ]
